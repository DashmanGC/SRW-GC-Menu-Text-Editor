/*
 * Copyright (C) 2014 Dashman
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

/*
 * UserInterfaceMTE.java
 *
 * Created on 27-may-2014, 15:49:02
 */

package srwgcmenutexteditor;

import java.io.IOException;
import java.io.RandomAccessFile;
import java.io.UnsupportedEncodingException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Jonatan
 */
public class UserInterfaceMTE extends javax.swing.JFrame {

    int[] block_offsets;   // Offsets at the beginning of the file (123 pointers)

    TextBlock[] t_blocks;   // We'll store the text in these, except for the frames and the libraries
    byte[][] d_blocks;  // Here's where we'll store the non-text blocks (107)

    // Unit forms are very simple, not worth making a new structure
    String[][] UnitForms;

    CharLibEntry[] CharLib; // Character Library
    RobLibEntry[] RobLib;   // Robot Library

    String lastDirectory = "."; // The last directory where a file was opened / saved
    boolean file_loaded = false;

    // Current pages being displayed
    int current_tab = 0;

    int page_character = 0;
    int page_robot = 0;
    int page_weapon = 0;
    int page_terrain = 0;
    int page_seishin = 0;
    int page_epart = 0;
    int page_ppart = 0;
    int page_title = 0;
    int page_forms = 0;
    int page_charLib = 0;
    int page_roboLib = 0;

    // Last pages to show in each tab
    // These are hardcoded, but they're easy to obtain programatically
    // Basically, last_X = number_of_X / textfields_of_its_tab
    int last_character = 33;
    int last_robot = 19;
    int last_weapon = 67;
    int last_terrain = 13;
    int last_seishin = 7;
    int last_epart = 10;
    int last_ppart = 9;
    int last_title = 7;
    int last_forms = 0;
    int last_charLib = 66;
    int last_roboLib = 59;

    String separator_desc = "";

    /** Creates new form UserInterfaceMTE */
    public UserInterfaceMTE() {
        initComponents();
        
        this.setIconImage(new ImageIcon(getClass().getClassLoader().getResource("resources/icons/logo.png")).getImage());

        byte[] sep_bytes = new byte[2];
        sep_bytes[0] = 13 & 0xff;
        sep_bytes[1] = 10 & 0xff;

        try {
            separator_desc = new String(sep_bytes, "Shift-JIS");
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(UserInterfaceMTE.class.getName()).log(Level.SEVERE, null, ex);
        }

        // Add key bindings
        /*
        buttonNext.getInputMap().put(javax.swing.KeyStroke.getKeyStroke("PAGE_DOWN"), "pressed");
        buttonBack.getInputMap().put(javax.swing.KeyStroke.getKeyStroke("PAGE_UP"), "pressed");

        buttonNext.getActionMap().put("pressed", new javax.swing.AbstractAction() {
            public void actionPerformed(ActionEvent e) {
                buttonNext.doClick();
            }
        });

        buttonBack.getActionMap().put("pressed", new javax.swing.AbstractAction() {
            public void actionPerformed(ActionEvent e) {
                buttonBack.doClick();
            }
        });*/

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tabsPanel = new javax.swing.JTabbedPane();
        tabCharacters = new javax.swing.JPanel();
        labelChar0 = new javax.swing.JLabel();
        labelCharFName0 = new javax.swing.JLabel();
        labelCharSName0 = new javax.swing.JLabel();
        textfieldCharFName0 = new javax.swing.JTextField();
        textfieldCharSName0 = new javax.swing.JTextField();
        labelChar1 = new javax.swing.JLabel();
        labelCharFName1 = new javax.swing.JLabel();
        labelCharSName1 = new javax.swing.JLabel();
        textfieldCharFName1 = new javax.swing.JTextField();
        textfieldCharSName1 = new javax.swing.JTextField();
        labelChar2 = new javax.swing.JLabel();
        labelCharFName2 = new javax.swing.JLabel();
        labelCharSName2 = new javax.swing.JLabel();
        textfieldCharFName2 = new javax.swing.JTextField();
        textfieldCharSName2 = new javax.swing.JTextField();
        labelChar3 = new javax.swing.JLabel();
        labelCharFName3 = new javax.swing.JLabel();
        labelCharSName3 = new javax.swing.JLabel();
        textfieldCharFName3 = new javax.swing.JTextField();
        textfieldCharSName3 = new javax.swing.JTextField();
        labelChar4 = new javax.swing.JLabel();
        labelCharFName4 = new javax.swing.JLabel();
        labelCharSName4 = new javax.swing.JLabel();
        textfieldCharFName4 = new javax.swing.JTextField();
        textfieldCharSName4 = new javax.swing.JTextField();
        labelChar5 = new javax.swing.JLabel();
        labelCharFName5 = new javax.swing.JLabel();
        labelCharSName5 = new javax.swing.JLabel();
        textfieldCharFName5 = new javax.swing.JTextField();
        textfieldCharSName5 = new javax.swing.JTextField();
        labelChar6 = new javax.swing.JLabel();
        labelCharFName6 = new javax.swing.JLabel();
        labelCharSName6 = new javax.swing.JLabel();
        textfieldCharSName6 = new javax.swing.JTextField();
        textfieldCharFName6 = new javax.swing.JTextField();
        labelChar7 = new javax.swing.JLabel();
        labelCharFName7 = new javax.swing.JLabel();
        labelCharSName7 = new javax.swing.JLabel();
        textfieldCharFName7 = new javax.swing.JTextField();
        textfieldCharSName7 = new javax.swing.JTextField();
        labelChar8 = new javax.swing.JLabel();
        labelCharFName8 = new javax.swing.JLabel();
        labelCharSName8 = new javax.swing.JLabel();
        textfieldCharSName8 = new javax.swing.JTextField();
        textfieldCharFName8 = new javax.swing.JTextField();
        labelChar9 = new javax.swing.JLabel();
        labelCharFName9 = new javax.swing.JLabel();
        labelCharSName9 = new javax.swing.JLabel();
        textfieldCharSName9 = new javax.swing.JTextField();
        textfieldCharFName9 = new javax.swing.JTextField();
        tabRobots = new javax.swing.JPanel();
        labelRobot00 = new javax.swing.JLabel();
        textfieldRobot00 = new javax.swing.JTextField();
        labelRobot07 = new javax.swing.JLabel();
        textfieldRobot07 = new javax.swing.JTextField();
        labelRobot01 = new javax.swing.JLabel();
        textfieldRobot01 = new javax.swing.JTextField();
        labelRobot08 = new javax.swing.JLabel();
        textfieldRobot08 = new javax.swing.JTextField();
        textfieldRobot02 = new javax.swing.JTextField();
        labelRobot02 = new javax.swing.JLabel();
        labelRobot09 = new javax.swing.JLabel();
        textfieldRobot09 = new javax.swing.JTextField();
        textfieldRobot10 = new javax.swing.JTextField();
        labelRobot10 = new javax.swing.JLabel();
        textfieldRobot03 = new javax.swing.JTextField();
        labelRobot03 = new javax.swing.JLabel();
        textfieldRobot05 = new javax.swing.JTextField();
        textfieldRobot04 = new javax.swing.JTextField();
        labelRobot04 = new javax.swing.JLabel();
        textfieldRobot12 = new javax.swing.JTextField();
        labelRobot05 = new javax.swing.JLabel();
        labelRobot12 = new javax.swing.JLabel();
        labelRobot11 = new javax.swing.JLabel();
        textfieldRobot11 = new javax.swing.JTextField();
        textfieldRobot06 = new javax.swing.JTextField();
        labelRobot06 = new javax.swing.JLabel();
        labelRobot13 = new javax.swing.JLabel();
        textfieldRobot13 = new javax.swing.JTextField();
        tabWeapons = new javax.swing.JPanel();
        labelWeapon00 = new javax.swing.JLabel();
        textfieldWeapon00 = new javax.swing.JTextField();
        labelWeapon07 = new javax.swing.JLabel();
        textfieldWeapon07 = new javax.swing.JTextField();
        labelWeapon01 = new javax.swing.JLabel();
        textfieldWeapon01 = new javax.swing.JTextField();
        labelWeapon08 = new javax.swing.JLabel();
        textfieldWeapon08 = new javax.swing.JTextField();
        textfieldWeapon02 = new javax.swing.JTextField();
        labelWeapon02 = new javax.swing.JLabel();
        labelWeapon09 = new javax.swing.JLabel();
        textfieldWeapon09 = new javax.swing.JTextField();
        textfieldWeapon10 = new javax.swing.JTextField();
        labelWeapon10 = new javax.swing.JLabel();
        textfieldWeapon03 = new javax.swing.JTextField();
        labelWeapon03 = new javax.swing.JLabel();
        textfieldWeapon05 = new javax.swing.JTextField();
        textfieldWeapon04 = new javax.swing.JTextField();
        labelWeapon04 = new javax.swing.JLabel();
        textfieldWeapon12 = new javax.swing.JTextField();
        labelWeapon05 = new javax.swing.JLabel();
        labelWeapon12 = new javax.swing.JLabel();
        labelWeapon11 = new javax.swing.JLabel();
        textfieldWeapon11 = new javax.swing.JTextField();
        textfieldWeapon06 = new javax.swing.JTextField();
        labelWeapon06 = new javax.swing.JLabel();
        labelWeapon13 = new javax.swing.JLabel();
        textfieldWeapon13 = new javax.swing.JTextField();
        tabTerrains = new javax.swing.JPanel();
        labelTerrain00 = new javax.swing.JLabel();
        textfieldTerrain00 = new javax.swing.JTextField();
        labelTerrain07 = new javax.swing.JLabel();
        textfieldTerrain07 = new javax.swing.JTextField();
        labelTerrain01 = new javax.swing.JLabel();
        textfieldTerrain01 = new javax.swing.JTextField();
        labelTerrain08 = new javax.swing.JLabel();
        textfieldTerrain08 = new javax.swing.JTextField();
        textfieldTerrain02 = new javax.swing.JTextField();
        labelTerrain02 = new javax.swing.JLabel();
        labelTerrain09 = new javax.swing.JLabel();
        textfieldTerrain09 = new javax.swing.JTextField();
        textfieldTerrain10 = new javax.swing.JTextField();
        labelTerrain10 = new javax.swing.JLabel();
        textfieldTerrain03 = new javax.swing.JTextField();
        labelTerrain03 = new javax.swing.JLabel();
        textfieldTerrain05 = new javax.swing.JTextField();
        textfieldTerrain04 = new javax.swing.JTextField();
        labelTerrain04 = new javax.swing.JLabel();
        textfieldTerrain12 = new javax.swing.JTextField();
        labelTerrain05 = new javax.swing.JLabel();
        labelTerrain12 = new javax.swing.JLabel();
        labelTerrain11 = new javax.swing.JLabel();
        textfieldTerrain11 = new javax.swing.JTextField();
        textfieldTerrain06 = new javax.swing.JTextField();
        labelTerrain06 = new javax.swing.JLabel();
        labelTerrain13 = new javax.swing.JLabel();
        textfieldTerrain13 = new javax.swing.JTextField();
        tabSeishins = new javax.swing.JPanel();
        labelSeishin0 = new javax.swing.JLabel();
        labelSeishinName0 = new javax.swing.JLabel();
        textfieldSeishinName0 = new javax.swing.JTextField();
        labelSeishinSName0 = new javax.swing.JLabel();
        textfieldSeishinSName0 = new javax.swing.JTextField();
        labelSeishinDesc0 = new javax.swing.JLabel();
        textfieldSeishinDesc1_0 = new javax.swing.JTextField();
        textfieldSeishinDesc2_0 = new javax.swing.JTextField();
        textfieldSeishinDesc3_0 = new javax.swing.JTextField();
        labelSeishin2 = new javax.swing.JLabel();
        labelSeishinName2 = new javax.swing.JLabel();
        textfieldSeishinName2 = new javax.swing.JTextField();
        labelSeishinSName2 = new javax.swing.JLabel();
        textfieldSeishinSName2 = new javax.swing.JTextField();
        labelSeishinDesc2 = new javax.swing.JLabel();
        textfieldSeishinDesc1_2 = new javax.swing.JTextField();
        textfieldSeishinDesc2_2 = new javax.swing.JTextField();
        textfieldSeishinDesc3_2 = new javax.swing.JTextField();
        labelSeishin1 = new javax.swing.JLabel();
        labelSeishinName1 = new javax.swing.JLabel();
        textfieldSeishinName1 = new javax.swing.JTextField();
        labelSeishinSName1 = new javax.swing.JLabel();
        textfieldSeishinSName1 = new javax.swing.JTextField();
        labelSeishinDesc1 = new javax.swing.JLabel();
        textfieldSeishinDesc1_1 = new javax.swing.JTextField();
        textfieldSeishinDesc2_1 = new javax.swing.JTextField();
        textfieldSeishinDesc3_1 = new javax.swing.JTextField();
        labelSeishin3 = new javax.swing.JLabel();
        labelSeishinName3 = new javax.swing.JLabel();
        textfieldSeishinName3 = new javax.swing.JTextField();
        labelSeishinSName3 = new javax.swing.JLabel();
        textfieldSeishinSName3 = new javax.swing.JTextField();
        labelSeishinDesc3 = new javax.swing.JLabel();
        textfieldSeishinDesc1_3 = new javax.swing.JTextField();
        textfieldSeishinDesc2_3 = new javax.swing.JTextField();
        textfieldSeishinDesc3_3 = new javax.swing.JTextField();
        tabEParts = new javax.swing.JPanel();
        labelEPart0 = new javax.swing.JLabel();
        labelEPartName0 = new javax.swing.JLabel();
        textfieldEPartName0 = new javax.swing.JTextField();
        labelEPartDesc0 = new javax.swing.JLabel();
        textfieldEPartDesc1_0 = new javax.swing.JTextField();
        textfieldEPartDesc2_0 = new javax.swing.JTextField();
        textfieldEPartDesc3_0 = new javax.swing.JTextField();
        labelEPart2 = new javax.swing.JLabel();
        labelEPartName2 = new javax.swing.JLabel();
        textfieldEPartName2 = new javax.swing.JTextField();
        labelEPartDesc2 = new javax.swing.JLabel();
        textfieldEPartDesc1_2 = new javax.swing.JTextField();
        textfieldEPartDesc2_2 = new javax.swing.JTextField();
        textfieldEPartDesc3_2 = new javax.swing.JTextField();
        labelEPart1 = new javax.swing.JLabel();
        labelEPartName1 = new javax.swing.JLabel();
        textfieldEPartName1 = new javax.swing.JTextField();
        labelEPartDesc1 = new javax.swing.JLabel();
        textfieldEPartDesc1_1 = new javax.swing.JTextField();
        textfieldEPartDesc2_1 = new javax.swing.JTextField();
        textfieldEPartDesc3_1 = new javax.swing.JTextField();
        labelEPart3 = new javax.swing.JLabel();
        labelEPartName3 = new javax.swing.JLabel();
        textfieldEPartName3 = new javax.swing.JTextField();
        labelEPartDesc3 = new javax.swing.JLabel();
        textfieldEPartDesc1_3 = new javax.swing.JTextField();
        textfieldEPartDesc2_3 = new javax.swing.JTextField();
        textfieldEPartDesc3_3 = new javax.swing.JTextField();
        tabPParts = new javax.swing.JPanel();
        labelPPart0 = new javax.swing.JLabel();
        labelPPartName0 = new javax.swing.JLabel();
        textfieldPPartName0 = new javax.swing.JTextField();
        labelPPartDesc0 = new javax.swing.JLabel();
        textfieldPPartDesc1_0 = new javax.swing.JTextField();
        textfieldPPartDesc2_0 = new javax.swing.JTextField();
        textfieldPPartDesc3_0 = new javax.swing.JTextField();
        labelPPart2 = new javax.swing.JLabel();
        labelPPartName2 = new javax.swing.JLabel();
        textfieldPPartName2 = new javax.swing.JTextField();
        labelPPartDesc2 = new javax.swing.JLabel();
        textfieldPPartDesc1_2 = new javax.swing.JTextField();
        textfieldPPartDesc2_2 = new javax.swing.JTextField();
        textfieldPPartDesc3_2 = new javax.swing.JTextField();
        labelPPart1 = new javax.swing.JLabel();
        labelPPartName1 = new javax.swing.JLabel();
        textfieldPPartName1 = new javax.swing.JTextField();
        labelPPartDesc1 = new javax.swing.JLabel();
        textfieldPPartDesc1_1 = new javax.swing.JTextField();
        textfieldPPartDesc2_1 = new javax.swing.JTextField();
        textfieldPPartDesc3_1 = new javax.swing.JTextField();
        labelPPart3 = new javax.swing.JLabel();
        labelPPartName3 = new javax.swing.JLabel();
        textfieldPPartName3 = new javax.swing.JTextField();
        labelPPartDesc3 = new javax.swing.JLabel();
        textfieldPPartDesc1_3 = new javax.swing.JTextField();
        textfieldPPartDesc2_3 = new javax.swing.JTextField();
        textfieldPPartDesc3_3 = new javax.swing.JTextField();
        tabTitles = new javax.swing.JPanel();
        labelTitle00 = new javax.swing.JLabel();
        textfieldTitle00 = new javax.swing.JTextField();
        labelTitle07 = new javax.swing.JLabel();
        textfieldTitle07 = new javax.swing.JTextField();
        labelTitle01 = new javax.swing.JLabel();
        textfieldTitle01 = new javax.swing.JTextField();
        labelTitle08 = new javax.swing.JLabel();
        textfieldTitle08 = new javax.swing.JTextField();
        textfieldTitle02 = new javax.swing.JTextField();
        labelTitle02 = new javax.swing.JLabel();
        labelTitle09 = new javax.swing.JLabel();
        textfieldTitle09 = new javax.swing.JTextField();
        textfieldTitle10 = new javax.swing.JTextField();
        labelTitle10 = new javax.swing.JLabel();
        textfieldTitle03 = new javax.swing.JTextField();
        labelTitle03 = new javax.swing.JLabel();
        textfieldTitle05 = new javax.swing.JTextField();
        textfieldTitle04 = new javax.swing.JTextField();
        labelTitle04 = new javax.swing.JLabel();
        textfieldTitle12 = new javax.swing.JTextField();
        labelTitle05 = new javax.swing.JLabel();
        labelTitle12 = new javax.swing.JLabel();
        labelTitle11 = new javax.swing.JLabel();
        textfieldTitle11 = new javax.swing.JTextField();
        textfieldTitle06 = new javax.swing.JTextField();
        labelTitle06 = new javax.swing.JLabel();
        labelTitle13 = new javax.swing.JLabel();
        textfieldTitle13 = new javax.swing.JTextField();
        tabForms = new javax.swing.JPanel();
        labelForm0 = new javax.swing.JLabel();
        labelFormName1_0 = new javax.swing.JLabel();
        textfieldFormName1_0 = new javax.swing.JTextField();
        textfieldFormName2_0 = new javax.swing.JTextField();
        labelFormName2_0 = new javax.swing.JLabel();
        labelForm2 = new javax.swing.JLabel();
        labelFormName1_2 = new javax.swing.JLabel();
        textfieldFormName1_2 = new javax.swing.JTextField();
        textfieldFormName2_2 = new javax.swing.JTextField();
        labelFormName2_2 = new javax.swing.JLabel();
        labelFormName3_2 = new javax.swing.JLabel();
        textfieldFormName3_2 = new javax.swing.JTextField();
        textfieldFormName4_2 = new javax.swing.JTextField();
        labelFormName4_2 = new javax.swing.JLabel();
        labelForm1 = new javax.swing.JLabel();
        labelFormName1_1 = new javax.swing.JLabel();
        textfieldFormName1_1 = new javax.swing.JTextField();
        textfieldFormName2_1 = new javax.swing.JTextField();
        labelFormName2_1 = new javax.swing.JLabel();
        labelForm3 = new javax.swing.JLabel();
        labelFormName1_3 = new javax.swing.JLabel();
        textfieldFormName1_3 = new javax.swing.JTextField();
        textfieldFormName2_3 = new javax.swing.JTextField();
        labelFormName2_3 = new javax.swing.JLabel();
        labelFormName3_3 = new javax.swing.JLabel();
        textfieldFormName3_3 = new javax.swing.JTextField();
        textfieldFormName4_3 = new javax.swing.JTextField();
        labelFormName4_3 = new javax.swing.JLabel();
        tabCharLib = new javax.swing.JPanel();
        labelCLib0 = new javax.swing.JLabel();
        textfieldCLibHiragana0 = new javax.swing.JTextField();
        labelCLibHiragana0 = new javax.swing.JLabel();
        labelCLibSeiyuu0 = new javax.swing.JLabel();
        textfieldCLibSeiyuu0 = new javax.swing.JTextField();
        textfieldCLibHiragana2 = new javax.swing.JTextField();
        labelCLibHiragana2 = new javax.swing.JLabel();
        labelCLibSeiyuu2 = new javax.swing.JLabel();
        textfieldCLibSeiyuu2 = new javax.swing.JTextField();
        labelCLib2 = new javax.swing.JLabel();
        scrollCLib0 = new javax.swing.JScrollPane();
        textareaCLib0 = new javax.swing.JTextArea();
        scrollCLib2 = new javax.swing.JScrollPane();
        textareaCLib2 = new javax.swing.JTextArea();
        labelCLib1 = new javax.swing.JLabel();
        textfieldCLibHiragana1 = new javax.swing.JTextField();
        labelCLibHiragana1 = new javax.swing.JLabel();
        labelCLibSeiyuu1 = new javax.swing.JLabel();
        textfieldCLibSeiyuu1 = new javax.swing.JTextField();
        textfieldCLibHiragana3 = new javax.swing.JTextField();
        labelCLibHiragana3 = new javax.swing.JLabel();
        labelCLibSeiyuu3 = new javax.swing.JLabel();
        textfieldCLibSeiyuu3 = new javax.swing.JTextField();
        labelCLib3 = new javax.swing.JLabel();
        scrollCLib1 = new javax.swing.JScrollPane();
        textareaCLib1 = new javax.swing.JTextArea();
        scrollCLib3 = new javax.swing.JScrollPane();
        textareaCLib3 = new javax.swing.JTextArea();
        tabRobLib = new javax.swing.JPanel();
        labelRLib0 = new javax.swing.JLabel();
        labelRLibHeight0 = new javax.swing.JLabel();
        textfieldRLibHeight0 = new javax.swing.JTextField();
        scrollRLib0 = new javax.swing.JScrollPane();
        textareaRLib0 = new javax.swing.JTextArea();
        labelRLibWeight0 = new javax.swing.JLabel();
        textfieldRLibWeight0 = new javax.swing.JTextField();
        labelRLib2 = new javax.swing.JLabel();
        labelRLibHeight2 = new javax.swing.JLabel();
        textfieldRLibHeight2 = new javax.swing.JTextField();
        scrollRLib2 = new javax.swing.JScrollPane();
        textareaRLib2 = new javax.swing.JTextArea();
        labelRLibWeight2 = new javax.swing.JLabel();
        textfieldRLibWeight2 = new javax.swing.JTextField();
        labelRLib1 = new javax.swing.JLabel();
        labelRLibHeight1 = new javax.swing.JLabel();
        textfieldRLibHeight1 = new javax.swing.JTextField();
        scrollRLib1 = new javax.swing.JScrollPane();
        textareaRLib1 = new javax.swing.JTextArea();
        labelRLibWeight1 = new javax.swing.JLabel();
        textfieldRLibWeight1 = new javax.swing.JTextField();
        labelRLib3 = new javax.swing.JLabel();
        labelRLibHeight3 = new javax.swing.JLabel();
        textfieldRLibHeight3 = new javax.swing.JTextField();
        scrollRLib3 = new javax.swing.JScrollPane();
        textareaRLib3 = new javax.swing.JTextArea();
        labelRLibWeight3 = new javax.swing.JLabel();
        textfieldRLibWeight3 = new javax.swing.JTextField();
        labelRLibHiragana0 = new javax.swing.JLabel();
        textfieldRLibHiragana0 = new javax.swing.JTextField();
        textfieldRLibHiragana1 = new javax.swing.JTextField();
        labelRLibHiragana1 = new javax.swing.JLabel();
        textfieldRLibHiragana2 = new javax.swing.JTextField();
        labelRLibHiragana2 = new javax.swing.JLabel();
        textfieldRLibHiragana3 = new javax.swing.JTextField();
        labelRLibHiragana3 = new javax.swing.JLabel();
        panelNavigation = new javax.swing.JPanel();
        buttonBack = new javax.swing.JButton();
        labelPage = new javax.swing.JLabel();
        buttonNext = new javax.swing.JButton();
        textfieldJumpTo = new javax.swing.JTextField();
        labelJumpTo = new javax.swing.JLabel();
        buttonJump = new javax.swing.JButton();
        menuBar = new javax.swing.JMenuBar();
        menuFile = new javax.swing.JMenu();
        menuitemOpen = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JSeparator();
        menuitemSaveAs = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JSeparator();
        menuitemExit = new javax.swing.JMenuItem();
        menuEdit = new javax.swing.JMenu();
        checkMenuitemSJIS = new javax.swing.JCheckBoxMenuItem();
        checkMenuitemAddSpace = new javax.swing.JCheckBoxMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("SRW GC Menu Text Editor by Dashman");
        setResizable(false);

        tabsPanel.setPreferredSize(new java.awt.Dimension(568, 400));
        tabsPanel.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                tabsPanelStateChanged(evt);
            }
        });

        tabCharacters.setPreferredSize(new java.awt.Dimension(563, 400));

        labelChar0.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelChar0.setForeground(new java.awt.Color(51, 51, 255));
        labelChar0.setText("#000");

        labelCharFName0.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelCharFName0.setText("Full name:");

        labelCharSName0.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelCharSName0.setText("Short name:");

        textfieldCharFName0.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldCharFName0KeyTyped(evt);
            }
        });

        textfieldCharSName0.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldCharSName0KeyTyped(evt);
            }
        });

        labelChar1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelChar1.setForeground(new java.awt.Color(51, 51, 255));
        labelChar1.setText("#000");

        labelCharFName1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelCharFName1.setText("Full name:");

        labelCharSName1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelCharSName1.setText("Short name:");

        textfieldCharFName1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldCharFName1KeyTyped(evt);
            }
        });

        textfieldCharSName1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldCharSName1KeyTyped(evt);
            }
        });

        labelChar2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelChar2.setForeground(new java.awt.Color(51, 51, 255));
        labelChar2.setText("#000");

        labelCharFName2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelCharFName2.setText("Full name:");

        labelCharSName2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelCharSName2.setText("Short name:");

        textfieldCharFName2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldCharFName2KeyTyped(evt);
            }
        });

        textfieldCharSName2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldCharSName2KeyTyped(evt);
            }
        });

        labelChar3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelChar3.setForeground(new java.awt.Color(51, 51, 255));
        labelChar3.setText("#000");

        labelCharFName3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelCharFName3.setText("Full name:");

        labelCharSName3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelCharSName3.setText("Short name:");

        textfieldCharFName3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldCharFName3KeyTyped(evt);
            }
        });

        textfieldCharSName3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldCharSName3KeyTyped(evt);
            }
        });

        labelChar4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelChar4.setForeground(new java.awt.Color(51, 51, 255));
        labelChar4.setText("#000");

        labelCharFName4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelCharFName4.setText("Full name:");

        labelCharSName4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelCharSName4.setText("Short name:");

        textfieldCharFName4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldCharFName4KeyTyped(evt);
            }
        });

        textfieldCharSName4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldCharSName4KeyTyped(evt);
            }
        });

        labelChar5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelChar5.setForeground(new java.awt.Color(51, 51, 255));
        labelChar5.setText("#000");

        labelCharFName5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelCharFName5.setText("Full name:");

        labelCharSName5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelCharSName5.setText("Short name:");

        textfieldCharFName5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldCharFName5KeyTyped(evt);
            }
        });

        textfieldCharSName5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldCharSName5KeyTyped(evt);
            }
        });

        labelChar6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelChar6.setForeground(new java.awt.Color(51, 51, 255));
        labelChar6.setText("#000");

        labelCharFName6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelCharFName6.setText("Full name:");

        labelCharSName6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelCharSName6.setText("Short name:");

        textfieldCharSName6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldCharSName6KeyTyped(evt);
            }
        });

        textfieldCharFName6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldCharFName6KeyTyped(evt);
            }
        });

        labelChar7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelChar7.setForeground(new java.awt.Color(51, 51, 255));
        labelChar7.setText("#000");

        labelCharFName7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelCharFName7.setText("Full name:");

        labelCharSName7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelCharSName7.setText("Short name:");

        textfieldCharFName7.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldCharFName7KeyTyped(evt);
            }
        });

        textfieldCharSName7.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldCharSName7KeyTyped(evt);
            }
        });

        labelChar8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelChar8.setForeground(new java.awt.Color(51, 51, 255));
        labelChar8.setText("#000");

        labelCharFName8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelCharFName8.setText("Full name:");

        labelCharSName8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelCharSName8.setText("Short name:");

        textfieldCharSName8.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldCharSName8KeyTyped(evt);
            }
        });

        textfieldCharFName8.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldCharFName8KeyTyped(evt);
            }
        });

        labelChar9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelChar9.setForeground(new java.awt.Color(51, 51, 255));
        labelChar9.setText("#000");

        labelCharFName9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelCharFName9.setText("Full name:");

        labelCharSName9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelCharSName9.setText("Short name:");

        textfieldCharSName9.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldCharSName9KeyTyped(evt);
            }
        });

        textfieldCharFName9.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldCharFName9KeyTyped(evt);
            }
        });

        javax.swing.GroupLayout tabCharactersLayout = new javax.swing.GroupLayout(tabCharacters);
        tabCharacters.setLayout(tabCharactersLayout);
        tabCharactersLayout.setHorizontalGroup(
            tabCharactersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabCharactersLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tabCharactersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tabCharactersLayout.createSequentialGroup()
                        .addGroup(tabCharactersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(labelCharSName0, javax.swing.GroupLayout.DEFAULT_SIZE, 77, Short.MAX_VALUE)
                            .addComponent(labelCharFName0, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(labelChar0, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(labelChar2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(labelCharFName2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(labelCharSName2, javax.swing.GroupLayout.DEFAULT_SIZE, 77, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(tabCharactersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(textfieldCharSName0, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textfieldCharFName0, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textfieldCharFName2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textfieldCharSName2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 63, Short.MAX_VALUE)
                        .addGroup(tabCharactersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(labelCharFName5, javax.swing.GroupLayout.DEFAULT_SIZE, 78, Short.MAX_VALUE)
                            .addComponent(labelCharSName5, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelCharFName7, javax.swing.GroupLayout.DEFAULT_SIZE, 78, Short.MAX_VALUE)
                            .addComponent(labelCharSName7, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(tabCharactersLayout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addGroup(tabCharactersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelChar5, javax.swing.GroupLayout.DEFAULT_SIZE, 78, Short.MAX_VALUE)
                                    .addComponent(labelChar7, javax.swing.GroupLayout.DEFAULT_SIZE, 78, Short.MAX_VALUE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(tabCharactersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(textfieldCharSName5, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textfieldCharFName5, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textfieldCharFName7, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textfieldCharSName7)))
                    .addGroup(tabCharactersLayout.createSequentialGroup()
                        .addGroup(tabCharactersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(labelChar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(labelCharFName1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(labelCharSName1, javax.swing.GroupLayout.DEFAULT_SIZE, 77, Short.MAX_VALUE)
                            .addComponent(labelChar3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(labelCharFName3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(labelCharSName3, javax.swing.GroupLayout.DEFAULT_SIZE, 77, Short.MAX_VALUE)
                            .addComponent(labelChar4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(labelCharFName4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(labelCharSName4, javax.swing.GroupLayout.DEFAULT_SIZE, 77, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(tabCharactersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(textfieldCharFName1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textfieldCharSName1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textfieldCharFName3, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textfieldCharSName3, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textfieldCharFName4, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textfieldCharSName4, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 63, Short.MAX_VALUE)
                        .addGroup(tabCharactersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(labelCharFName6, javax.swing.GroupLayout.DEFAULT_SIZE, 78, Short.MAX_VALUE)
                            .addComponent(labelCharSName6, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelCharFName8, javax.swing.GroupLayout.DEFAULT_SIZE, 78, Short.MAX_VALUE)
                            .addComponent(labelCharSName8, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelCharFName9, javax.swing.GroupLayout.DEFAULT_SIZE, 78, Short.MAX_VALUE)
                            .addComponent(labelCharSName9, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(tabCharactersLayout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addGroup(tabCharactersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelChar6, javax.swing.GroupLayout.DEFAULT_SIZE, 78, Short.MAX_VALUE)
                                    .addComponent(labelChar8, javax.swing.GroupLayout.DEFAULT_SIZE, 78, Short.MAX_VALUE)
                                    .addComponent(labelChar9, javax.swing.GroupLayout.DEFAULT_SIZE, 78, Short.MAX_VALUE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(tabCharactersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(textfieldCharSName6, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textfieldCharFName6, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textfieldCharSName8, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textfieldCharFName8, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textfieldCharSName9, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textfieldCharFName9, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        tabCharactersLayout.setVerticalGroup(
            tabCharactersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabCharactersLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tabCharactersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tabCharactersLayout.createSequentialGroup()
                        .addComponent(labelChar5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(tabCharactersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelCharFName5)
                            .addComponent(textfieldCharFName5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(tabCharactersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelCharSName5)
                            .addComponent(textfieldCharSName5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(labelChar6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(tabCharactersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelCharFName6)
                            .addComponent(textfieldCharFName6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(tabCharactersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelCharSName6)
                            .addComponent(textfieldCharSName6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labelChar7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(tabCharactersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelCharFName7)
                            .addComponent(textfieldCharFName7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(tabCharactersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelCharSName7)
                            .addComponent(textfieldCharSName7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(labelChar8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(tabCharactersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelCharFName8)
                            .addComponent(textfieldCharFName8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(tabCharactersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelCharSName8)
                            .addComponent(textfieldCharSName8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(labelChar9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(tabCharactersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelCharFName9)
                            .addComponent(textfieldCharFName9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(tabCharactersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelCharSName9)
                            .addComponent(textfieldCharSName9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(tabCharactersLayout.createSequentialGroup()
                        .addComponent(labelChar0)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(tabCharactersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelCharFName0)
                            .addComponent(textfieldCharFName0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(tabCharactersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelCharSName0)
                            .addComponent(textfieldCharSName0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(labelChar1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(tabCharactersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelCharFName1)
                            .addComponent(textfieldCharFName1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(tabCharactersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelCharSName1)
                            .addComponent(textfieldCharSName1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labelChar2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(tabCharactersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelCharFName2)
                            .addComponent(textfieldCharFName2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(tabCharactersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelCharSName2)
                            .addComponent(textfieldCharSName2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(labelChar3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(tabCharactersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelCharFName3)
                            .addComponent(textfieldCharFName3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(tabCharactersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelCharSName3)
                            .addComponent(textfieldCharSName3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(labelChar4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(tabCharactersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelCharFName4)
                            .addComponent(textfieldCharFName4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(tabCharactersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelCharSName4)
                            .addComponent(textfieldCharSName4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(72, 72, 72))
        );

        tabsPanel.addTab("Characters", tabCharacters);

        labelRobot00.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelRobot00.setForeground(new java.awt.Color(51, 51, 255));
        labelRobot00.setText("#000");

        textfieldRobot00.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldRobot00KeyTyped(evt);
            }
        });

        labelRobot07.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelRobot07.setForeground(new java.awt.Color(51, 51, 255));
        labelRobot07.setText("#000");

        textfieldRobot07.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldRobot07KeyTyped(evt);
            }
        });

        labelRobot01.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelRobot01.setForeground(new java.awt.Color(51, 51, 255));
        labelRobot01.setText("#000");

        textfieldRobot01.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldRobot01KeyTyped(evt);
            }
        });

        labelRobot08.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelRobot08.setForeground(new java.awt.Color(51, 51, 255));
        labelRobot08.setText("#000");

        textfieldRobot08.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldRobot08KeyTyped(evt);
            }
        });

        textfieldRobot02.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldRobot02KeyTyped(evt);
            }
        });

        labelRobot02.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelRobot02.setForeground(new java.awt.Color(51, 51, 255));
        labelRobot02.setText("#000");

        labelRobot09.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelRobot09.setForeground(new java.awt.Color(51, 51, 255));
        labelRobot09.setText("#000");

        textfieldRobot09.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldRobot09KeyTyped(evt);
            }
        });

        textfieldRobot10.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldRobot10KeyTyped(evt);
            }
        });

        labelRobot10.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelRobot10.setForeground(new java.awt.Color(51, 51, 255));
        labelRobot10.setText("#000");

        textfieldRobot03.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldRobot03KeyTyped(evt);
            }
        });

        labelRobot03.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelRobot03.setForeground(new java.awt.Color(51, 51, 255));
        labelRobot03.setText("#000");

        textfieldRobot05.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldRobot05KeyTyped(evt);
            }
        });

        textfieldRobot04.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldRobot04KeyTyped(evt);
            }
        });

        labelRobot04.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelRobot04.setForeground(new java.awt.Color(51, 51, 255));
        labelRobot04.setText("#000");

        textfieldRobot12.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldRobot12KeyTyped(evt);
            }
        });

        labelRobot05.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelRobot05.setForeground(new java.awt.Color(51, 51, 255));
        labelRobot05.setText("#000");

        labelRobot12.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelRobot12.setForeground(new java.awt.Color(51, 51, 255));
        labelRobot12.setText("#000");

        labelRobot11.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelRobot11.setForeground(new java.awt.Color(51, 51, 255));
        labelRobot11.setText("#000");

        textfieldRobot11.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldRobot11KeyTyped(evt);
            }
        });

        textfieldRobot06.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldRobot06KeyTyped(evt);
            }
        });

        labelRobot06.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelRobot06.setForeground(new java.awt.Color(51, 51, 255));
        labelRobot06.setText("#000");

        labelRobot13.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelRobot13.setForeground(new java.awt.Color(51, 51, 255));
        labelRobot13.setText("#000");

        textfieldRobot13.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldRobot13KeyTyped(evt);
            }
        });

        javax.swing.GroupLayout tabRobotsLayout = new javax.swing.GroupLayout(tabRobots);
        tabRobots.setLayout(tabRobotsLayout);
        tabRobotsLayout.setHorizontalGroup(
            tabRobotsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tabRobotsLayout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addGroup(tabRobotsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tabRobotsLayout.createSequentialGroup()
                        .addGroup(tabRobotsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelRobot01, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textfieldRobot01, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textfieldRobot03, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelRobot03, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textfieldRobot05, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelRobot05, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textfieldRobot06, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelRobot06, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(86, 86, 86)
                        .addGroup(tabRobotsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelRobot08, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textfieldRobot08, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textfieldRobot10, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelRobot10, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textfieldRobot12, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelRobot12, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelRobot13, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textfieldRobot13, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(tabRobotsLayout.createSequentialGroup()
                        .addGroup(tabRobotsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelRobot00, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textfieldRobot00, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textfieldRobot02, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelRobot02, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textfieldRobot04, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelRobot04, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(86, 86, 86)
                        .addGroup(tabRobotsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textfieldRobot07, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelRobot07, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelRobot09, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textfieldRobot09, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelRobot11, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textfieldRobot11, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(38, 38, 38))
        );
        tabRobotsLayout.setVerticalGroup(
            tabRobotsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabRobotsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tabRobotsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelRobot00)
                    .addComponent(labelRobot07))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(tabRobotsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textfieldRobot00, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textfieldRobot07, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(tabRobotsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelRobot01)
                    .addComponent(labelRobot08))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(tabRobotsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textfieldRobot01, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textfieldRobot08, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(tabRobotsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelRobot02)
                    .addComponent(labelRobot09))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(tabRobotsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textfieldRobot02, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textfieldRobot09, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(tabRobotsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelRobot03)
                    .addComponent(labelRobot10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(tabRobotsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textfieldRobot03, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textfieldRobot10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(tabRobotsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelRobot04)
                    .addComponent(labelRobot11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(tabRobotsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textfieldRobot04, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textfieldRobot11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(tabRobotsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelRobot05)
                    .addComponent(labelRobot12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(tabRobotsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textfieldRobot05, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textfieldRobot12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(tabRobotsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelRobot06)
                    .addComponent(labelRobot13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(tabRobotsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textfieldRobot06, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textfieldRobot13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        tabsPanel.addTab("Robots", tabRobots);

        labelWeapon00.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelWeapon00.setForeground(new java.awt.Color(51, 51, 255));
        labelWeapon00.setText("#000");

        textfieldWeapon00.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldWeapon00KeyTyped(evt);
            }
        });

        labelWeapon07.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelWeapon07.setForeground(new java.awt.Color(51, 51, 255));
        labelWeapon07.setText("#000");

        textfieldWeapon07.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldWeapon07KeyTyped(evt);
            }
        });

        labelWeapon01.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelWeapon01.setForeground(new java.awt.Color(51, 51, 255));
        labelWeapon01.setText("#000");

        textfieldWeapon01.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldWeapon01KeyTyped(evt);
            }
        });

        labelWeapon08.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelWeapon08.setForeground(new java.awt.Color(51, 51, 255));
        labelWeapon08.setText("#000");

        textfieldWeapon08.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldWeapon08KeyTyped(evt);
            }
        });

        textfieldWeapon02.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldWeapon02KeyTyped(evt);
            }
        });

        labelWeapon02.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelWeapon02.setForeground(new java.awt.Color(51, 51, 255));
        labelWeapon02.setText("#000");

        labelWeapon09.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelWeapon09.setForeground(new java.awt.Color(51, 51, 255));
        labelWeapon09.setText("#000");

        textfieldWeapon09.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldWeapon09KeyTyped(evt);
            }
        });

        textfieldWeapon10.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldWeapon10KeyTyped(evt);
            }
        });

        labelWeapon10.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelWeapon10.setForeground(new java.awt.Color(51, 51, 255));
        labelWeapon10.setText("#000");

        textfieldWeapon03.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldWeapon03KeyTyped(evt);
            }
        });

        labelWeapon03.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelWeapon03.setForeground(new java.awt.Color(51, 51, 255));
        labelWeapon03.setText("#000");

        textfieldWeapon05.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldWeapon05KeyTyped(evt);
            }
        });

        textfieldWeapon04.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldWeapon04KeyTyped(evt);
            }
        });

        labelWeapon04.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelWeapon04.setForeground(new java.awt.Color(51, 51, 255));
        labelWeapon04.setText("#000");

        textfieldWeapon12.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldWeapon12KeyTyped(evt);
            }
        });

        labelWeapon05.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelWeapon05.setForeground(new java.awt.Color(51, 51, 255));
        labelWeapon05.setText("#000");

        labelWeapon12.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelWeapon12.setForeground(new java.awt.Color(51, 51, 255));
        labelWeapon12.setText("#000");

        labelWeapon11.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelWeapon11.setForeground(new java.awt.Color(51, 51, 255));
        labelWeapon11.setText("#000");

        textfieldWeapon11.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldWeapon11KeyTyped(evt);
            }
        });

        textfieldWeapon06.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldWeapon06KeyTyped(evt);
            }
        });

        labelWeapon06.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelWeapon06.setForeground(new java.awt.Color(51, 51, 255));
        labelWeapon06.setText("#000");

        labelWeapon13.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelWeapon13.setForeground(new java.awt.Color(51, 51, 255));
        labelWeapon13.setText("#000");

        textfieldWeapon13.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldWeapon13KeyTyped(evt);
            }
        });

        javax.swing.GroupLayout tabWeaponsLayout = new javax.swing.GroupLayout(tabWeapons);
        tabWeapons.setLayout(tabWeaponsLayout);
        tabWeaponsLayout.setHorizontalGroup(
            tabWeaponsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tabWeaponsLayout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addGroup(tabWeaponsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tabWeaponsLayout.createSequentialGroup()
                        .addGroup(tabWeaponsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelWeapon01, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textfieldWeapon01, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textfieldWeapon03, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelWeapon03, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textfieldWeapon05, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelWeapon05, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textfieldWeapon06, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelWeapon06, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(86, 86, 86)
                        .addGroup(tabWeaponsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelWeapon08, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textfieldWeapon08, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textfieldWeapon10, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelWeapon10, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textfieldWeapon12, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelWeapon12, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelWeapon13, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textfieldWeapon13, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(tabWeaponsLayout.createSequentialGroup()
                        .addGroup(tabWeaponsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelWeapon00, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textfieldWeapon00, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textfieldWeapon02, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelWeapon02, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textfieldWeapon04, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelWeapon04, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(86, 86, 86)
                        .addGroup(tabWeaponsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textfieldWeapon07, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelWeapon07, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelWeapon09, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textfieldWeapon09, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelWeapon11, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textfieldWeapon11, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(38, 38, 38))
        );
        tabWeaponsLayout.setVerticalGroup(
            tabWeaponsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabWeaponsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tabWeaponsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelWeapon00)
                    .addComponent(labelWeapon07))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(tabWeaponsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textfieldWeapon00, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textfieldWeapon07, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(tabWeaponsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelWeapon01)
                    .addComponent(labelWeapon08))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(tabWeaponsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textfieldWeapon01, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textfieldWeapon08, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(tabWeaponsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelWeapon02)
                    .addComponent(labelWeapon09))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(tabWeaponsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textfieldWeapon02, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textfieldWeapon09, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(tabWeaponsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelWeapon03)
                    .addComponent(labelWeapon10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(tabWeaponsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textfieldWeapon03, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textfieldWeapon10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(tabWeaponsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelWeapon04)
                    .addComponent(labelWeapon11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(tabWeaponsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textfieldWeapon04, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textfieldWeapon11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(tabWeaponsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelWeapon05)
                    .addComponent(labelWeapon12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(tabWeaponsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textfieldWeapon05, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textfieldWeapon12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(tabWeaponsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelWeapon06)
                    .addComponent(labelWeapon13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(tabWeaponsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textfieldWeapon06, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textfieldWeapon13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        tabsPanel.addTab("Weapons", tabWeapons);

        labelTerrain00.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelTerrain00.setForeground(new java.awt.Color(51, 51, 255));
        labelTerrain00.setText("#000");

        textfieldTerrain00.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldTerrain00KeyTyped(evt);
            }
        });

        labelTerrain07.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelTerrain07.setForeground(new java.awt.Color(51, 51, 255));
        labelTerrain07.setText("#000");

        textfieldTerrain07.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldTerrain07KeyTyped(evt);
            }
        });

        labelTerrain01.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelTerrain01.setForeground(new java.awt.Color(51, 51, 255));
        labelTerrain01.setText("#000");

        textfieldTerrain01.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldTerrain01KeyTyped(evt);
            }
        });

        labelTerrain08.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelTerrain08.setForeground(new java.awt.Color(51, 51, 255));
        labelTerrain08.setText("#000");

        textfieldTerrain08.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldTerrain08KeyTyped(evt);
            }
        });

        textfieldTerrain02.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldTerrain02KeyTyped(evt);
            }
        });

        labelTerrain02.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelTerrain02.setForeground(new java.awt.Color(51, 51, 255));
        labelTerrain02.setText("#000");

        labelTerrain09.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelTerrain09.setForeground(new java.awt.Color(51, 51, 255));
        labelTerrain09.setText("#000");

        textfieldTerrain09.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldTerrain09KeyTyped(evt);
            }
        });

        textfieldTerrain10.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldTerrain10KeyTyped(evt);
            }
        });

        labelTerrain10.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelTerrain10.setForeground(new java.awt.Color(51, 51, 255));
        labelTerrain10.setText("#000");

        textfieldTerrain03.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldTerrain03KeyTyped(evt);
            }
        });

        labelTerrain03.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelTerrain03.setForeground(new java.awt.Color(51, 51, 255));
        labelTerrain03.setText("#000");

        textfieldTerrain05.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldTerrain05KeyTyped(evt);
            }
        });

        textfieldTerrain04.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldTerrain04KeyTyped(evt);
            }
        });

        labelTerrain04.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelTerrain04.setForeground(new java.awt.Color(51, 51, 255));
        labelTerrain04.setText("#000");

        textfieldTerrain12.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldTerrain12KeyTyped(evt);
            }
        });

        labelTerrain05.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelTerrain05.setForeground(new java.awt.Color(51, 51, 255));
        labelTerrain05.setText("#000");

        labelTerrain12.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelTerrain12.setForeground(new java.awt.Color(51, 51, 255));
        labelTerrain12.setText("#000");

        labelTerrain11.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelTerrain11.setForeground(new java.awt.Color(51, 51, 255));
        labelTerrain11.setText("#000");

        textfieldTerrain11.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldTerrain11KeyTyped(evt);
            }
        });

        textfieldTerrain06.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldTerrain06KeyTyped(evt);
            }
        });

        labelTerrain06.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelTerrain06.setForeground(new java.awt.Color(51, 51, 255));
        labelTerrain06.setText("#000");

        labelTerrain13.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelTerrain13.setForeground(new java.awt.Color(51, 51, 255));
        labelTerrain13.setText("#000");

        textfieldTerrain13.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldTerrain13KeyTyped(evt);
            }
        });

        javax.swing.GroupLayout tabTerrainsLayout = new javax.swing.GroupLayout(tabTerrains);
        tabTerrains.setLayout(tabTerrainsLayout);
        tabTerrainsLayout.setHorizontalGroup(
            tabTerrainsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tabTerrainsLayout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addGroup(tabTerrainsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tabTerrainsLayout.createSequentialGroup()
                        .addGroup(tabTerrainsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelTerrain01, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textfieldTerrain01, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textfieldTerrain03, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelTerrain03, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textfieldTerrain05, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelTerrain05, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textfieldTerrain06, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelTerrain06, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(86, 86, 86)
                        .addGroup(tabTerrainsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelTerrain08, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textfieldTerrain08, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textfieldTerrain10, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelTerrain10, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textfieldTerrain12, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelTerrain12, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelTerrain13, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textfieldTerrain13, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(tabTerrainsLayout.createSequentialGroup()
                        .addGroup(tabTerrainsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelTerrain00, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textfieldTerrain00, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textfieldTerrain02, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelTerrain02, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textfieldTerrain04, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelTerrain04, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(86, 86, 86)
                        .addGroup(tabTerrainsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textfieldTerrain07, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelTerrain07, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelTerrain09, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textfieldTerrain09, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelTerrain11, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textfieldTerrain11, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(38, 38, 38))
        );
        tabTerrainsLayout.setVerticalGroup(
            tabTerrainsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabTerrainsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tabTerrainsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelTerrain00)
                    .addComponent(labelTerrain07))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(tabTerrainsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textfieldTerrain00, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textfieldTerrain07, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(tabTerrainsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelTerrain01)
                    .addComponent(labelTerrain08))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(tabTerrainsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textfieldTerrain01, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textfieldTerrain08, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(tabTerrainsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelTerrain02)
                    .addComponent(labelTerrain09))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(tabTerrainsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textfieldTerrain02, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textfieldTerrain09, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(tabTerrainsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelTerrain03)
                    .addComponent(labelTerrain10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(tabTerrainsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textfieldTerrain03, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textfieldTerrain10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(tabTerrainsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelTerrain04)
                    .addComponent(labelTerrain11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(tabTerrainsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textfieldTerrain04, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textfieldTerrain11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(tabTerrainsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelTerrain05)
                    .addComponent(labelTerrain12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(tabTerrainsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textfieldTerrain05, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textfieldTerrain12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(tabTerrainsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelTerrain06)
                    .addComponent(labelTerrain13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(tabTerrainsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textfieldTerrain06, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textfieldTerrain13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        tabsPanel.addTab("Terrains", tabTerrains);

        labelSeishin0.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelSeishin0.setForeground(new java.awt.Color(51, 51, 255));
        labelSeishin0.setText("#000");

        labelSeishinName0.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelSeishinName0.setText("Name:");

        textfieldSeishinName0.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldSeishinName0KeyTyped(evt);
            }
        });

        labelSeishinSName0.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelSeishinSName0.setText("Short:");

        textfieldSeishinSName0.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldSeishinSName0KeyTyped(evt);
            }
        });

        labelSeishinDesc0.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelSeishinDesc0.setText("Description:");

        textfieldSeishinDesc1_0.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldSeishinDesc1_0KeyTyped(evt);
            }
        });

        textfieldSeishinDesc2_0.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldSeishinDesc2_0KeyTyped(evt);
            }
        });

        textfieldSeishinDesc3_0.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldSeishinDesc3_0KeyTyped(evt);
            }
        });

        labelSeishin2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelSeishin2.setForeground(new java.awt.Color(51, 51, 255));
        labelSeishin2.setText("#000");

        labelSeishinName2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelSeishinName2.setText("Name:");

        textfieldSeishinName2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldSeishinName2KeyTyped(evt);
            }
        });

        labelSeishinSName2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelSeishinSName2.setText("Short:");

        textfieldSeishinSName2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldSeishinSName2KeyTyped(evt);
            }
        });

        labelSeishinDesc2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelSeishinDesc2.setText("Description:");

        textfieldSeishinDesc1_2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldSeishinDesc1_2KeyTyped(evt);
            }
        });

        textfieldSeishinDesc2_2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldSeishinDesc2_2KeyTyped(evt);
            }
        });

        textfieldSeishinDesc3_2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldSeishinDesc3_2KeyTyped(evt);
            }
        });

        labelSeishin1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelSeishin1.setForeground(new java.awt.Color(51, 51, 255));
        labelSeishin1.setText("#000");

        labelSeishinName1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelSeishinName1.setText("Name:");

        textfieldSeishinName1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldSeishinName1KeyTyped(evt);
            }
        });

        labelSeishinSName1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelSeishinSName1.setText("Short:");

        textfieldSeishinSName1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldSeishinSName1KeyTyped(evt);
            }
        });

        labelSeishinDesc1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelSeishinDesc1.setText("Description:");

        textfieldSeishinDesc1_1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldSeishinDesc1_1KeyTyped(evt);
            }
        });

        textfieldSeishinDesc2_1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldSeishinDesc2_1KeyTyped(evt);
            }
        });

        textfieldSeishinDesc3_1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldSeishinDesc3_1KeyTyped(evt);
            }
        });

        labelSeishin3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelSeishin3.setForeground(new java.awt.Color(51, 51, 255));
        labelSeishin3.setText("#000");

        labelSeishinName3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelSeishinName3.setText("Name:");

        textfieldSeishinName3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldSeishinName3KeyTyped(evt);
            }
        });

        labelSeishinSName3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelSeishinSName3.setText("Short:");

        textfieldSeishinSName3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldSeishinSName3KeyTyped(evt);
            }
        });

        labelSeishinDesc3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelSeishinDesc3.setText("Description:");

        textfieldSeishinDesc1_3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldSeishinDesc1_3KeyTyped(evt);
            }
        });

        textfieldSeishinDesc2_3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldSeishinDesc2_3KeyTyped(evt);
            }
        });

        textfieldSeishinDesc3_3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldSeishinDesc3_3KeyTyped(evt);
            }
        });

        javax.swing.GroupLayout tabSeishinsLayout = new javax.swing.GroupLayout(tabSeishins);
        tabSeishins.setLayout(tabSeishinsLayout);
        tabSeishinsLayout.setHorizontalGroup(
            tabSeishinsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabSeishinsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tabSeishinsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tabSeishinsLayout.createSequentialGroup()
                        .addGroup(tabSeishinsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(tabSeishinsLayout.createSequentialGroup()
                                .addComponent(labelSeishinName0, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(textfieldSeishinName0, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(labelSeishinSName0, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(textfieldSeishinSName0, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(labelSeishin0, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelSeishinDesc0, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textfieldSeishinDesc1_0, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textfieldSeishinDesc2_0, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textfieldSeishinDesc3_0, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 78, Short.MAX_VALUE)
                        .addGroup(tabSeishinsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(tabSeishinsLayout.createSequentialGroup()
                                .addComponent(labelSeishinName2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(textfieldSeishinName2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(labelSeishinSName2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(textfieldSeishinSName2, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(labelSeishin2, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelSeishinDesc2, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textfieldSeishinDesc1_2, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textfieldSeishinDesc2_2, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textfieldSeishinDesc3_2, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(tabSeishinsLayout.createSequentialGroup()
                        .addGroup(tabSeishinsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelSeishin1, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(tabSeishinsLayout.createSequentialGroup()
                                .addComponent(labelSeishinName1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(textfieldSeishinName1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(labelSeishinSName1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(textfieldSeishinSName1, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(labelSeishinDesc1, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textfieldSeishinDesc1_1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textfieldSeishinDesc2_1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textfieldSeishinDesc3_1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 78, Short.MAX_VALUE)
                        .addGroup(tabSeishinsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelSeishin3, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(tabSeishinsLayout.createSequentialGroup()
                                .addComponent(labelSeishinName3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(textfieldSeishinName3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(labelSeishinSName3, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(textfieldSeishinSName3, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(labelSeishinDesc3, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textfieldSeishinDesc1_3, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textfieldSeishinDesc2_3, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textfieldSeishinDesc3_3, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        tabSeishinsLayout.setVerticalGroup(
            tabSeishinsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabSeishinsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tabSeishinsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tabSeishinsLayout.createSequentialGroup()
                        .addComponent(labelSeishin2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(tabSeishinsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelSeishinName2)
                            .addComponent(textfieldSeishinName2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelSeishinSName2)
                            .addComponent(textfieldSeishinSName2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labelSeishinDesc2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textfieldSeishinDesc1_2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textfieldSeishinDesc2_2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textfieldSeishinDesc3_2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(tabSeishinsLayout.createSequentialGroup()
                        .addComponent(labelSeishin0)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(tabSeishinsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelSeishinName0)
                            .addComponent(textfieldSeishinName0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelSeishinSName0)
                            .addComponent(textfieldSeishinSName0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labelSeishinDesc0)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textfieldSeishinDesc1_0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textfieldSeishinDesc2_0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textfieldSeishinDesc3_0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(tabSeishinsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tabSeishinsLayout.createSequentialGroup()
                        .addComponent(labelSeishin3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(tabSeishinsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelSeishinName3)
                            .addComponent(textfieldSeishinName3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelSeishinSName3)
                            .addComponent(textfieldSeishinSName3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labelSeishinDesc3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textfieldSeishinDesc1_3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textfieldSeishinDesc2_3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textfieldSeishinDesc3_3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(tabSeishinsLayout.createSequentialGroup()
                        .addComponent(labelSeishin1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(tabSeishinsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelSeishinName1)
                            .addComponent(textfieldSeishinName1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelSeishinSName1)
                            .addComponent(textfieldSeishinSName1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labelSeishinDesc1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textfieldSeishinDesc1_1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textfieldSeishinDesc2_1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textfieldSeishinDesc3_1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(87, Short.MAX_VALUE))
        );

        tabsPanel.addTab("Seishins", tabSeishins);

        labelEPart0.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelEPart0.setForeground(new java.awt.Color(51, 51, 255));
        labelEPart0.setText("#000");

        labelEPartName0.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelEPartName0.setText("Name:");

        textfieldEPartName0.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldEPartName0KeyTyped(evt);
            }
        });

        labelEPartDesc0.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelEPartDesc0.setText("Description:");

        textfieldEPartDesc1_0.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldEPartDesc1_0KeyTyped(evt);
            }
        });

        textfieldEPartDesc2_0.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldEPartDesc2_0KeyTyped(evt);
            }
        });

        textfieldEPartDesc3_0.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldEPartDesc3_0KeyTyped(evt);
            }
        });

        labelEPart2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelEPart2.setForeground(new java.awt.Color(51, 51, 255));
        labelEPart2.setText("#000");

        labelEPartName2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelEPartName2.setText("Name:");

        textfieldEPartName2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldEPartName2KeyTyped(evt);
            }
        });

        labelEPartDesc2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelEPartDesc2.setText("Description:");

        textfieldEPartDesc1_2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldEPartDesc1_2KeyTyped(evt);
            }
        });

        textfieldEPartDesc2_2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldEPartDesc2_2KeyTyped(evt);
            }
        });

        textfieldEPartDesc3_2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldEPartDesc3_2KeyTyped(evt);
            }
        });

        labelEPart1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelEPart1.setForeground(new java.awt.Color(51, 51, 255));
        labelEPart1.setText("#000");

        labelEPartName1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelEPartName1.setText("Name:");

        textfieldEPartName1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldEPartName1KeyTyped(evt);
            }
        });

        labelEPartDesc1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelEPartDesc1.setText("Description:");

        textfieldEPartDesc1_1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldEPartDesc1_1KeyTyped(evt);
            }
        });

        textfieldEPartDesc2_1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldEPartDesc2_1KeyTyped(evt);
            }
        });

        textfieldEPartDesc3_1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldEPartDesc3_1KeyTyped(evt);
            }
        });

        labelEPart3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelEPart3.setForeground(new java.awt.Color(51, 51, 255));
        labelEPart3.setText("#000");

        labelEPartName3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelEPartName3.setText("Name:");

        textfieldEPartName3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldEPartName3KeyTyped(evt);
            }
        });

        labelEPartDesc3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelEPartDesc3.setText("Description:");

        textfieldEPartDesc1_3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldEPartDesc1_3KeyTyped(evt);
            }
        });

        textfieldEPartDesc2_3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldEPartDesc2_3KeyTyped(evt);
            }
        });

        textfieldEPartDesc3_3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldEPartDesc3_3KeyTyped(evt);
            }
        });

        javax.swing.GroupLayout tabEPartsLayout = new javax.swing.GroupLayout(tabEParts);
        tabEParts.setLayout(tabEPartsLayout);
        tabEPartsLayout.setHorizontalGroup(
            tabEPartsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabEPartsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tabEPartsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tabEPartsLayout.createSequentialGroup()
                        .addGroup(tabEPartsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(tabEPartsLayout.createSequentialGroup()
                                .addComponent(labelEPartName0, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(textfieldEPartName0, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(labelEPart0, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelEPartDesc0, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textfieldEPartDesc1_0, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textfieldEPartDesc2_0, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textfieldEPartDesc3_0, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 78, Short.MAX_VALUE)
                        .addGroup(tabEPartsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(tabEPartsLayout.createSequentialGroup()
                                .addComponent(labelEPartName2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(textfieldEPartName2, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(labelEPart2, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelEPartDesc2, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textfieldEPartDesc1_2, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textfieldEPartDesc2_2, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textfieldEPartDesc3_2, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(tabEPartsLayout.createSequentialGroup()
                        .addGroup(tabEPartsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(labelEPart1, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(tabEPartsLayout.createSequentialGroup()
                                .addComponent(labelEPartName1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(textfieldEPartName1, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(labelEPartDesc1, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textfieldEPartDesc1_1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textfieldEPartDesc2_1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textfieldEPartDesc3_1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 78, Short.MAX_VALUE)
                        .addGroup(tabEPartsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(labelEPart3, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(tabEPartsLayout.createSequentialGroup()
                                .addComponent(labelEPartName3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(textfieldEPartName3, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(labelEPartDesc3, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textfieldEPartDesc1_3, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textfieldEPartDesc2_3, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textfieldEPartDesc3_3, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        tabEPartsLayout.setVerticalGroup(
            tabEPartsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabEPartsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tabEPartsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tabEPartsLayout.createSequentialGroup()
                        .addComponent(labelEPart2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(tabEPartsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelEPartName2)
                            .addComponent(textfieldEPartName2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labelEPartDesc2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textfieldEPartDesc1_2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textfieldEPartDesc2_2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textfieldEPartDesc3_2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(tabEPartsLayout.createSequentialGroup()
                        .addComponent(labelEPart0)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(tabEPartsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelEPartName0)
                            .addComponent(textfieldEPartName0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labelEPartDesc0)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textfieldEPartDesc1_0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textfieldEPartDesc2_0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textfieldEPartDesc3_0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(tabEPartsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tabEPartsLayout.createSequentialGroup()
                        .addComponent(labelEPart3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(tabEPartsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelEPartName3)
                            .addComponent(textfieldEPartName3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labelEPartDesc3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textfieldEPartDesc1_3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textfieldEPartDesc2_3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textfieldEPartDesc3_3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(tabEPartsLayout.createSequentialGroup()
                        .addComponent(labelEPart1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(tabEPartsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelEPartName1)
                            .addComponent(textfieldEPartName1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labelEPartDesc1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textfieldEPartDesc1_1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textfieldEPartDesc2_1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textfieldEPartDesc3_1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(87, Short.MAX_VALUE))
        );

        tabsPanel.addTab("E. Parts", tabEParts);

        labelPPart0.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelPPart0.setForeground(new java.awt.Color(51, 51, 255));
        labelPPart0.setText("#000");

        labelPPartName0.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelPPartName0.setText("Name:");

        textfieldPPartName0.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldPPartName0KeyTyped(evt);
            }
        });

        labelPPartDesc0.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelPPartDesc0.setText("Description:");

        textfieldPPartDesc1_0.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldPPartDesc1_0KeyTyped(evt);
            }
        });

        textfieldPPartDesc2_0.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldPPartDesc2_0KeyTyped(evt);
            }
        });

        textfieldPPartDesc3_0.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldPPartDesc3_0KeyTyped(evt);
            }
        });

        labelPPart2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelPPart2.setForeground(new java.awt.Color(51, 51, 255));
        labelPPart2.setText("#000");

        labelPPartName2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelPPartName2.setText("Name:");

        textfieldPPartName2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldPPartName2KeyTyped(evt);
            }
        });

        labelPPartDesc2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelPPartDesc2.setText("Description:");

        textfieldPPartDesc1_2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldPPartDesc1_2KeyTyped(evt);
            }
        });

        textfieldPPartDesc2_2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldPPartDesc2_2KeyTyped(evt);
            }
        });

        textfieldPPartDesc3_2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldPPartDesc3_2KeyTyped(evt);
            }
        });

        labelPPart1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelPPart1.setForeground(new java.awt.Color(51, 51, 255));
        labelPPart1.setText("#000");

        labelPPartName1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelPPartName1.setText("Name:");

        textfieldPPartName1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldPPartName1KeyTyped(evt);
            }
        });

        labelPPartDesc1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelPPartDesc1.setText("Description:");

        textfieldPPartDesc1_1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldPPartDesc1_1KeyTyped(evt);
            }
        });

        textfieldPPartDesc2_1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldPPartDesc2_1KeyTyped(evt);
            }
        });

        textfieldPPartDesc3_1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldPPartDesc3_1KeyTyped(evt);
            }
        });

        labelPPart3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelPPart3.setForeground(new java.awt.Color(51, 51, 255));
        labelPPart3.setText("#000");

        labelPPartName3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelPPartName3.setText("Name:");

        textfieldPPartName3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldPPartName3KeyTyped(evt);
            }
        });

        labelPPartDesc3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelPPartDesc3.setText("Description:");

        textfieldPPartDesc1_3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldPPartDesc1_3KeyTyped(evt);
            }
        });

        textfieldPPartDesc2_3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldPPartDesc2_3KeyTyped(evt);
            }
        });

        textfieldPPartDesc3_3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldPPartDesc3_3KeyTyped(evt);
            }
        });

        javax.swing.GroupLayout tabPPartsLayout = new javax.swing.GroupLayout(tabPParts);
        tabPParts.setLayout(tabPPartsLayout);
        tabPPartsLayout.setHorizontalGroup(
            tabPPartsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabPPartsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tabPPartsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tabPPartsLayout.createSequentialGroup()
                        .addGroup(tabPPartsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(tabPPartsLayout.createSequentialGroup()
                                .addComponent(labelPPartName0, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(textfieldPPartName0, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(labelPPart0, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelPPartDesc0, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textfieldPPartDesc1_0, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textfieldPPartDesc2_0, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textfieldPPartDesc3_0, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 78, Short.MAX_VALUE)
                        .addGroup(tabPPartsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(tabPPartsLayout.createSequentialGroup()
                                .addComponent(labelPPartName2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(textfieldPPartName2, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(labelPPart2, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelPPartDesc2, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textfieldPPartDesc1_2, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textfieldPPartDesc2_2, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textfieldPPartDesc3_2, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(tabPPartsLayout.createSequentialGroup()
                        .addGroup(tabPPartsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(labelPPart1, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(tabPPartsLayout.createSequentialGroup()
                                .addComponent(labelPPartName1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(textfieldPPartName1, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(labelPPartDesc1, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textfieldPPartDesc1_1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textfieldPPartDesc2_1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textfieldPPartDesc3_1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 78, Short.MAX_VALUE)
                        .addGroup(tabPPartsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(labelPPart3, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(tabPPartsLayout.createSequentialGroup()
                                .addComponent(labelPPartName3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(textfieldPPartName3, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(labelPPartDesc3, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textfieldPPartDesc1_3, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textfieldPPartDesc2_3, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textfieldPPartDesc3_3, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        tabPPartsLayout.setVerticalGroup(
            tabPPartsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabPPartsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tabPPartsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tabPPartsLayout.createSequentialGroup()
                        .addComponent(labelPPart2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(tabPPartsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelPPartName2)
                            .addComponent(textfieldPPartName2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labelPPartDesc2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textfieldPPartDesc1_2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textfieldPPartDesc2_2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textfieldPPartDesc3_2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(tabPPartsLayout.createSequentialGroup()
                        .addComponent(labelPPart0)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(tabPPartsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelPPartName0)
                            .addComponent(textfieldPPartName0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labelPPartDesc0)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textfieldPPartDesc1_0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textfieldPPartDesc2_0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textfieldPPartDesc3_0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(tabPPartsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tabPPartsLayout.createSequentialGroup()
                        .addComponent(labelPPart3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(tabPPartsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelPPartName3)
                            .addComponent(textfieldPPartName3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labelPPartDesc3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textfieldPPartDesc1_3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textfieldPPartDesc2_3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textfieldPPartDesc3_3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(tabPPartsLayout.createSequentialGroup()
                        .addComponent(labelPPart1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(tabPPartsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelPPartName1)
                            .addComponent(textfieldPPartName1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labelPPartDesc1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textfieldPPartDesc1_1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textfieldPPartDesc2_1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textfieldPPartDesc3_1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(87, Short.MAX_VALUE))
        );

        tabsPanel.addTab("P. Parts", tabPParts);

        labelTitle00.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelTitle00.setForeground(new java.awt.Color(51, 51, 255));
        labelTitle00.setText("#000");

        textfieldTitle00.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldTitle00KeyTyped(evt);
            }
        });

        labelTitle07.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelTitle07.setForeground(new java.awt.Color(51, 51, 255));
        labelTitle07.setText("#000");

        textfieldTitle07.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldTitle07KeyTyped(evt);
            }
        });

        labelTitle01.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelTitle01.setForeground(new java.awt.Color(51, 51, 255));
        labelTitle01.setText("#000");

        textfieldTitle01.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldTitle01KeyTyped(evt);
            }
        });

        labelTitle08.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelTitle08.setForeground(new java.awt.Color(51, 51, 255));
        labelTitle08.setText("#000");

        textfieldTitle08.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldTitle08KeyTyped(evt);
            }
        });

        textfieldTitle02.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldTitle02KeyTyped(evt);
            }
        });

        labelTitle02.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelTitle02.setForeground(new java.awt.Color(51, 51, 255));
        labelTitle02.setText("#000");

        labelTitle09.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelTitle09.setForeground(new java.awt.Color(51, 51, 255));
        labelTitle09.setText("#000");

        textfieldTitle09.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldTitle09KeyTyped(evt);
            }
        });

        textfieldTitle10.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldTitle10KeyTyped(evt);
            }
        });

        labelTitle10.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelTitle10.setForeground(new java.awt.Color(51, 51, 255));
        labelTitle10.setText("#000");

        textfieldTitle03.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldTitle03KeyTyped(evt);
            }
        });

        labelTitle03.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelTitle03.setForeground(new java.awt.Color(51, 51, 255));
        labelTitle03.setText("#000");

        textfieldTitle05.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldTitle05KeyTyped(evt);
            }
        });

        textfieldTitle04.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldTitle04KeyTyped(evt);
            }
        });

        labelTitle04.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelTitle04.setForeground(new java.awt.Color(51, 51, 255));
        labelTitle04.setText("#000");

        textfieldTitle12.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldTitle12KeyTyped(evt);
            }
        });

        labelTitle05.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelTitle05.setForeground(new java.awt.Color(51, 51, 255));
        labelTitle05.setText("#000");

        labelTitle12.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelTitle12.setForeground(new java.awt.Color(51, 51, 255));
        labelTitle12.setText("#000");

        labelTitle11.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelTitle11.setForeground(new java.awt.Color(51, 51, 255));
        labelTitle11.setText("#000");

        textfieldTitle11.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldTitle11KeyTyped(evt);
            }
        });

        textfieldTitle06.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldTitle06KeyTyped(evt);
            }
        });

        labelTitle06.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelTitle06.setForeground(new java.awt.Color(51, 51, 255));
        labelTitle06.setText("#000");

        labelTitle13.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelTitle13.setForeground(new java.awt.Color(51, 51, 255));
        labelTitle13.setText("#000");

        textfieldTitle13.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldTitle13KeyTyped(evt);
            }
        });

        javax.swing.GroupLayout tabTitlesLayout = new javax.swing.GroupLayout(tabTitles);
        tabTitles.setLayout(tabTitlesLayout);
        tabTitlesLayout.setHorizontalGroup(
            tabTitlesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tabTitlesLayout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addGroup(tabTitlesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tabTitlesLayout.createSequentialGroup()
                        .addGroup(tabTitlesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelTitle01, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textfieldTitle01, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textfieldTitle03, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelTitle03, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textfieldTitle05, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelTitle05, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textfieldTitle06, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelTitle06, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(86, 86, 86)
                        .addGroup(tabTitlesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelTitle08, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textfieldTitle08, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textfieldTitle10, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelTitle10, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textfieldTitle12, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelTitle12, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelTitle13, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textfieldTitle13, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(tabTitlesLayout.createSequentialGroup()
                        .addGroup(tabTitlesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelTitle00, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textfieldTitle00, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textfieldTitle02, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelTitle02, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textfieldTitle04, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelTitle04, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(86, 86, 86)
                        .addGroup(tabTitlesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textfieldTitle07, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelTitle07, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelTitle09, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textfieldTitle09, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelTitle11, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textfieldTitle11, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(38, 38, 38))
        );
        tabTitlesLayout.setVerticalGroup(
            tabTitlesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabTitlesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tabTitlesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelTitle00)
                    .addComponent(labelTitle07))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(tabTitlesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textfieldTitle00, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textfieldTitle07, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(tabTitlesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelTitle01)
                    .addComponent(labelTitle08))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(tabTitlesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textfieldTitle01, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textfieldTitle08, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(tabTitlesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelTitle02)
                    .addComponent(labelTitle09))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(tabTitlesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textfieldTitle02, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textfieldTitle09, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(tabTitlesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelTitle03)
                    .addComponent(labelTitle10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(tabTitlesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textfieldTitle03, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textfieldTitle10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(tabTitlesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelTitle04)
                    .addComponent(labelTitle11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(tabTitlesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textfieldTitle04, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textfieldTitle11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(tabTitlesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelTitle05)
                    .addComponent(labelTitle12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(tabTitlesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textfieldTitle05, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textfieldTitle12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(tabTitlesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelTitle06)
                    .addComponent(labelTitle13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(tabTitlesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textfieldTitle06, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textfieldTitle13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        tabsPanel.addTab("Titles", tabTitles);

        labelForm0.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelForm0.setForeground(new java.awt.Color(51, 51, 255));
        labelForm0.setText("#000");

        labelFormName1_0.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelFormName1_0.setText("Form 1:");

        textfieldFormName1_0.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldFormName1_0KeyTyped(evt);
            }
        });

        textfieldFormName2_0.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldFormName2_0KeyTyped(evt);
            }
        });

        labelFormName2_0.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelFormName2_0.setText("Form 2:");

        labelForm2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelForm2.setForeground(new java.awt.Color(51, 51, 255));
        labelForm2.setText("#002");

        labelFormName1_2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelFormName1_2.setText("Form 1:");

        textfieldFormName1_2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldFormName1_2KeyTyped(evt);
            }
        });

        textfieldFormName2_2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldFormName2_2KeyTyped(evt);
            }
        });

        labelFormName2_2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelFormName2_2.setText("Form 2:");

        labelFormName3_2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelFormName3_2.setText("Form 3:");

        textfieldFormName3_2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldFormName3_2KeyTyped(evt);
            }
        });

        textfieldFormName4_2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldFormName4_2KeyTyped(evt);
            }
        });

        labelFormName4_2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelFormName4_2.setText("Form 4:");

        labelForm1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelForm1.setForeground(new java.awt.Color(51, 51, 255));
        labelForm1.setText("#001");

        labelFormName1_1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelFormName1_1.setText("Form 1:");

        textfieldFormName1_1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldFormName1_1KeyTyped(evt);
            }
        });

        textfieldFormName2_1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldFormName2_1KeyTyped(evt);
            }
        });

        labelFormName2_1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelFormName2_1.setText("Form 2:");

        labelForm3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelForm3.setForeground(new java.awt.Color(51, 51, 255));
        labelForm3.setText("#003");

        labelFormName1_3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelFormName1_3.setText("Form 1:");

        textfieldFormName1_3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldFormName1_3KeyTyped(evt);
            }
        });

        textfieldFormName2_3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldFormName2_3KeyTyped(evt);
            }
        });

        labelFormName2_3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelFormName2_3.setText("Form 2:");

        labelFormName3_3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelFormName3_3.setText("Form 3:");

        textfieldFormName3_3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldFormName3_3KeyTyped(evt);
            }
        });

        textfieldFormName4_3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldFormName4_3KeyTyped(evt);
            }
        });

        labelFormName4_3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelFormName4_3.setText("Form 4:");

        javax.swing.GroupLayout tabFormsLayout = new javax.swing.GroupLayout(tabForms);
        tabForms.setLayout(tabFormsLayout);
        tabFormsLayout.setHorizontalGroup(
            tabFormsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabFormsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tabFormsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tabFormsLayout.createSequentialGroup()
                        .addGroup(tabFormsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(tabFormsLayout.createSequentialGroup()
                                .addComponent(labelFormName1_0, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(textfieldFormName1_0, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(labelForm0, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(tabFormsLayout.createSequentialGroup()
                                .addComponent(labelFormName2_0, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(textfieldFormName2_0, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 60, Short.MAX_VALUE)
                        .addGroup(tabFormsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(tabFormsLayout.createSequentialGroup()
                                .addComponent(labelFormName1_2, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(textfieldFormName1_2, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(labelForm2, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(tabFormsLayout.createSequentialGroup()
                                .addComponent(labelFormName2_2, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(textfieldFormName2_2, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(tabFormsLayout.createSequentialGroup()
                                .addComponent(labelFormName3_2, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(textfieldFormName3_2, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(tabFormsLayout.createSequentialGroup()
                                .addComponent(labelFormName4_2, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(textfieldFormName4_2, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(tabFormsLayout.createSequentialGroup()
                        .addGroup(tabFormsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(labelForm1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(tabFormsLayout.createSequentialGroup()
                                .addComponent(labelFormName1_1, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(textfieldFormName1_1, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(tabFormsLayout.createSequentialGroup()
                                .addComponent(labelFormName2_1, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(textfieldFormName2_1, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 60, Short.MAX_VALUE)
                        .addGroup(tabFormsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(labelForm3, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(tabFormsLayout.createSequentialGroup()
                                .addComponent(labelFormName1_3, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(textfieldFormName1_3, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(tabFormsLayout.createSequentialGroup()
                                .addComponent(labelFormName2_3, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(textfieldFormName2_3, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(tabFormsLayout.createSequentialGroup()
                                .addComponent(labelFormName3_3, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(textfieldFormName3_3, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(tabFormsLayout.createSequentialGroup()
                                .addComponent(labelFormName4_3, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(textfieldFormName4_3, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        tabFormsLayout.setVerticalGroup(
            tabFormsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabFormsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tabFormsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tabFormsLayout.createSequentialGroup()
                        .addComponent(labelForm2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(tabFormsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelFormName1_2)
                            .addComponent(textfieldFormName1_2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(tabFormsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelFormName2_2)
                            .addComponent(textfieldFormName2_2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(tabFormsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelFormName3_2)
                            .addComponent(textfieldFormName3_2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(tabFormsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelFormName4_2)
                            .addComponent(textfieldFormName4_2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(tabFormsLayout.createSequentialGroup()
                        .addComponent(labelForm0)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(tabFormsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelFormName1_0)
                            .addComponent(textfieldFormName1_0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(tabFormsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelFormName2_0)
                            .addComponent(textfieldFormName2_0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(tabFormsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tabFormsLayout.createSequentialGroup()
                        .addComponent(labelForm3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(tabFormsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelFormName1_3)
                            .addComponent(textfieldFormName1_3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(tabFormsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelFormName2_3)
                            .addComponent(textfieldFormName2_3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(tabFormsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelFormName3_3)
                            .addComponent(textfieldFormName3_3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(tabFormsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelFormName4_3)
                            .addComponent(textfieldFormName4_3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(tabFormsLayout.createSequentialGroup()
                        .addComponent(labelForm1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(tabFormsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelFormName1_1)
                            .addComponent(textfieldFormName1_1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(tabFormsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelFormName2_1)
                            .addComponent(textfieldFormName2_1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(127, Short.MAX_VALUE))
        );

        tabsPanel.addTab("Forms", tabForms);

        labelCLib0.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelCLib0.setForeground(new java.awt.Color(51, 51, 255));
        labelCLib0.setText("#000");

        textfieldCLibHiragana0.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldCLibHiragana0KeyTyped(evt);
            }
        });

        labelCLibHiragana0.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelCLibHiragana0.setText("Hiragana:");

        labelCLibSeiyuu0.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelCLibSeiyuu0.setText("VA name:");

        textfieldCLibSeiyuu0.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldCLibSeiyuu0KeyTyped(evt);
            }
        });

        textfieldCLibHiragana2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldCLibHiragana2KeyTyped(evt);
            }
        });

        labelCLibHiragana2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelCLibHiragana2.setText("Hiragana:");

        labelCLibSeiyuu2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelCLibSeiyuu2.setText("VA name:");

        textfieldCLibSeiyuu2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldCLibSeiyuu2KeyTyped(evt);
            }
        });

        labelCLib2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelCLib2.setForeground(new java.awt.Color(51, 51, 255));
        labelCLib2.setText("#000");

        textareaCLib0.setColumns(20);
        textareaCLib0.setRows(5);
        textareaCLib0.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textareaCLib0KeyTyped(evt);
            }
        });
        scrollCLib0.setViewportView(textareaCLib0);

        textareaCLib2.setColumns(20);
        textareaCLib2.setRows(5);
        textareaCLib2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textareaCLib2KeyTyped(evt);
            }
        });
        scrollCLib2.setViewportView(textareaCLib2);

        labelCLib1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelCLib1.setForeground(new java.awt.Color(51, 51, 255));
        labelCLib1.setText("#000");

        textfieldCLibHiragana1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldCLibHiragana1KeyTyped(evt);
            }
        });

        labelCLibHiragana1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelCLibHiragana1.setText("Hiragana:");

        labelCLibSeiyuu1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelCLibSeiyuu1.setText("VA name:");

        textfieldCLibSeiyuu1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldCLibSeiyuu1KeyTyped(evt);
            }
        });

        textfieldCLibHiragana3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldCLibHiragana3KeyTyped(evt);
            }
        });

        labelCLibHiragana3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelCLibHiragana3.setText("Hiragana:");

        labelCLibSeiyuu3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelCLibSeiyuu3.setText("VA name:");

        textfieldCLibSeiyuu3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldCLibSeiyuu3KeyTyped(evt);
            }
        });

        labelCLib3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelCLib3.setForeground(new java.awt.Color(51, 51, 255));
        labelCLib3.setText("#000");

        textareaCLib1.setColumns(20);
        textareaCLib1.setRows(5);
        textareaCLib1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textareaCLib1KeyTyped(evt);
            }
        });
        scrollCLib1.setViewportView(textareaCLib1);

        textareaCLib3.setColumns(20);
        textareaCLib3.setRows(5);
        textareaCLib3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textareaCLib3KeyTyped(evt);
            }
        });
        scrollCLib3.setViewportView(textareaCLib3);

        javax.swing.GroupLayout tabCharLibLayout = new javax.swing.GroupLayout(tabCharLib);
        tabCharLib.setLayout(tabCharLibLayout);
        tabCharLibLayout.setHorizontalGroup(
            tabCharLibLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabCharLibLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tabCharLibLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tabCharLibLayout.createSequentialGroup()
                        .addGroup(tabCharLibLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(tabCharLibLayout.createSequentialGroup()
                                .addComponent(labelCLibHiragana0, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(textfieldCLibHiragana0, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(labelCLib0, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(tabCharLibLayout.createSequentialGroup()
                                .addComponent(labelCLibSeiyuu0, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(textfieldCLibSeiyuu0, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                        .addGroup(tabCharLibLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(tabCharLibLayout.createSequentialGroup()
                                .addComponent(labelCLibHiragana2, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(textfieldCLibHiragana2, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(labelCLib2, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(tabCharLibLayout.createSequentialGroup()
                                .addComponent(labelCLibSeiyuu2, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(textfieldCLibSeiyuu2, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(tabCharLibLayout.createSequentialGroup()
                        .addComponent(scrollCLib0, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                        .addComponent(scrollCLib2, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(tabCharLibLayout.createSequentialGroup()
                        .addGroup(tabCharLibLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(labelCLib1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(tabCharLibLayout.createSequentialGroup()
                                .addComponent(labelCLibHiragana1, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(textfieldCLibHiragana1, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(tabCharLibLayout.createSequentialGroup()
                                .addComponent(labelCLibSeiyuu1, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(textfieldCLibSeiyuu1, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                        .addGroup(tabCharLibLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(tabCharLibLayout.createSequentialGroup()
                                .addComponent(labelCLibHiragana3, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(textfieldCLibHiragana3, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(tabCharLibLayout.createSequentialGroup()
                                .addComponent(labelCLibSeiyuu3, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(textfieldCLibSeiyuu3, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(labelCLib3, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(tabCharLibLayout.createSequentialGroup()
                        .addComponent(scrollCLib1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                        .addComponent(scrollCLib3, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        tabCharLibLayout.setVerticalGroup(
            tabCharLibLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabCharLibLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tabCharLibLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tabCharLibLayout.createSequentialGroup()
                        .addComponent(labelCLib2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(tabCharLibLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelCLibHiragana2)
                            .addComponent(textfieldCLibHiragana2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(tabCharLibLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelCLibSeiyuu2)
                            .addComponent(textfieldCLibSeiyuu2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(tabCharLibLayout.createSequentialGroup()
                        .addComponent(labelCLib0)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(tabCharLibLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelCLibHiragana0)
                            .addComponent(textfieldCLibHiragana0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(tabCharLibLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelCLibSeiyuu0)
                            .addComponent(textfieldCLibSeiyuu0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(tabCharLibLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(scrollCLib2, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
                    .addComponent(scrollCLib0, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(tabCharLibLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tabCharLibLayout.createSequentialGroup()
                        .addComponent(labelCLib3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(tabCharLibLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelCLibHiragana3)
                            .addComponent(textfieldCLibHiragana3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(tabCharLibLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelCLibSeiyuu3)
                            .addComponent(textfieldCLibSeiyuu3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(tabCharLibLayout.createSequentialGroup()
                        .addComponent(labelCLib1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(tabCharLibLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelCLibHiragana1)
                            .addComponent(textfieldCLibHiragana1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(tabCharLibLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelCLibSeiyuu1)
                            .addComponent(textfieldCLibSeiyuu1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(tabCharLibLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(scrollCLib1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(scrollCLib3, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tabsPanel.addTab("C. Library", tabCharLib);

        labelRLib0.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelRLib0.setForeground(new java.awt.Color(51, 51, 255));
        labelRLib0.setText("#000");

        labelRLibHeight0.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelRLibHeight0.setText("Height:");

        textfieldRLibHeight0.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldRLibHeight0KeyTyped(evt);
            }
        });

        textareaRLib0.setColumns(20);
        textareaRLib0.setRows(5);
        textareaRLib0.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textareaRLib0KeyTyped(evt);
            }
        });
        scrollRLib0.setViewportView(textareaRLib0);

        labelRLibWeight0.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelRLibWeight0.setText("Weight:");

        textfieldRLibWeight0.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldRLibWeight0KeyTyped(evt);
            }
        });

        labelRLib2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelRLib2.setForeground(new java.awt.Color(51, 51, 255));
        labelRLib2.setText("#000");

        labelRLibHeight2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelRLibHeight2.setText("Height:");

        textfieldRLibHeight2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldRLibHeight2KeyTyped(evt);
            }
        });

        textareaRLib2.setColumns(20);
        textareaRLib2.setRows(5);
        textareaRLib2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textareaRLib2KeyTyped(evt);
            }
        });
        scrollRLib2.setViewportView(textareaRLib2);

        labelRLibWeight2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelRLibWeight2.setText("Weight:");

        textfieldRLibWeight2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldRLibWeight2KeyTyped(evt);
            }
        });

        labelRLib1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelRLib1.setForeground(new java.awt.Color(51, 51, 255));
        labelRLib1.setText("#000");

        labelRLibHeight1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelRLibHeight1.setText("Height:");

        textfieldRLibHeight1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldRLibHeight1KeyTyped(evt);
            }
        });

        textareaRLib1.setColumns(20);
        textareaRLib1.setRows(5);
        textareaRLib1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textareaRLib1KeyTyped(evt);
            }
        });
        scrollRLib1.setViewportView(textareaRLib1);

        labelRLibWeight1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelRLibWeight1.setText("Weight:");

        textfieldRLibWeight1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldRLibWeight1KeyTyped(evt);
            }
        });

        labelRLib3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelRLib3.setForeground(new java.awt.Color(51, 51, 255));
        labelRLib3.setText("#000");

        labelRLibHeight3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelRLibHeight3.setText("Height:");

        textfieldRLibHeight3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldRLibHeight3KeyTyped(evt);
            }
        });

        textareaRLib3.setColumns(20);
        textareaRLib3.setRows(5);
        textareaRLib3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textareaRLib3KeyTyped(evt);
            }
        });
        scrollRLib3.setViewportView(textareaRLib3);

        labelRLibWeight3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelRLibWeight3.setText("Weight:");

        textfieldRLibWeight3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldRLibWeight3KeyTyped(evt);
            }
        });

        labelRLibHiragana0.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelRLibHiragana0.setText("Hiragana");

        textfieldRLibHiragana0.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldRLibHiragana0KeyTyped(evt);
            }
        });

        textfieldRLibHiragana1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldRLibHiragana1KeyTyped(evt);
            }
        });

        labelRLibHiragana1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelRLibHiragana1.setText("Hiragana");

        textfieldRLibHiragana2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldRLibHiragana2KeyTyped(evt);
            }
        });

        labelRLibHiragana2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelRLibHiragana2.setText("Hiragana");

        textfieldRLibHiragana3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldRLibHiragana3KeyTyped(evt);
            }
        });

        labelRLibHiragana3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelRLibHiragana3.setText("Hiragana");

        javax.swing.GroupLayout tabRobLibLayout = new javax.swing.GroupLayout(tabRobLib);
        tabRobLib.setLayout(tabRobLibLayout);
        tabRobLibLayout.setHorizontalGroup(
            tabRobLibLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabRobLibLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tabRobLibLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tabRobLibLayout.createSequentialGroup()
                        .addGroup(tabRobLibLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelRLib0, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(scrollRLib0, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelRLib1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(scrollRLib1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                        .addGroup(tabRobLibLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelRLib2, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(scrollRLib2, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelRLib3, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(scrollRLib3, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(tabRobLibLayout.createSequentialGroup()
                        .addComponent(labelRLibHeight0, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textfieldRLibHeight0, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(labelRLibWeight0, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textfieldRLibWeight0, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                        .addComponent(labelRLibHeight2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textfieldRLibHeight2, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(labelRLibWeight2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textfieldRLibWeight2, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(tabRobLibLayout.createSequentialGroup()
                        .addComponent(labelRLibHeight1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textfieldRLibHeight1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(labelRLibWeight1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textfieldRLibWeight1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                        .addComponent(labelRLibHeight3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textfieldRLibHeight3, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(labelRLibWeight3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textfieldRLibWeight3, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(tabRobLibLayout.createSequentialGroup()
                        .addComponent(labelRLibHiragana0, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textfieldRLibHiragana0, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                        .addComponent(labelRLibHiragana2, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textfieldRLibHiragana2, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(tabRobLibLayout.createSequentialGroup()
                        .addComponent(labelRLibHiragana1, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textfieldRLibHiragana1, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                        .addComponent(labelRLibHiragana3, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textfieldRLibHiragana3, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        tabRobLibLayout.setVerticalGroup(
            tabRobLibLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabRobLibLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tabRobLibLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tabRobLibLayout.createSequentialGroup()
                        .addComponent(labelRLib0)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(tabRobLibLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelRLibHiragana0)
                            .addComponent(textfieldRLibHiragana0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(tabRobLibLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelRLibHeight0)
                            .addComponent(textfieldRLibHeight0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelRLibWeight0)
                            .addComponent(textfieldRLibWeight0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(scrollRLib0, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(tabRobLibLayout.createSequentialGroup()
                        .addComponent(labelRLib2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(tabRobLibLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelRLibHiragana2)
                            .addComponent(textfieldRLibHiragana2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(tabRobLibLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelRLibHeight2)
                            .addComponent(textfieldRLibHeight2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelRLibWeight2)
                            .addComponent(textfieldRLibWeight2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(scrollRLib2, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(tabRobLibLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tabRobLibLayout.createSequentialGroup()
                        .addComponent(labelRLib1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(tabRobLibLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelRLibHiragana1)
                            .addComponent(textfieldRLibHiragana1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(tabRobLibLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelRLibHeight1)
                            .addComponent(textfieldRLibHeight1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelRLibWeight1)
                            .addComponent(textfieldRLibWeight1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(scrollRLib1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(tabRobLibLayout.createSequentialGroup()
                        .addComponent(labelRLib3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(tabRobLibLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelRLibHiragana3)
                            .addComponent(textfieldRLibHiragana3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(tabRobLibLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelRLibHeight3)
                            .addComponent(textfieldRLibHeight3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelRLibWeight3)
                            .addComponent(textfieldRLibWeight3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(scrollRLib3, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tabsPanel.addTab("R. Library", tabRobLib);

        panelNavigation.setBorder(javax.swing.BorderFactory.createTitledBorder("Navigation"));

        buttonBack.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        buttonBack.setForeground(new java.awt.Color(51, 51, 255));
        buttonBack.setText("<<");
        buttonBack.setEnabled(false);
        buttonBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBackActionPerformed(evt);
            }
        });

        labelPage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelPage.setText("Page 0 / 0");
        labelPage.setEnabled(false);

        buttonNext.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        buttonNext.setForeground(new java.awt.Color(51, 51, 255));
        buttonNext.setText(">>");
        buttonNext.setEnabled(false);
        buttonNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonNextActionPerformed(evt);
            }
        });

        textfieldJumpTo.setEnabled(false);
        textfieldJumpTo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textfieldJumpToActionPerformed(evt);
            }
        });

        labelJumpTo.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelJumpTo.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelJumpTo.setText("Jump to:");
        labelJumpTo.setEnabled(false);

        buttonJump.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        buttonJump.setText("GO!");
        buttonJump.setEnabled(false);
        buttonJump.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonJumpActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelNavigationLayout = new javax.swing.GroupLayout(panelNavigation);
        panelNavigation.setLayout(panelNavigationLayout);
        panelNavigationLayout.setHorizontalGroup(
            panelNavigationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelNavigationLayout.createSequentialGroup()
                .addGap(215, 215, 215)
                .addComponent(buttonBack)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(labelPage, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(buttonNext)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                .addComponent(labelJumpTo, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(textfieldJumpTo, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonJump)
                .addContainerGap())
        );
        panelNavigationLayout.setVerticalGroup(
            panelNavigationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelNavigationLayout.createSequentialGroup()
                .addGroup(panelNavigationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonBack)
                    .addComponent(labelPage)
                    .addComponent(buttonNext)
                    .addComponent(textfieldJumpTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelJumpTo)
                    .addComponent(buttonJump))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        menuFile.setText("File");

        menuitemOpen.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        menuitemOpen.setText("Open...");
        menuitemOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuitemOpenActionPerformed(evt);
            }
        });
        menuFile.add(menuitemOpen);
        menuFile.add(jSeparator1);

        menuitemSaveAs.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        menuitemSaveAs.setText("Save as...");
        menuitemSaveAs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuitemSaveAsActionPerformed(evt);
            }
        });
        menuFile.add(menuitemSaveAs);
        menuFile.add(jSeparator2);

        menuitemExit.setText("Exit");
        menuitemExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuitemExitActionPerformed(evt);
            }
        });
        menuFile.add(menuitemExit);

        menuBar.add(menuFile);

        menuEdit.setText("Edit");

        checkMenuitemSJIS.setSelected(true);
        checkMenuitemSJIS.setText("Convert keystrokes to SJIS");
        menuEdit.add(checkMenuitemSJIS);

        checkMenuitemAddSpace.setSelected(true);
        checkMenuitemAddSpace.setText("End even ASCII data with a SJIS space");
        menuEdit.add(checkMenuitemAddSpace);

        menuBar.add(menuEdit);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(tabsPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 653, Short.MAX_VALUE)
                    .addComponent(panelNavigation, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panelNavigation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tabsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tabsPanelStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_tabsPanelStateChanged
        // TODO add your handling code here:
        current_tab = tabsPanel.getSelectedIndex();
        if (file_loaded)
            updateControls();
        //System.out.println("Loaded tab: " + current_tab);
    }//GEN-LAST:event_tabsPanelStateChanged

    private void buttonBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBackActionPerformed
        // TODO add your handling code here:
        changePage(-1);
    }//GEN-LAST:event_buttonBackActionPerformed

    private void buttonNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonNextActionPerformed
        // TODO add your handling code here:
        changePage(1);
    }//GEN-LAST:event_buttonNextActionPerformed

    private void buttonJumpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonJumpActionPerformed
        // TODO add your handling code here:
        int num_page = Integer.valueOf(textfieldJumpTo.getText());
        jumpTo(num_page - 1);   // We give the illusion that we count pages starting from 1
    }//GEN-LAST:event_buttonJumpActionPerformed

    private void textfieldJumpToActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textfieldJumpToActionPerformed
        // TODO add your handling code here:
        buttonJump.doClick();
    }//GEN-LAST:event_textfieldJumpToActionPerformed

    private void menuitemOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuitemOpenActionPerformed
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser();
        chooser.setCurrentDirectory(new java.io.File(lastDirectory));
        chooser.setDialogTitle("Load add02dat.bin file");
        chooser.setFileFilter(new FileNameExtensionFilter("BIN file", "bin"));

        if (chooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION){
            openFile(chooser.getSelectedFile().getAbsolutePath());

            lastDirectory = chooser.getSelectedFile().getPath();
        }
    }//GEN-LAST:event_menuitemOpenActionPerformed

    private void menuitemSaveAsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuitemSaveAsActionPerformed
        // TODO add your handling code here:
        if (file_loaded){
            JFileChooser chooser = new JFileChooser();
            chooser.setCurrentDirectory(new java.io.File(lastDirectory));
            chooser.setDialogTitle("Save add02dat.bin file");
            chooser.setFileFilter(new FileNameExtensionFilter("BIN file", "bin"));

            if (chooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION){
                saveFile(chooser.getSelectedFile().getAbsolutePath());

                lastDirectory = chooser.getSelectedFile().getPath();
            }
        }
        else{
            JOptionPane.showMessageDialog(null, "No file loaded!",
                    "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_menuitemSaveAsActionPerformed

    private void menuitemExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuitemExitActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_menuitemExitActionPerformed

    private void textfieldCharFName0KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldCharFName0KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldCharFName0KeyTyped

    private void textfieldCharSName0KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldCharSName0KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldCharSName0KeyTyped

    private void textfieldCharFName1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldCharFName1KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldCharFName1KeyTyped

    private void textfieldCharSName1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldCharSName1KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldCharSName1KeyTyped

    private void textfieldCharFName2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldCharFName2KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldCharFName2KeyTyped

    private void textfieldCharSName2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldCharSName2KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldCharSName2KeyTyped

    private void textfieldCharFName3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldCharFName3KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldCharFName3KeyTyped

    private void textfieldCharSName3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldCharSName3KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldCharSName3KeyTyped

    private void textfieldCharFName4KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldCharFName4KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldCharFName4KeyTyped

    private void textfieldCharSName4KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldCharSName4KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldCharSName4KeyTyped

    private void textfieldCharFName5KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldCharFName5KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldCharFName5KeyTyped

    private void textfieldCharSName5KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldCharSName5KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldCharSName5KeyTyped

    private void textfieldCharFName6KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldCharFName6KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldCharFName6KeyTyped

    private void textfieldCharSName6KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldCharSName6KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldCharSName6KeyTyped

    private void textfieldCharFName7KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldCharFName7KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldCharFName7KeyTyped

    private void textfieldCharSName7KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldCharSName7KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldCharSName7KeyTyped

    private void textfieldCharFName8KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldCharFName8KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldCharFName8KeyTyped

    private void textfieldCharSName8KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldCharSName8KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldCharSName8KeyTyped

    private void textfieldCharFName9KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldCharFName9KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldCharFName9KeyTyped

    private void textfieldCharSName9KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldCharSName9KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldCharSName9KeyTyped

    private void textfieldRobot00KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldRobot00KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldRobot00KeyTyped

    private void textfieldRobot01KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldRobot01KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldRobot01KeyTyped

    private void textfieldRobot02KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldRobot02KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldRobot02KeyTyped

    private void textfieldRobot03KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldRobot03KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldRobot03KeyTyped

    private void textfieldRobot04KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldRobot04KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldRobot04KeyTyped

    private void textfieldRobot05KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldRobot05KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldRobot05KeyTyped

    private void textfieldRobot06KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldRobot06KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldRobot06KeyTyped

    private void textfieldRobot07KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldRobot07KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldRobot07KeyTyped

    private void textfieldRobot08KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldRobot08KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldRobot08KeyTyped

    private void textfieldRobot09KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldRobot09KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldRobot09KeyTyped

    private void textfieldRobot10KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldRobot10KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldRobot10KeyTyped

    private void textfieldRobot11KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldRobot11KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldRobot11KeyTyped

    private void textfieldRobot12KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldRobot12KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldRobot12KeyTyped

    private void textfieldRobot13KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldRobot13KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldRobot13KeyTyped

    private void textfieldWeapon00KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldWeapon00KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldWeapon00KeyTyped

    private void textfieldWeapon01KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldWeapon01KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldWeapon01KeyTyped

    private void textfieldWeapon02KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldWeapon02KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldWeapon02KeyTyped

    private void textfieldWeapon03KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldWeapon03KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldWeapon03KeyTyped

    private void textfieldWeapon04KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldWeapon04KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldWeapon04KeyTyped

    private void textfieldWeapon05KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldWeapon05KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldWeapon05KeyTyped

    private void textfieldWeapon06KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldWeapon06KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldWeapon06KeyTyped

    private void textfieldWeapon07KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldWeapon07KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldWeapon07KeyTyped

    private void textfieldWeapon08KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldWeapon08KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldWeapon08KeyTyped

    private void textfieldWeapon09KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldWeapon09KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldWeapon09KeyTyped

    private void textfieldWeapon10KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldWeapon10KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldWeapon10KeyTyped

    private void textfieldWeapon11KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldWeapon11KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldWeapon11KeyTyped

    private void textfieldWeapon12KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldWeapon12KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldWeapon12KeyTyped

    private void textfieldWeapon13KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldWeapon13KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldWeapon13KeyTyped

    private void textfieldTerrain00KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldTerrain00KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldTerrain00KeyTyped

    private void textfieldTerrain01KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldTerrain01KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldTerrain01KeyTyped

    private void textfieldTerrain02KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldTerrain02KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldTerrain02KeyTyped

    private void textfieldTerrain03KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldTerrain03KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldTerrain03KeyTyped

    private void textfieldTerrain04KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldTerrain04KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldTerrain04KeyTyped

    private void textfieldTerrain05KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldTerrain05KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldTerrain05KeyTyped

    private void textfieldTerrain06KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldTerrain06KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldTerrain06KeyTyped

    private void textfieldTerrain07KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldTerrain07KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldTerrain07KeyTyped

    private void textfieldTerrain08KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldTerrain08KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldTerrain08KeyTyped

    private void textfieldTerrain09KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldTerrain09KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldTerrain09KeyTyped

    private void textfieldTerrain10KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldTerrain10KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldTerrain10KeyTyped

    private void textfieldTerrain11KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldTerrain11KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldTerrain11KeyTyped

    private void textfieldTerrain12KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldTerrain12KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldTerrain12KeyTyped

    private void textfieldTerrain13KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldTerrain13KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldTerrain13KeyTyped

    private void textfieldSeishinName0KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldSeishinName0KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldSeishinName0KeyTyped

    private void textfieldSeishinSName0KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldSeishinSName0KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldSeishinSName0KeyTyped

    private void textfieldSeishinDesc1_0KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldSeishinDesc1_0KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldSeishinDesc1_0KeyTyped

    private void textfieldSeishinDesc2_0KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldSeishinDesc2_0KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldSeishinDesc2_0KeyTyped

    private void textfieldSeishinDesc3_0KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldSeishinDesc3_0KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldSeishinDesc3_0KeyTyped

    private void textfieldSeishinName1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldSeishinName1KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldSeishinName1KeyTyped

    private void textfieldSeishinSName1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldSeishinSName1KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldSeishinSName1KeyTyped

    private void textfieldSeishinDesc1_1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldSeishinDesc1_1KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldSeishinDesc1_1KeyTyped

    private void textfieldSeishinDesc2_1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldSeishinDesc2_1KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldSeishinDesc2_1KeyTyped

    private void textfieldSeishinDesc3_1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldSeishinDesc3_1KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldSeishinDesc3_1KeyTyped

    private void textfieldSeishinName2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldSeishinName2KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldSeishinName2KeyTyped

    private void textfieldSeishinSName2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldSeishinSName2KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldSeishinSName2KeyTyped

    private void textfieldSeishinDesc1_2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldSeishinDesc1_2KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldSeishinDesc1_2KeyTyped

    private void textfieldSeishinDesc2_2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldSeishinDesc2_2KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldSeishinDesc2_2KeyTyped

    private void textfieldSeishinDesc3_2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldSeishinDesc3_2KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldSeishinDesc3_2KeyTyped

    private void textfieldSeishinName3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldSeishinName3KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldSeishinName3KeyTyped

    private void textfieldSeishinSName3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldSeishinSName3KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldSeishinSName3KeyTyped

    private void textfieldSeishinDesc1_3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldSeishinDesc1_3KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldSeishinDesc1_3KeyTyped

    private void textfieldSeishinDesc2_3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldSeishinDesc2_3KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldSeishinDesc2_3KeyTyped

    private void textfieldSeishinDesc3_3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldSeishinDesc3_3KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldSeishinDesc3_3KeyTyped

    private void textfieldEPartName0KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldEPartName0KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldEPartName0KeyTyped

    private void textfieldEPartDesc1_0KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldEPartDesc1_0KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldEPartDesc1_0KeyTyped

    private void textfieldEPartDesc2_0KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldEPartDesc2_0KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldEPartDesc2_0KeyTyped

    private void textfieldEPartDesc3_0KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldEPartDesc3_0KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldEPartDesc3_0KeyTyped

    private void textfieldEPartName1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldEPartName1KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldEPartName1KeyTyped

    private void textfieldEPartDesc1_1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldEPartDesc1_1KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldEPartDesc1_1KeyTyped

    private void textfieldEPartDesc2_1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldEPartDesc2_1KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldEPartDesc2_1KeyTyped

    private void textfieldEPartDesc3_1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldEPartDesc3_1KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldEPartDesc3_1KeyTyped

    private void textfieldEPartName2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldEPartName2KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldEPartName2KeyTyped

    private void textfieldEPartDesc1_2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldEPartDesc1_2KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldEPartDesc1_2KeyTyped

    private void textfieldEPartDesc2_2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldEPartDesc2_2KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldEPartDesc2_2KeyTyped

    private void textfieldEPartDesc3_2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldEPartDesc3_2KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldEPartDesc3_2KeyTyped

    private void textfieldEPartName3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldEPartName3KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldEPartName3KeyTyped

    private void textfieldEPartDesc1_3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldEPartDesc1_3KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldEPartDesc1_3KeyTyped

    private void textfieldEPartDesc2_3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldEPartDesc2_3KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldEPartDesc2_3KeyTyped

    private void textfieldEPartDesc3_3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldEPartDesc3_3KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldEPartDesc3_3KeyTyped

    private void textfieldPPartName0KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldPPartName0KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldPPartName0KeyTyped

    private void textfieldPPartDesc1_0KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldPPartDesc1_0KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldPPartDesc1_0KeyTyped

    private void textfieldPPartDesc2_0KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldPPartDesc2_0KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldPPartDesc2_0KeyTyped

    private void textfieldPPartDesc3_0KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldPPartDesc3_0KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldPPartDesc3_0KeyTyped

    private void textfieldPPartName1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldPPartName1KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldPPartName1KeyTyped

    private void textfieldPPartDesc1_1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldPPartDesc1_1KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldPPartDesc1_1KeyTyped

    private void textfieldPPartDesc2_1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldPPartDesc2_1KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldPPartDesc2_1KeyTyped

    private void textfieldPPartDesc3_1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldPPartDesc3_1KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldPPartDesc3_1KeyTyped

    private void textfieldPPartName2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldPPartName2KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldPPartName2KeyTyped

    private void textfieldPPartDesc1_2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldPPartDesc1_2KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldPPartDesc1_2KeyTyped

    private void textfieldPPartDesc2_2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldPPartDesc2_2KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldPPartDesc2_2KeyTyped

    private void textfieldPPartDesc3_2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldPPartDesc3_2KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldPPartDesc3_2KeyTyped

    private void textfieldPPartName3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldPPartName3KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldPPartName3KeyTyped

    private void textfieldPPartDesc1_3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldPPartDesc1_3KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldPPartDesc1_3KeyTyped

    private void textfieldPPartDesc2_3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldPPartDesc2_3KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldPPartDesc2_3KeyTyped

    private void textfieldPPartDesc3_3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldPPartDesc3_3KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldPPartDesc3_3KeyTyped

    private void textfieldTitle00KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldTitle00KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldTitle00KeyTyped

    private void textfieldTitle01KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldTitle01KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldTitle01KeyTyped

    private void textfieldTitle02KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldTitle02KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldTitle02KeyTyped

    private void textfieldTitle03KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldTitle03KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldTitle03KeyTyped

    private void textfieldTitle04KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldTitle04KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldTitle04KeyTyped

    private void textfieldTitle05KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldTitle05KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldTitle05KeyTyped

    private void textfieldTitle06KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldTitle06KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldTitle06KeyTyped

    private void textfieldTitle07KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldTitle07KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldTitle07KeyTyped

    private void textfieldTitle08KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldTitle08KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldTitle08KeyTyped

    private void textfieldTitle09KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldTitle09KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldTitle09KeyTyped

    private void textfieldTitle10KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldTitle10KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldTitle10KeyTyped

    private void textfieldTitle11KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldTitle11KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldTitle11KeyTyped

    private void textfieldTitle12KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldTitle12KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldTitle12KeyTyped

    private void textfieldTitle13KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldTitle13KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldTitle13KeyTyped

    private void textfieldFormName1_0KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldFormName1_0KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldFormName1_0KeyTyped

    private void textfieldFormName2_0KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldFormName2_0KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldFormName2_0KeyTyped

    private void textfieldFormName1_1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldFormName1_1KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldFormName1_1KeyTyped

    private void textfieldFormName2_1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldFormName2_1KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldFormName2_1KeyTyped

    private void textfieldFormName1_2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldFormName1_2KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldFormName1_2KeyTyped

    private void textfieldFormName2_2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldFormName2_2KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldFormName2_2KeyTyped

    private void textfieldFormName3_2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldFormName3_2KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldFormName3_2KeyTyped

    private void textfieldFormName4_2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldFormName4_2KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldFormName4_2KeyTyped

    private void textfieldFormName1_3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldFormName1_3KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldFormName1_3KeyTyped

    private void textfieldFormName2_3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldFormName2_3KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldFormName2_3KeyTyped

    private void textfieldFormName3_3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldFormName3_3KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldFormName3_3KeyTyped

    private void textfieldFormName4_3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldFormName4_3KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldFormName4_3KeyTyped

    private void textfieldCLibHiragana0KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldCLibHiragana0KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldCLibHiragana0KeyTyped

    private void textfieldCLibSeiyuu0KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldCLibSeiyuu0KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldCLibSeiyuu0KeyTyped

    private void textfieldCLibHiragana1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldCLibHiragana1KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldCLibHiragana1KeyTyped

    private void textfieldCLibSeiyuu1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldCLibSeiyuu1KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldCLibSeiyuu1KeyTyped

    private void textfieldCLibHiragana2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldCLibHiragana2KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldCLibHiragana2KeyTyped

    private void textfieldCLibSeiyuu2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldCLibSeiyuu2KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldCLibSeiyuu2KeyTyped

    private void textfieldCLibHiragana3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldCLibHiragana3KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldCLibHiragana3KeyTyped

    private void textfieldCLibSeiyuu3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldCLibSeiyuu3KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldCLibSeiyuu3KeyTyped

    private void textfieldRLibHiragana0KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldRLibHiragana0KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldRLibHiragana0KeyTyped

    private void textfieldRLibHeight0KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldRLibHeight0KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldRLibHeight0KeyTyped

    private void textfieldRLibWeight0KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldRLibWeight0KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldRLibWeight0KeyTyped

    private void textfieldRLibHiragana1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldRLibHiragana1KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldRLibHiragana1KeyTyped

    private void textfieldRLibHeight1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldRLibHeight1KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldRLibHeight1KeyTyped

    private void textfieldRLibWeight1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldRLibWeight1KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldRLibWeight1KeyTyped

    private void textfieldRLibHiragana2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldRLibHiragana2KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldRLibHiragana2KeyTyped

    private void textfieldRLibHeight2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldRLibHeight2KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldRLibHeight2KeyTyped

    private void textfieldRLibWeight2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldRLibWeight2KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldRLibWeight2KeyTyped

    private void textfieldRLibHiragana3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldRLibHiragana3KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldRLibHiragana3KeyTyped

    private void textfieldRLibHeight3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldRLibHeight3KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldRLibHeight3KeyTyped

    private void textfieldRLibWeight3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldRLibWeight3KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextField) evt.getComponent(), evt);
    }//GEN-LAST:event_textfieldRLibWeight3KeyTyped

    private void textareaCLib0KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textareaCLib0KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextArea) evt.getComponent(), evt);
    }//GEN-LAST:event_textareaCLib0KeyTyped

    private void textareaCLib1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textareaCLib1KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextArea) evt.getComponent(), evt);
    }//GEN-LAST:event_textareaCLib1KeyTyped

    private void textareaCLib2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textareaCLib2KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextArea) evt.getComponent(), evt);
    }//GEN-LAST:event_textareaCLib2KeyTyped

    private void textareaCLib3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textareaCLib3KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextArea) evt.getComponent(), evt);
    }//GEN-LAST:event_textareaCLib3KeyTyped

    private void textareaRLib0KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textareaRLib0KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextArea) evt.getComponent(), evt);
    }//GEN-LAST:event_textareaRLib0KeyTyped

    private void textareaRLib1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textareaRLib1KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextArea) evt.getComponent(), evt);
    }//GEN-LAST:event_textareaRLib1KeyTyped

    private void textareaRLib2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textareaRLib2KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextArea) evt.getComponent(), evt);
    }//GEN-LAST:event_textareaRLib2KeyTyped

    private void textareaRLib3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textareaRLib3KeyTyped
        // TODO add your handling code here:
        if (checkMenuitemSJIS.isSelected())
            filterKeys( (javax.swing.JTextArea) evt.getComponent(), evt);
    }//GEN-LAST:event_textareaRLib3KeyTyped



    // -------------------------------- NAVIGATION METHODS  -------------------------------


    // Opens the selected file (add02dat.bin)
    public void openFile(String bin_file){
        parseFile(bin_file);

        if (file_loaded){
            labelPage.setEnabled(true);
            labelJumpTo.setEnabled(true);
            textfieldJumpTo.setEnabled(true);
            buttonJump.setEnabled(true);

            updateControls();

            loadCharacters();
            loadRobots();
            loadWeapons();
            loadTerrains();
            loadSeishins();
            loadTitles();
            loadEnhanceParts();
            loadPilotParts();
            loadUnitForms();
            loadCharLib();
            loadRoboLib();
        }
    }

    // Goes back or forth delta pages (use it with +1 or -1)
    public void changePage(int delta){
        switch(current_tab){
            case 0:     // Characters
                saveCharacters();
                page_character += delta;
                loadCharacters();
                break;
            case 1:     // Robots
                saveRobots();
                page_robot += delta;
                loadRobots();
                break;
            case 2:     // Weapons
                saveWeapons();
                page_weapon += delta;
                loadWeapons();
                break;
            case 3:     // Terrains
                saveTerrains();
                page_terrain += delta;
                loadTerrains();
                break;
            case 4:     // Seishins
                saveSeishins();
                page_seishin += delta;
                loadSeishins();
                break;
            case 5:     // Enhance Parts
                saveEnhanceParts();
                page_epart += delta;
                loadEnhanceParts();
                break;
            case 6:     // Pilot Parts
                savePilotParts();
                page_ppart += delta;
                loadPilotParts();
                break;
            case 7:     // Stage Titles
                saveTitles();
                page_title += delta;
                loadTitles();
                break;
            case 8:     // Unit Forms
                // This will never happen
                break;
            case 9:     // Character Library
                saveCharLib();
                page_charLib += delta;
                loadCharLib();
                break;
            case 10:    // Robot Library
                saveRoboLib();
                page_roboLib += delta;
                loadRoboLib();
                break;
        }
        updateControls();
    }

    // Jumps to page given. If page is out of bounds, it goes to either the last or the first one
    public void jumpTo(int page){
        switch(current_tab){
            case 0:     // Characters
                saveCharacters();

                if (page > -1 && page <= last_character)
                    page_character = page;
                else if (page > last_character)
                    page_character = last_character;
                else
                    page_character = 0;

                loadCharacters();

                break;
            case 1:     // Robots
                saveRobots();

                if (page > -1 && page <= last_robot)
                    page_robot = page;
                else if (page > last_robot)
                    page_robot = last_robot;
                else
                    page_robot = 0;

                loadRobots();

                break;
            case 2:     // Weapons
                saveWeapons();

                if (page > -1 && page <= last_weapon)
                    page_weapon = page;
                else if (page > last_weapon)
                    page_weapon = last_weapon;
                else
                    page_weapon = 0;

                loadWeapons();

                break;
            case 3:     // Terrains
                saveTerrains();

                if (page > -1 && page <= last_terrain)
                    page_terrain = page;
                else if (page > last_terrain)
                    page_terrain = last_terrain;
                else
                    page_terrain = 0;

                loadTerrains();

                break;
            case 4:     // Seishins
                saveSeishins();

                if (page > -1 && page <= last_seishin)
                    page_seishin = page;
                else if (page > last_seishin)
                    page_seishin = last_seishin;
                else
                    page_seishin = 0;

                loadSeishins();

                break;
            case 5:     // Enhance Parts
                saveEnhanceParts();

                if (page > -1 && page <= last_epart)
                    page_epart = page;
                else if (page > last_epart)
                    page_epart = last_epart;
                else
                    page_epart = 0;

                loadEnhanceParts();

                break;
            case 6:     // Pilot Parts
                savePilotParts();

                if (page > -1 && page <= last_ppart)
                    page_ppart = page;
                else if (page > last_ppart)
                    page_ppart = last_ppart;
                else
                    page_ppart = 0;

                loadPilotParts();

                break;
            case 7:     // Stage Titles
                saveTitles();

                if (page > -1 && page <= last_title)
                    page_title = page;
                else if (page > last_title)
                    page_title = last_title;
                else
                    page_title = 0;

                loadTitles();

                break;
            case 8:     // Unit Forms
                // No changes
                break;
            case 9:     // Character Library
                saveCharLib();

                if (page > -1 && page <= last_charLib)
                    page_charLib = page;
                else if (page > last_charLib)
                    page_charLib = last_charLib;
                else
                    page_charLib = 0;

                loadCharLib();

                break;
            case 10:    // Robot Library
                saveRoboLib();

                if (page > -1 && page <= last_roboLib)
                    page_roboLib = page;
                else if (page > last_roboLib)
                    page_roboLib = last_roboLib;
                else
                    page_roboLib = 0;

                loadRoboLib();

                break;
        }

        updateControls();
    }

    // Enable / disable navigation buttons and shows the current page / top
    public void updateControls(){
        int current = 0;
        int top = 0;

        switch(current_tab){
            case 0:     // Characters
                current = page_character;
                top = last_character;
                break;
            case 1:     // Robots
                current = page_robot;
                top = last_robot;
                break;
            case 2:     // Weapons
                current = page_weapon;
                top = last_weapon;
                break;
            case 3:     // Terrains
                current = page_terrain;
                top = last_terrain;
                break;
            case 4:     // Seishins
                current = page_seishin;
                top = last_seishin;
                break;
            case 5:     // Enhance Parts
                current = page_epart;
                top = last_epart;
                break;
            case 6:     // Pilot Parts
                current = page_ppart;
                top = last_ppart;
                break;
            case 7:     // Stage Titles
                current = page_title;
                top = last_title;
                break;
            case 8:     // Unit Forms
                current = 0;
                top = 0;
                break;
            case 9:     // Character Library
                current = page_charLib;
                top = last_charLib;
                break;
            case 10:    // Robot Library
                current = page_roboLib;
                top = last_roboLib;
                break;
        }

        labelPage.setText("Page " + (current + 1) + " / " + (top + 1) );
        buttonBack.setEnabled(current != 0);
        buttonNext.setEnabled(current != top);
    }

    /*
     *  ----------- LOAD Functions
     */

    // Fills the textfields in the character tab with stored data
    public void loadCharacters(){
        int index = page_character * 10;
        int top = t_blocks[0].getTableSize()/4 - 1;
        boolean load = true;

        setLabelCharacters(index);

        // We assume that if we got to this page, at least the first entry exists
        // That's why the first set of textfields is loaded unconditionally
        textfieldCharFName0.setText(t_blocks[0].getEntry(index));
        textfieldCharSName0.setText(t_blocks[1].getEntry(index));

        index++;
        if (index > top)
            load = false;

        if (load){
            textfieldCharFName1.setText(t_blocks[0].getEntry(index));
            textfieldCharSName1.setText(t_blocks[1].getEntry(index));
        }
        else{
            textfieldCharFName1.setText("");
            textfieldCharSName1.setText("");
        }
        textfieldCharFName1.setEnabled(load);
        textfieldCharSName1.setEnabled(load);

        index++;
        if (index > top)
            load = false;

        if (load){
            textfieldCharFName2.setText(t_blocks[0].getEntry(index));
            textfieldCharSName2.setText(t_blocks[1].getEntry(index));
        }
        else{
            textfieldCharFName2.setText("");
            textfieldCharSName2.setText("");
        }
        textfieldCharFName2.setEnabled(load);
        textfieldCharSName2.setEnabled(load);

        index++;
        if (index > top)
            load = false;

        if (load){
            textfieldCharFName3.setText(t_blocks[0].getEntry(index));
            textfieldCharSName3.setText(t_blocks[1].getEntry(index));
        }
        else{
            textfieldCharFName3.setText("");
            textfieldCharSName3.setText("");
        }
        textfieldCharFName3.setEnabled(load);
        textfieldCharSName3.setEnabled(load);

        index++;
        if (index > top)
            load = false;

        if (load){
            textfieldCharFName4.setText(t_blocks[0].getEntry(index));
            textfieldCharSName4.setText(t_blocks[1].getEntry(index));
        }
        else{
            textfieldCharFName4.setText("");
            textfieldCharSName4.setText("");
        }
        textfieldCharFName4.setEnabled(load);
        textfieldCharSName4.setEnabled(load);

        index++;
        if (index > top)
            load = false;

        if (load){
            textfieldCharFName5.setText(t_blocks[0].getEntry(index));
            textfieldCharSName5.setText(t_blocks[1].getEntry(index));
        }
        else{
            textfieldCharFName5.setText("");
            textfieldCharSName5.setText("");
        }
        textfieldCharFName5.setEnabled(load);
        textfieldCharSName5.setEnabled(load);

        index++;
        if (index > top)
            load = false;

        if (load){
            textfieldCharFName6.setText(t_blocks[0].getEntry(index));
            textfieldCharSName6.setText(t_blocks[1].getEntry(index));
        }
        else{
            textfieldCharFName6.setText("");
            textfieldCharSName6.setText("");
        }
        textfieldCharFName6.setEnabled(load);
        textfieldCharSName6.setEnabled(load);

        index++;
        if (index > top)
            load = false;

        if (load){
            textfieldCharFName7.setText(t_blocks[0].getEntry(index));
            textfieldCharSName7.setText(t_blocks[1].getEntry(index));
        }
        else{
            textfieldCharFName7.setText("");
            textfieldCharSName7.setText("");
        }
        textfieldCharFName7.setEnabled(load);
        textfieldCharSName7.setEnabled(load);

        index++;
        if (index > top)
            load = false;

        if (load){
            textfieldCharFName8.setText(t_blocks[0].getEntry(index));
            textfieldCharSName8.setText(t_blocks[1].getEntry(index));
        }
        else{
            textfieldCharFName8.setText("");
            textfieldCharSName8.setText("");
        }
        textfieldCharFName8.setEnabled(load);
        textfieldCharSName8.setEnabled(load);

        index++;
        if (index > top)
            load = false;

        if (load){
            textfieldCharFName9.setText(t_blocks[0].getEntry(index));
            textfieldCharSName9.setText(t_blocks[1].getEntry(index));
        }
        else{
            textfieldCharFName9.setText("");
            textfieldCharSName9.setText("");
        }
        textfieldCharFName9.setEnabled(load);
        textfieldCharSName9.setEnabled(load);
    }

    // Fills the textfields in the robot tab with stored data
    public void loadRobots(){
        setLabelRobots(page_robot * 14);

        load_14(2, page_robot, textfieldRobot00, textfieldRobot01, textfieldRobot02,
                textfieldRobot03, textfieldRobot04, textfieldRobot05, textfieldRobot06,
                textfieldRobot07, textfieldRobot08, textfieldRobot09, textfieldRobot10,
                textfieldRobot11, textfieldRobot12, textfieldRobot13);
    }

    // Fills the textfields in the weapon tab with stored data
    public void loadWeapons(){
        setLabelWeapons(page_weapon * 14);

        load_14(3, page_weapon, textfieldWeapon00, textfieldWeapon01, textfieldWeapon02,
                textfieldWeapon03, textfieldWeapon04, textfieldWeapon05, textfieldWeapon06,
                textfieldWeapon07, textfieldWeapon08, textfieldWeapon09, textfieldWeapon10,
                textfieldWeapon11, textfieldWeapon12, textfieldWeapon13);
    }

    // Fills the textfields in the terrain tab with stored data
    public void loadTerrains(){
        setLabelTerrains(page_terrain * 14);

        load_14(4, page_terrain, textfieldTerrain00, textfieldTerrain01, textfieldTerrain02,
                textfieldTerrain03, textfieldTerrain04, textfieldTerrain05, textfieldTerrain06,
                textfieldTerrain07, textfieldTerrain08, textfieldTerrain09, textfieldTerrain10,
                textfieldTerrain11, textfieldTerrain12, textfieldTerrain13);
    }

    // Fills the textfields in the seishin tab with stored data
    public void loadSeishins(){
        int index = page_seishin * 4;
        int top = t_blocks[5].getTableSize()/4 - 1;
        boolean load = true;

        setLabelSeishins(page_seishin * 4);

        load_4(5, 7, page_seishin, textfieldSeishinName0, textfieldSeishinName1, textfieldSeishinName2,
                textfieldSeishinName3, textfieldSeishinDesc1_0, textfieldSeishinDesc2_0, textfieldSeishinDesc3_0,
                textfieldSeishinDesc1_1, textfieldSeishinDesc2_1, textfieldSeishinDesc3_1,
                textfieldSeishinDesc1_2, textfieldSeishinDesc2_2, textfieldSeishinDesc3_2,
                textfieldSeishinDesc1_3, textfieldSeishinDesc2_3, textfieldSeishinDesc3_3);

        // Load the Short version of the Seishin names
        textfieldSeishinSName0.setText(t_blocks[6].getEntry(index));

        index++;
        if (index > top)
            load = false;

        if (load)
            textfieldSeishinSName1.setText(t_blocks[6].getEntry(index));
        else
            textfieldSeishinSName1.setText("");
        textfieldSeishinSName1.setEnabled(load);

        index++;
        if (index > top)
            load = false;

        if (load)
            textfieldSeishinSName2.setText(t_blocks[6].getEntry(index));
        else
            textfieldSeishinSName2.setText("");
        textfieldSeishinSName2.setEnabled(load);

        index++;
        if (index > top)
            load = false;

        if (load)
            textfieldSeishinSName3.setText(t_blocks[6].getEntry(index));
        else
            textfieldSeishinSName3.setText("");
        textfieldSeishinSName3.setEnabled(load);
    }

    // Fills the textfields in the enhance parts tab with stored data
    public void loadEnhanceParts(){
        setLabelEParts(page_epart * 4);

        load_4(8, 9, page_epart, textfieldEPartName0, textfieldEPartName1, textfieldEPartName2,
                textfieldEPartName3, textfieldEPartDesc1_0, textfieldEPartDesc2_0, textfieldEPartDesc3_0,
                textfieldEPartDesc1_1, textfieldEPartDesc2_1, textfieldEPartDesc3_1,
                textfieldEPartDesc1_2, textfieldEPartDesc2_2, textfieldEPartDesc3_2,
                textfieldEPartDesc1_3, textfieldEPartDesc2_3, textfieldEPartDesc3_3);
    }

    // Fills the textfields in the pilot parts tab with stored data
    public void loadPilotParts(){
        setLabelPParts(page_ppart * 4);

        load_4(10, 11, page_ppart, textfieldPPartName0, textfieldPPartName1, textfieldPPartName2,
                textfieldPPartName3, textfieldPPartDesc1_0, textfieldPPartDesc2_0, textfieldPPartDesc3_0,
                textfieldPPartDesc1_1, textfieldPPartDesc2_1, textfieldPPartDesc3_1,
                textfieldPPartDesc1_2, textfieldPPartDesc2_2, textfieldPPartDesc3_2,
                textfieldPPartDesc1_3, textfieldPPartDesc2_3, textfieldPPartDesc3_3);
    }

    // Fills the textfields in the title tab with stored data
    public void loadTitles(){
        setLabelTitles(page_title * 14);

        load_14(12, page_title, textfieldTitle00, textfieldTitle01, textfieldTitle02,
                textfieldTitle03, textfieldTitle04, textfieldTitle05, textfieldTitle06,
                textfieldTitle07, textfieldTitle08, textfieldTitle09, textfieldTitle10,
                textfieldTitle11, textfieldTitle12, textfieldTitle13);
    }

    // Fills the textfields in the unit forms tab with stored data
    public void loadUnitForms(){
        // No need to set labels here

        textfieldFormName1_0.setText(UnitForms[0][0]);
        textfieldFormName2_0.setText(UnitForms[0][1]);

        textfieldFormName1_1.setText(UnitForms[1][0]);
        textfieldFormName2_1.setText(UnitForms[1][1]);

        textfieldFormName1_2.setText(UnitForms[2][0]);
        textfieldFormName2_2.setText(UnitForms[2][1]);
        textfieldFormName3_2.setText(UnitForms[2][2]);
        textfieldFormName4_2.setText(UnitForms[2][3]);

        textfieldFormName1_3.setText(UnitForms[3][0]);
        textfieldFormName2_3.setText(UnitForms[3][1]);
        textfieldFormName3_3.setText(UnitForms[3][2]);
        textfieldFormName4_3.setText(UnitForms[3][3]);
    }

    // Fills the fields in the character library tab with stored data
    public void loadCharLib(){
        int index = page_charLib * 4;
        int top = CharLib.length - 1;
        boolean load = true;

        setLabelCharLib(index);

        // We assume that if we got to this page, at least the first entry exists
        // That's why the first set of textfields is loaded unconditionally
        textfieldCLibHiragana0.setText(CharLib[index].hiragana);
        textfieldCLibSeiyuu0.setText(CharLib[index].seiyuu);

        textareaCLib0.setText(joinDescription(CharLib[index].description));


        index++;
        if (index > top)
            load = false;

        if (load){
            textfieldCLibHiragana1.setText(CharLib[index].hiragana);
            textfieldCLibSeiyuu1.setText(CharLib[index].seiyuu);

            textareaCLib1.setText(joinDescription(CharLib[index].description));
        }
        else{
            textfieldCLibHiragana1.setText("");
            textfieldCLibSeiyuu1.setText("");
            textareaCLib1.setText("");
        }
        textfieldCLibHiragana1.setEnabled(load);
        textfieldCLibSeiyuu1.setEnabled(load);
        textareaCLib1.setEnabled(load);


        index++;
        if (index > top)
            load = false;

        if (load){
            textfieldCLibHiragana2.setText(CharLib[index].hiragana);
            textfieldCLibSeiyuu2.setText(CharLib[index].seiyuu);

            textareaCLib2.setText(joinDescription(CharLib[index].description));
        }
        else{
            textfieldCLibHiragana2.setText("");
            textfieldCLibSeiyuu2.setText("");
            textareaCLib2.setText("");
        }
        textfieldCLibHiragana2.setEnabled(load);
        textfieldCLibSeiyuu2.setEnabled(load);
        textareaCLib2.setEnabled(load);


        index++;
        if (index > top)
            load = false;

        if (load){
            textfieldCLibHiragana3.setText(CharLib[index].hiragana);
            textfieldCLibSeiyuu3.setText(CharLib[index].seiyuu);

            textareaCLib3.setText(joinDescription(CharLib[index].description));
        }
        else{
            textfieldCLibHiragana3.setText("");
            textfieldCLibSeiyuu3.setText("");
            textareaCLib3.setText("");
        }
        textfieldCLibHiragana3.setEnabled(load);
        textfieldCLibSeiyuu3.setEnabled(load);
        textareaCLib3.setEnabled(load);
    }

    // Fills the fields in the robot library tab with stored data
    public void loadRoboLib(){
        int index = page_roboLib * 4;
        int top = RobLib.length - 1;
        boolean load = true;

        setLabelRoboLib(index);

        // We assume that if we got to this page, at least the first entry exists
        // That's why the first set of textfields is loaded unconditionally
        textfieldRLibHiragana0.setText(RobLib[index].hiragana);
        textfieldRLibHeight0.setText(RobLib[index].height);
        textfieldRLibWeight0.setText(RobLib[index].weight);

        textareaRLib0.setText(joinDescription(RobLib[index].description));

        index++;
        if (index > top)
            load = false;

        if (load){
            textfieldRLibHiragana1.setText(RobLib[index].hiragana);
            textfieldRLibHeight1.setText(RobLib[index].height);
            textfieldRLibWeight1.setText(RobLib[index].weight);

            textareaRLib1.setText(joinDescription(RobLib[index].description));
        }
        else{
            textfieldRLibHiragana1.setText("");
            textfieldRLibHeight1.setText("");
            textfieldRLibWeight1.setText("");
            textareaRLib1.setText("");
        }
        textfieldRLibHiragana1.setEnabled(load);
        textfieldRLibHeight1.setEnabled(load);
        textfieldRLibWeight1.setEnabled(load);
        textareaRLib1.setEnabled(load);


        index++;
        if (index > top)
            load = false;

        if (load){
            textfieldRLibHiragana2.setText(RobLib[index].hiragana);
            textfieldRLibHeight2.setText(RobLib[index].height);
            textfieldRLibWeight2.setText(RobLib[index].weight);

            textareaRLib2.setText(joinDescription(RobLib[index].description));
        }
        else{
            textfieldRLibHiragana2.setText("");
            textfieldRLibHeight2.setText("");
            textfieldRLibWeight2.setText("");
            textareaRLib2.setText("");
        }
        textfieldRLibHiragana2.setEnabled(load);
        textfieldRLibHeight2.setEnabled(load);
        textfieldRLibWeight2.setEnabled(load);
        textareaRLib2.setEnabled(load);


        index++;
        if (index > top)
            load = false;

        if (load){
            textfieldRLibHiragana3.setText(RobLib[index].hiragana);
            textfieldRLibHeight3.setText(RobLib[index].height);
            textfieldRLibWeight3.setText(RobLib[index].weight);

            textareaRLib3.setText(joinDescription(RobLib[index].description));
        }
        else{
            textfieldRLibHiragana3.setText("");
            textfieldRLibHeight3.setText("");
            textfieldRLibWeight3.setText("");
            textareaRLib3.setText("");
        }
        textfieldRLibHiragana3.setEnabled(load);
        textfieldRLibHeight3.setEnabled(load);
        textfieldRLibWeight3.setEnabled(load);
        textareaRLib3.setEnabled(load);
    }

    // Fills the textfields in a 14-textfield tab
    public void load_14(int block, int page, javax.swing.JTextField t00,
                javax.swing.JTextField t01, javax.swing.JTextField t02, javax.swing.JTextField t03,
                javax.swing.JTextField t04, javax.swing.JTextField t05, javax.swing.JTextField t06,
                javax.swing.JTextField t07, javax.swing.JTextField t08, javax.swing.JTextField t09,
                javax.swing.JTextField t10, javax.swing.JTextField t11, javax.swing.JTextField t12,
                javax.swing.JTextField t13){
        int index = page * 14;
        int top = t_blocks[block].getTableSize()/4 - 1;
        boolean load = true;

        //setLabelRobots(index);

        // We assume that if we got to this page, at least the first entry exists
        // That's why the first set of textfields is loaded unconditionally
        t00.setText(t_blocks[block].getEntry(index));

        index++;
        if (index > top)
            load = false;

        if (load)
            t01.setText(t_blocks[block].getEntry(index));
        else
            t01.setText("");
        t01.setEnabled(load);

        index++;
        if (index > top)
            load = false;

        if (load)
            t02.setText(t_blocks[block].getEntry(index));
        else
            t02.setText("");
        t02.setEnabled(load);

        index++;
        if (index > top)
            load = false;

        if (load)
            t03.setText(t_blocks[block].getEntry(index));
        else
            t03.setText("");
        t03.setEnabled(load);

        index++;
        if (index > top)
            load = false;

        if (load)
            t04.setText(t_blocks[block].getEntry(index));
        else
            t04.setText("");
        t04.setEnabled(load);

        index++;
        if (index > top)
            load = false;

        if (load)
            t05.setText(t_blocks[block].getEntry(index));
        else
            t05.setText("");
        t05.setEnabled(load);

        index++;
        if (index > top)
            load = false;

        if (load)
            t06.setText(t_blocks[block].getEntry(index));
        else
            t06.setText("");
        t06.setEnabled(load);

        index++;
        if (index > top)
            load = false;

        if (load)
            t07.setText(t_blocks[block].getEntry(index));
        else
            t07.setText("");
        t07.setEnabled(load);

        index++;
        if (index > top)
            load = false;

        if (load)
            t08.setText(t_blocks[block].getEntry(index));
        else
            t08.setText("");
        t08.setEnabled(load);

        index++;
        if (index > top)
            load = false;

        if (load)
            t09.setText(t_blocks[block].getEntry(index));
        else
            t09.setText("");
        t09.setEnabled(load);

        index++;
        if (index > top)
            load = false;

        if (load)
            t10.setText(t_blocks[block].getEntry(index));
        else
            t10.setText("");
        t10.setEnabled(load);

        index++;
        if (index > top)
            load = false;

        if (load)
            t11.setText(t_blocks[block].getEntry(index));
        else
            t11.setText("");
        t11.setEnabled(load);

        index++;
        if (index > top)
            load = false;

        if (load)
            t12.setText(t_blocks[block].getEntry(index));
        else
            t12.setText("");
        t12.setEnabled(load);

        index++;
        if (index > top)
            load = false;

        if (load)
            t13.setText(t_blocks[block].getEntry(index));
        else
            t13.setText("");
        t13.setEnabled(load);
    }


    // Fills the textfields in a 4-element tab
    public void load_4(int block_name, int block_desc, int page,
				javax.swing.JTextField t_name0, javax.swing.JTextField t_name1, javax.swing.JTextField t_name2, javax.swing.JTextField t_name3,
				javax.swing.JTextField t_desc1_0, javax.swing.JTextField t_desc2_0, javax.swing.JTextField t_desc3_0,
				javax.swing.JTextField t_desc1_1, javax.swing.JTextField t_desc2_1, javax.swing.JTextField t_desc3_1,
				javax.swing.JTextField t_desc1_2, javax.swing.JTextField t_desc2_2, javax.swing.JTextField t_desc3_2,
				javax.swing.JTextField t_desc1_3, javax.swing.JTextField t_desc2_3, javax.swing.JTextField t_desc3_3
				){
        int index = page * 4;
        int top = t_blocks[block_name].getTableSize()/4 - 1;
        boolean load = true;

        String[] lines;

        // We assume that if we got to this page, at least the first entry exists
        // That's why the first set of textfields is loaded unconditionally
        t_name0.setText(t_blocks[block_name].getEntry(index));

        lines = t_blocks[block_desc].getEntry(index).split(separator_desc);

        t_desc1_0.setText(lines[0]);

        if (lines.length > 1)
            t_desc2_0.setText(lines[1]);
        else
            t_desc2_0.setText("");

        if (lines.length > 2)
            t_desc3_0.setText(lines[2]);
        else
            t_desc3_0.setText("");

        index++;
        if (index > top)
            load = false;

        if (load){
            t_name1.setText(t_blocks[block_name].getEntry(index));

            lines = t_blocks[block_desc].getEntry(index).split(separator_desc);

            //if (lines.length == 0)
            //    System.out.println("Size 0 after split!!!");

            t_desc1_1.setText(lines[0]);

            if (lines.length > 1)
                t_desc2_1.setText(lines[1]);
            else
                t_desc2_1.setText("");

            if (lines.length > 2)
                t_desc3_1.setText(lines[2]);
            else
                t_desc3_1.setText("");
        }
        else{
            t_name1.setText("");
            t_desc1_1.setText("");
            t_desc2_1.setText("");
            t_desc3_1.setText("");
        }
        t_name1.setEnabled(load);
        t_desc1_1.setEnabled(load);
        t_desc2_1.setEnabled(load);
        t_desc3_1.setEnabled(load);

        index++;
        if (index > top)
            load = false;

        if (load){
            t_name2.setText(t_blocks[block_name].getEntry(index));

            lines = t_blocks[block_desc].getEntry(index).split(separator_desc);

            t_desc1_2.setText(lines[0]);

            if (lines.length > 1)
                t_desc2_2.setText(lines[1]);
            else
                t_desc2_2.setText("");

            if (lines.length > 2)
                t_desc3_2.setText(lines[2]);
            else
                t_desc3_2.setText("");
        }
        else{
            t_name2.setText("");
            t_desc1_2.setText("");
            t_desc2_2.setText("");
            t_desc3_2.setText("");
        }
        t_name2.setEnabled(load);
        t_desc1_2.setEnabled(load);
        t_desc2_2.setEnabled(load);
        t_desc3_2.setEnabled(load);

        index++;
        if (index > top)
            load = false;

        if (load){
            t_name3.setText(t_blocks[block_name].getEntry(index));

            lines = t_blocks[block_desc].getEntry(index).split(separator_desc);

            t_desc1_3.setText(lines[0]);

            if (lines.length > 1)
                t_desc2_3.setText(lines[1]);
            else
                t_desc2_3.setText("");

            if (lines.length > 2)
                t_desc3_3.setText(lines[2]);
            else
                t_desc3_3.setText("");
        }
        else{
            t_name3.setText("");
            t_desc1_3.setText("");
            t_desc2_3.setText("");
            t_desc3_3.setText("");
        }
        t_name3.setEnabled(load);
        t_desc1_3.setEnabled(load);
        t_desc2_3.setEnabled(load);
        t_desc3_3.setEnabled(load);
    }


    public String joinDescription(String text){
        String[] lines;

        lines = text.split("→");

        //System.out.println("Text size: " + text.length() + " - Lines: " + lines.length);

        String joined_lines = "";
        for (int i = 0; i < lines.length; i++)
            joined_lines += lines[i] + "\n";    // Yes, there's a carriage return in the last line as well

        return joined_lines;
    }


    /*
     *  ----------- SET LABEL Functions
     */


    // Sets the label numbers for the Characters tab
    public void setLabelCharacters(int num){
        set_10 (num, labelChar0, labelChar1, labelChar2, labelChar3, labelChar4, 
                labelChar5, labelChar6, labelChar7, labelChar8, labelChar9);
    }

    // Sets the label numbers for the Robots tab
    public void setLabelRobots(int num){
        set_10 (num, labelRobot00, labelRobot01, labelRobot02, labelRobot03, labelRobot04, 
                labelRobot05, labelRobot06, labelRobot07, labelRobot08, labelRobot09);
        
        set_4 (num + 10, labelRobot10, labelRobot11, labelRobot12, labelRobot13);
    }

    // Sets the label numbers for the Weapons tab
    public void setLabelWeapons(int num){
        set_10 (num, labelWeapon00, labelWeapon01, labelWeapon02, labelWeapon03, labelWeapon04,
                labelWeapon05, labelWeapon06, labelWeapon07, labelWeapon08, labelWeapon09);

        set_4 (num + 10, labelWeapon10, labelWeapon11, labelWeapon12, labelWeapon13);
    }

    // Sets the label numbers for the Terrains tab
    public void setLabelTerrains(int num){
        set_10 (num, labelTerrain00, labelTerrain01, labelTerrain02, labelTerrain03, labelTerrain04,
                labelTerrain05, labelTerrain06, labelTerrain07, labelTerrain08, labelTerrain09);

        set_4 (num + 10, labelTerrain10, labelTerrain11, labelTerrain12, labelTerrain13);
    }

    // Sets the label numbers for the Seishins tab
    public void setLabelSeishins(int num){
        set_4 (num, labelSeishin0, labelSeishin1, labelSeishin2, labelSeishin3);
    }

    // Sets the label numbers for the EParts tab
    public void setLabelEParts(int num){
        set_4 (num, labelEPart0, labelEPart1, labelEPart2, labelEPart3);
    }

    // Sets the label numbers for the PParts tab
    public void setLabelPParts(int num){
        set_4 (num, labelPPart0, labelPPart1, labelPPart2, labelPPart3);
    }

    // Sets the label numbers for the Titles tab
    public void setLabelTitles(int num){
        set_10 (num, labelTitle00, labelTitle01, labelTitle02, labelTitle03, labelTitle04,
                labelTitle05, labelTitle06, labelTitle07, labelTitle08, labelTitle09);

        set_4 (num + 10, labelTitle10, labelTitle11, labelTitle12, labelTitle13);
    }

    // Sets the label numbers for the Character Library tab
    public void setLabelCharLib(int num){
        set_4 (num, labelCLib0, labelCLib1, labelCLib2, labelCLib3);
    }

    // Sets the label numbers for the Robot Library tab
    public void setLabelRoboLib(int num){
        set_4 (num, labelRLib0, labelRLib1, labelRLib2, labelRLib3);
    }

    // Sets the label numbers for a 10-entry tab
    public void set_10(int num, javax.swing.JLabel l00, javax.swing.JLabel l01, javax.swing.JLabel l02,
                javax.swing.JLabel l03, javax.swing.JLabel l04, javax.swing.JLabel l05, javax.swing.JLabel l06,
                javax.swing.JLabel l07, javax.swing.JLabel l08, javax.swing.JLabel l09
                ){
        num++;

        l00.setText(formatNumber(num));

        num++;

        l01.setText(formatNumber(num));

        num++;

        l02.setText(formatNumber(num));

        num++;

        l03.setText(formatNumber(num));

        num++;

        l04.setText(formatNumber(num));

        num++;

        l05.setText(formatNumber(num));

        num++;

        l06.setText(formatNumber(num));

        num++;

        l07.setText(formatNumber(num));

        num++;

        l08.setText(formatNumber(num));

        num++;

        l09.setText(formatNumber(num));

        num++;
    }

    // Sets the label numbers for a 4-entry tab
    public void set_4(int num, javax.swing.JLabel l00, javax.swing.JLabel l01, javax.swing.JLabel l02,
                javax.swing.JLabel l03){
        num++;

        l00.setText(formatNumber(num));

        num++;

        l01.setText(formatNumber(num));

        num++;

        l02.setText(formatNumber(num));

        num++;

        l03.setText(formatNumber(num));

        num++;
    }

    // Returns an int number in the "#xxx" format
    public String formatNumber(int num){
        String result = "";

        if (num > 99)
            result = "#" + num;
        else if (num > 9)
            result = "#0" + num;
        else
            result = "#00" + num;

        return result;
    }

    
    /*
     *  ----------- SAVE Functions
     */


    // Stores the contents of the current displayed page of characters
    public void saveCharacters(){
        int index = page_character * 10;

        t_blocks[0].setEntry(index, ensureEven( textfieldCharFName0.getText() ) );
        t_blocks[1].setEntry(index, ensureEven( textfieldCharSName0.getText() ) );

        index++;

        if (textfieldCharFName1.isEnabled()){
            t_blocks[0].setEntry(index, ensureEven( textfieldCharFName1.getText() ) );
            t_blocks[1].setEntry(index, ensureEven( textfieldCharSName1.getText() ) );
        }

        index++;

        if (textfieldCharFName2.isEnabled()){
            t_blocks[0].setEntry(index, ensureEven( textfieldCharFName2.getText() ) );
            t_blocks[1].setEntry(index, ensureEven( textfieldCharSName2.getText() ) );
        }

        index++;

        if (textfieldCharFName3.isEnabled()){
            t_blocks[0].setEntry(index, ensureEven( textfieldCharFName3.getText() ) );
            t_blocks[1].setEntry(index, ensureEven( textfieldCharSName3.getText() ) );
        }

        index++;

        if (textfieldCharFName4.isEnabled()){
            t_blocks[0].setEntry(index, ensureEven( textfieldCharFName4.getText() ) );
            t_blocks[1].setEntry(index, ensureEven( textfieldCharSName4.getText() ) );
        }

        index++;

        if (textfieldCharFName5.isEnabled()){
            t_blocks[0].setEntry(index, ensureEven( textfieldCharFName5.getText() ) );
            t_blocks[1].setEntry(index, ensureEven( textfieldCharSName5.getText() ) );
        }

        index++;

        if (textfieldCharFName6.isEnabled()){
            t_blocks[0].setEntry(index, ensureEven( textfieldCharFName6.getText() ) );
            t_blocks[1].setEntry(index, ensureEven( textfieldCharSName6.getText() ) );
        }

        index++;

        if (textfieldCharFName7.isEnabled()){
            t_blocks[0].setEntry(index, ensureEven( textfieldCharFName7.getText() ) );
            t_blocks[1].setEntry(index, ensureEven( textfieldCharSName7.getText() ) );
        }

        index++;

        if (textfieldCharFName8.isEnabled()){
            t_blocks[0].setEntry(index, ensureEven( textfieldCharFName8.getText() ) );
            t_blocks[1].setEntry(index, ensureEven( textfieldCharSName8.getText() ) );
        }

        index++;

        if (textfieldCharFName9.isEnabled()){
            t_blocks[0].setEntry(index, ensureEven( textfieldCharFName9.getText() ) );
            t_blocks[1].setEntry(index, ensureEven( textfieldCharSName9.getText() ) );
        }
    }

    // Stores the contents of the current displayed page of robots
    public void saveRobots(){
        save_14(2, page_robot, textfieldRobot00, textfieldRobot01, textfieldRobot02,
                textfieldRobot03, textfieldRobot04, textfieldRobot05, textfieldRobot06,
                textfieldRobot07, textfieldRobot08, textfieldRobot09, textfieldRobot10,
                textfieldRobot11, textfieldRobot12, textfieldRobot13);
    }

    // Stores the contents of the current displayed page of weapons
    public void saveWeapons(){
        save_14(3, page_weapon, textfieldWeapon00, textfieldWeapon01, textfieldWeapon02,
                textfieldWeapon03, textfieldWeapon04, textfieldWeapon05, textfieldWeapon06,
                textfieldWeapon07, textfieldWeapon08, textfieldWeapon09, textfieldWeapon10,
                textfieldWeapon11, textfieldWeapon12, textfieldWeapon13);
    }

    // Stores the contents of the current displayed page of terrains
    public void saveTerrains(){
        save_14(4, page_terrain, textfieldTerrain00, textfieldTerrain01, textfieldTerrain02,
                textfieldTerrain03, textfieldTerrain04, textfieldTerrain05, textfieldTerrain06,
                textfieldTerrain07, textfieldTerrain08, textfieldTerrain09, textfieldTerrain10,
                textfieldTerrain11, textfieldTerrain12, textfieldTerrain13);
    }

    // Stores the contents of the current displayed page of seishins
    public void saveSeishins(){
        save_4(5, 7, page_seishin, textfieldSeishinName0, textfieldSeishinName1, textfieldSeishinName2,
                textfieldSeishinName3, textfieldSeishinDesc1_0, textfieldSeishinDesc2_0, textfieldSeishinDesc3_0,
                textfieldSeishinDesc1_1, textfieldSeishinDesc2_1, textfieldSeishinDesc3_1,
                textfieldSeishinDesc1_2, textfieldSeishinDesc2_2, textfieldSeishinDesc3_2,
                textfieldSeishinDesc1_3, textfieldSeishinDesc2_3, textfieldSeishinDesc3_3);
        
        int index = page_seishin * 4;

        t_blocks[6].setEntry(index, ensureEven( textfieldSeishinSName0.getText() ) );

        index++;

        if (textfieldSeishinSName1.isEnabled())
            t_blocks[6].setEntry(index, ensureEven( textfieldSeishinSName1.getText() ) );

        index++;

        if (textfieldSeishinSName2.isEnabled())
            t_blocks[6].setEntry(index, ensureEven( textfieldSeishinSName2.getText() ) );

        index++;

        if (textfieldSeishinSName3.isEnabled())
            t_blocks[6].setEntry(index, ensureEven( textfieldSeishinSName3.getText() ) );
    }

    // Stores the contents of the current displayed page of enhance parts
    public void saveEnhanceParts(){
        save_4(8, 9, page_epart, textfieldEPartName0, textfieldEPartName1, textfieldEPartName2,
                textfieldEPartName3, textfieldEPartDesc1_0, textfieldEPartDesc2_0, textfieldEPartDesc3_0,
                textfieldEPartDesc1_1, textfieldEPartDesc2_1, textfieldEPartDesc3_1,
                textfieldEPartDesc1_2, textfieldEPartDesc2_2, textfieldEPartDesc3_2,
                textfieldEPartDesc1_3, textfieldEPartDesc2_3, textfieldEPartDesc3_3);
    }

    // Stores the contents of the current displayed page of pilto parts
    public void savePilotParts(){
        save_4(10, 11, page_ppart, textfieldPPartName0, textfieldPPartName1, textfieldPPartName2,
                textfieldPPartName3, textfieldPPartDesc1_0, textfieldPPartDesc2_0, textfieldPPartDesc3_0,
                textfieldPPartDesc1_1, textfieldPPartDesc2_1, textfieldPPartDesc3_1,
                textfieldPPartDesc1_2, textfieldPPartDesc2_2, textfieldPPartDesc3_2,
                textfieldPPartDesc1_3, textfieldPPartDesc2_3, textfieldPPartDesc3_3);
    }

    // Stores the contents of the current displayed page of titles
    public void saveTitles(){
        save_14(12, page_title, textfieldTitle00, textfieldTitle01, textfieldTitle02,
                textfieldTitle03, textfieldTitle04, textfieldTitle05, textfieldTitle06,
                textfieldTitle07, textfieldTitle08, textfieldTitle09, textfieldTitle10,
                textfieldTitle11, textfieldTitle12, textfieldTitle13);
    }

    // Stores the unit forms (there's only one page)
    public void saveUnitForms(){
        UnitForms[0][0] = ensureEven( textfieldFormName1_0.getText() );
        UnitForms[0][1] = ensureEven( textfieldFormName2_0.getText() );

        UnitForms[1][0] = ensureEven( textfieldFormName1_1.getText() );
        UnitForms[1][1] = ensureEven( textfieldFormName2_1.getText() );

        UnitForms[2][0] = ensureEven( textfieldFormName1_2.getText() );
        UnitForms[2][1] = ensureEven( textfieldFormName2_2.getText() );
        UnitForms[2][2] = ensureEven( textfieldFormName3_2.getText() );
        UnitForms[2][3] = ensureEven( textfieldFormName4_2.getText() );

        UnitForms[3][0] = ensureEven( textfieldFormName1_3.getText() );
        UnitForms[3][1] = ensureEven( textfieldFormName2_3.getText() );
        UnitForms[3][2] = ensureEven( textfieldFormName3_3.getText() );
        UnitForms[3][3] = ensureEven( textfieldFormName4_3.getText() );
    }

    // Stores the contents of the current displayed page of the character library
    public void saveCharLib(){
        int index = page_charLib * 4;
        String description;
        String[] lines;

        CharLib[index].hiragana = ensureEven( textfieldCLibHiragana0.getText() );
        CharLib[index].seiyuu = ensureEven( textfieldCLibSeiyuu0.getText() );

        description = "";
        lines = textareaCLib0.getText().split("\n");
        for (int i = 0; i < lines.length; i++)
            description += ensureEven( lines[i] ) + "→";

        CharLib[index].description = description;
        CharLib[index].preamble[0] = (byte) ( (lines.length >> 8) & 0xff);
        CharLib[index].preamble[1] = (byte) ( lines.length & 0xff);

        index++;

        if (textfieldCLibHiragana1.isEnabled()){
            CharLib[index].hiragana = ensureEven( textfieldCLibHiragana1.getText() );
            CharLib[index].seiyuu = ensureEven( textfieldCLibSeiyuu1.getText() );

            description = "";
            lines = textareaCLib1.getText().split("\n");
            for (int i = 0; i < lines.length; i++)
                description += ensureEven( lines[i] ) + "→";

            CharLib[index].description = description;
            CharLib[index].preamble[0] = (byte) ( (lines.length >> 8) & 0xff);
            CharLib[index].preamble[1] = (byte) ( lines.length & 0xff);
        }

        index++;

        if (textfieldCLibHiragana2.isEnabled()){
            CharLib[index].hiragana = ensureEven( textfieldCLibHiragana2.getText() );
            CharLib[index].seiyuu = ensureEven( textfieldCLibSeiyuu2.getText() );

            description = "";
            lines = textareaCLib2.getText().split("\n");
            for (int i = 0; i < lines.length; i++)
                description += ensureEven( lines[i] ) + "→";

            CharLib[index].description = description;
            CharLib[index].preamble[0] = (byte) ( (lines.length >> 8) & 0xff);
            CharLib[index].preamble[1] = (byte) ( lines.length & 0xff);
        }

        index++;

        if (textfieldCLibHiragana3.isEnabled()){
            CharLib[index].hiragana = ensureEven( textfieldCLibHiragana3.getText() );
            CharLib[index].seiyuu = ensureEven( textfieldCLibSeiyuu3.getText() );

            description = "";
            lines = textareaCLib3.getText().split("\n");
            for (int i = 0; i < lines.length; i++)
                description += ensureEven( lines[i] ) + "→";

            CharLib[index].description = description;
            CharLib[index].preamble[0] = (byte) ( (lines.length >> 8) & 0xff);
            CharLib[index].preamble[1] = (byte) ( lines.length & 0xff);
        }
    }

    // Stores the contents of the current displayed page of the robot library
    public void saveRoboLib(){
        int index = page_roboLib * 4;
        String description;
        String[] lines;

        // Make sure each data holds an even number of bytes!!
        RobLib[index].hiragana = ensureEven( textfieldRLibHiragana0.getText() );
        RobLib[index].height = ensureEven( textfieldRLibHeight0.getText() );
        RobLib[index].weight = ensureEven( textfieldRLibWeight0.getText() );


        description = "";
        lines = textareaRLib0.getText().split("\n");
        for (int i = 0; i < lines.length; i++){
            description += ensureEven( lines[i] ) + "→";  // Add the SJIS carriage return
        }

        RobLib[index].description = description;
        RobLib[index].preamble[0] = (byte) ( (lines.length >> 8) & 0xff);
        RobLib[index].preamble[1] = (byte) ( lines.length & 0xff);

        index++;

        if (textfieldRLibHeight1.isEnabled()){
            RobLib[index].hiragana = ensureEven( textfieldRLibHiragana1.getText() );
            RobLib[index].height = ensureEven( textfieldRLibHeight1.getText() );
            RobLib[index].weight = ensureEven( textfieldRLibWeight1.getText() );

            description = "";
            lines = textareaRLib1.getText().split("\n");
            for (int i = 0; i < lines.length; i++)
                description += ensureEven( lines[i] ) + "→";

            RobLib[index].description = description;
            RobLib[index].preamble[0] = (byte) ( (lines.length >> 8) & 0xff);
            RobLib[index].preamble[1] = (byte) ( lines.length & 0xff);
        }

        index++;

        if (textfieldRLibHeight2.isEnabled()){
            RobLib[index].hiragana = ensureEven( textfieldRLibHiragana2.getText() );
            RobLib[index].height = ensureEven( textfieldRLibHeight2.getText() );
            RobLib[index].weight = ensureEven( textfieldRLibWeight2.getText() );

            description = "";
            lines = textareaRLib2.getText().split("\n");
            for (int i = 0; i < lines.length; i++)
                description += ensureEven( lines[i] ) + "→";

            RobLib[index].description = description;
            RobLib[index].preamble[0] = (byte) ( (lines.length >> 8) & 0xff);
            RobLib[index].preamble[1] = (byte) ( lines.length & 0xff);
        }

        index++;

        if (textfieldRLibHeight3.isEnabled()){
            RobLib[index].hiragana = ensureEven( textfieldRLibHiragana3.getText() );
            RobLib[index].height = ensureEven( textfieldRLibHeight3.getText() );
            RobLib[index].weight = ensureEven( textfieldRLibWeight3.getText() );

            description = "";
            lines = textareaRLib3.getText().split("\n");
            for (int i = 0; i < lines.length; i++)
                description += ensureEven( lines[i] ) + "→";

            RobLib[index].description = description;
            RobLib[index].preamble[0] = (byte) ( (lines.length >> 8) & 0xff);
            RobLib[index].preamble[1] = (byte) ( lines.length & 0xff);
        }
    }

    // Stores the contents of the current displayed page of a 14-entry tab
    public void save_14(int block, int page, javax.swing.JTextField t00,
                javax.swing.JTextField t01, javax.swing.JTextField t02, javax.swing.JTextField t03,
                javax.swing.JTextField t04, javax.swing.JTextField t05, javax.swing.JTextField t06,
                javax.swing.JTextField t07, javax.swing.JTextField t08, javax.swing.JTextField t09,
                javax.swing.JTextField t10, javax.swing.JTextField t11, javax.swing.JTextField t12,
                javax.swing.JTextField t13){
        int index = page * 14;

        t_blocks[block].setEntry(index, ensureEven( t00.getText() ) );

        index++;

        if (t01.isEnabled())
            t_blocks[block].setEntry(index, ensureEven( t01.getText() ));

        index++;

        if (t02.isEnabled())
            t_blocks[block].setEntry(index, ensureEven( t02.getText() ));

        index++;

        if (t03.isEnabled())
            t_blocks[block].setEntry(index, ensureEven( t03.getText() ));

        index++;

        if (t04.isEnabled())
            t_blocks[block].setEntry(index, ensureEven( t04.getText() ));

        index++;

        if (t05.isEnabled())
            t_blocks[block].setEntry(index, ensureEven( t05.getText() ));

        index++;

        if (t06.isEnabled())
            t_blocks[block].setEntry(index, ensureEven( t06.getText() ));

        index++;

        if (t07.isEnabled())
            t_blocks[block].setEntry(index, ensureEven( t07.getText() ));

        index++;

        if (t08.isEnabled())
            t_blocks[block].setEntry(index, ensureEven( t08.getText() ));

        index++;

        if (t09.isEnabled())
            t_blocks[block].setEntry(index, ensureEven( t09.getText() ));

        index++;

        if (t10.isEnabled())
            t_blocks[block].setEntry(index, ensureEven( t10.getText() ));

        index++;

        if (t11.isEnabled())
            t_blocks[block].setEntry(index, ensureEven( t11.getText() ));

        index++;

        if (t12.isEnabled())
            t_blocks[block].setEntry(index, ensureEven( t12.getText() ));

        index++;

        if (t13.isEnabled())
            t_blocks[block].setEntry(index, ensureEven( t13.getText() ));
    }


    public void save_4(int block_name, int block_desc, int page,
				javax.swing.JTextField t_name0, javax.swing.JTextField t_name1, javax.swing.JTextField t_name2, javax.swing.JTextField t_name3,
				javax.swing.JTextField t_desc1_0, javax.swing.JTextField t_desc2_0, javax.swing.JTextField t_desc3_0,
				javax.swing.JTextField t_desc1_1, javax.swing.JTextField t_desc2_1, javax.swing.JTextField t_desc3_1,
				javax.swing.JTextField t_desc1_2, javax.swing.JTextField t_desc2_2, javax.swing.JTextField t_desc3_2,
				javax.swing.JTextField t_desc1_3, javax.swing.JTextField t_desc2_3, javax.swing.JTextField t_desc3_3
				){
        int index = page * 4;
        String description;

        t_blocks[block_name].setEntry(index, ensureEven( t_name0.getText() ) );

        description = ensureEven( t_desc1_0.getText() );

        if (!t_desc2_0.getText().isEmpty())
            description += separator_desc + ensureEven( t_desc2_0.getText() );

        if (!t_desc3_0.getText().isEmpty())
            description +=  separator_desc + ensureEven( t_desc3_0.getText() );

        t_blocks[block_desc].setEntry(index, description);

        index++;

        if (t_name1.isEnabled()){
            t_blocks[block_name].setEntry(index, ensureEven( t_name1.getText() ));

            description = ensureEven( t_desc1_1.getText() );
            
            if (!t_desc2_1.getText().isEmpty())
                description += separator_desc + ensureEven( t_desc2_1.getText() );

            if (!t_desc3_1.getText().isEmpty())
                description +=  separator_desc + ensureEven( t_desc3_1.getText() );

            t_blocks[block_desc].setEntry(index, description);
        }

        index++;

        if (t_name2.isEnabled()){
            t_blocks[block_name].setEntry(index, ensureEven( t_name2.getText() ) );

            description = ensureEven( t_desc1_2.getText() );

            if (!t_desc2_2.getText().isEmpty())
                description += separator_desc + ensureEven( t_desc2_2.getText() );

            if (!t_desc3_2.getText().isEmpty())
                description +=  separator_desc + ensureEven( t_desc3_2.getText() );

            t_blocks[block_desc].setEntry(index, description);
        }

        index++;

        if (t_name3.isEnabled()){
            t_blocks[block_name].setEntry(index, ensureEven( t_name3.getText() ) );

            description = ensureEven( t_desc1_3.getText() );

            if (!t_desc2_3.getText().isEmpty())
                description += separator_desc + ensureEven( t_desc2_3.getText() );

            if (!t_desc3_3.getText().isEmpty())
                description +=  separator_desc + ensureEven( t_desc3_3.getText() );

            t_blocks[block_desc].setEntry(index, description);
        }
    }


    // -------------------------------- PARSING METHODS  -------------------------------


    // Parse add02dat.bin and put its content into our data structures
    public void parseFile(String path){

        RandomAccessFile f;

        // Try opening the file
        try{
            f = new RandomAccessFile(path, "r");

            // Read the header / index and obtain the offsets
            block_offsets = new int[123];

            byte[] block4 = new byte[4];  // 4-byte block

            for (int i = 0; i < 123; i ++){
                f.read(block4);
                block_offsets[i] = parse4bytes(block4);
            }
            f.seek(512);    // Go to right after the first table, past the padding

            // Parse each block, according to its content
                /*
                 * Worthwhile blocks:
                    0 char full names - 337
                    1 char names - 337

                    5 robot names - 276

                    8 weapon names - 946

                    13 terrain names - 189

                    21 seishin names - 30
                    22 seishin short names - 30
                    23 seishin descriptions - 30

                    25 parts names - 44
                    26 parts descriptions - 44

                    28 pilot parts - 37
                    29 pilot parts descriptions - 37

                    33 stage names - 100

                    38 frame names (2-byte pointers table, several frames per unit) - 5

                    40 char library (8 ??? bytes, name, actor, description) - 267

                    41 robot library (10 ??? bytes, name?, size, weight, description) - 238
                 */
            byte[] block_read;
            int t_counter = 0;
            int d_counter = 0;

            t_blocks = new TextBlock[13];
            d_blocks = new byte[107][];

            for (int i = 0; i < 123; i++){
                if (i == 122){  // Last data block
                    block_read = new byte[32];  // Last block is always 32 bytes long
                    f.read(block_read);

                    d_blocks[d_counter] = block_read;
                    // no need to increase the counter, this is the last one
                }
                else{
                    // Determine the size of the block
                    int block_size = block_offsets[i+1] - block_offsets[i];
                    //System.out.println("Block size: " + block_size);

                    block_read = new byte[block_size];
                    f.read(block_read);
                    //System.out.println("Byte 3: " + (block_read[2] & 0xff) + " - Byte 4: " + (block_read[3] & 0xff));

                    // Classify the block
                    if (i == 41){  // Robot Library
                        parseRobotLibrary(block_read);
                    }
                    else if (i == 40){  // Character Library
                        parseCharacterLibrary(block_read);
                    }
                    else if (i == 38){  // Unit forms
                        parseUnitForms(block_read);
                    }
                    else if (i == 0 || i == 1 || i == 5 || i == 8 || i == 13 || i == 21
                             || i == 22 || i == 23 || i == 25 || i == 26 || i == 28
                             || i == 29 || i == 33){    // Normal text blocks
                        t_blocks[t_counter] = parseTextBlock(block_read, i);
                        t_counter++;
                    }
                    else{   // Data blocks
                        d_blocks[d_counter] = block_read;
                        d_counter++;
                    }
                }
            }

            // Finished parsing, close the file
            f.close();

            file_loaded = true;
        }catch (IOException ex) {
            System.err.println("ERROR: Couldn't read file.");   // END
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    // Formats a block of bytes into a TextBlock
    public TextBlock parseTextBlock(byte[] block, int position){
        //System.out.println("Parsing block: " + position);
        TextBlock tb = new TextBlock();
        
        tb.setPosition(position);

        // Get the size of the table
        byte[] parse_block = subBlock(block, 0, 4);

        if (parse_block == null)
            return tb;

        int offset = parse4bytes(parse_block);

        tb.setTableSize(offset);

        int num_entries = offset / 4;

        //System.out.println("Num. entries: " + num_entries);

        int next_offset = parse4bytes( subBlock( block, 4, 4 ) );

        int size = 0;   // Size of an entry = next_offset - offset

        for (int i = 0; i < num_entries - 1; i++){
            //System.out.println("Entry: " + i + " Offset: " + offset + " - Next: " + next_offset);
            size = (next_offset - offset) - 2;  // We don't take the separator
            parse_block = subBlock(block, offset, size);

            parse_block = replaceSpecialChars(parse_block, false);  // Replace special characters!

            tb.hex2string(i, parse_block);  // Save the SJIS text

            offset = next_offset;
            if (i != num_entries - 2){   // We leave the last one out because there's no next offset there
                next_offset = parse4bytes( subBlock( block, (i + 2)*4, 4 ) );
            }
        }
        // Read the last entry
        tb.hex2string(num_entries - 1, replaceSpecialChars( findLastString(block, offset, 0, 1), false ) );

        return tb;
    }

    // Formats the block with the Unit Forms
    public void parseUnitForms(byte[] block){
        /*
         * There are 5 entries for Unit Forms (table size = 20), but the last one is empty
         * Each entry has a mini-table at the beginning pointing at the offset of the sub-entries
         */

        // First, get the individual entries
        byte[][] entries = new byte[4][];

        int offset = 20;
        int next_offset = parse4bytes( subBlock( block, 4, 4 ) );

        // * We don't take the 5th entry, but we use its offset to determine the size of the last one
        for (int i = 0; i < 4; i++){
            entries[i] = subBlock( block, offset, (next_offset - offset) );

            offset = next_offset;
            next_offset = parse4bytes( subBlock( block, (i + 2)*4, 4 ) );
        }

        // For each entry, get its sub-entries
        UnitForms = new String[4][];

        for (int i = 0; i < 4; i++){
            offset = parse2bytes( subBlock( entries[i], 0, 2 ) );
            next_offset = parse2bytes( subBlock( entries[i], 2, 2 ) );
            int num_subentries = offset / 2;

            UnitForms[i] = new String[num_subentries];

            for (int j = 0; j < num_subentries - 1; j++){
                //System.out.println("Entry: " + i + " Sub: " + j + " Off: " + offset + " Next: " + next_offset);
                try {
                    byte[] data = subBlock(entries[i], offset, (next_offset - offset) - 2); // We don't take the separator
                    UnitForms[i][j] = new String(data, "Shift-JIS");
                } catch (UnsupportedEncodingException ex) {
                    System.err.println("ERROR - UnitForms: Not SJIS!!");
                    //Logger.getLogger(UserInterfaceMTE.class.getName()).log(Level.SEVERE, null, ex);
                }

                offset = next_offset;
                if (j != num_subentries - 2)
                    next_offset = parse2bytes( subBlock( entries[i], (j + 2)*2, 2 ) );
            }

            // Get the last sub-entry
            try {
                byte[] last = findLastString(entries[i], offset, 0, 1);
                UnitForms[i][num_subentries - 1] = new String(last, "Shift-JIS");
            } catch (UnsupportedEncodingException ex) {
                System.err.println("ERROR - UnitForms: Not SJIS!!");
                //Logger.getLogger(UserInterfaceMTE.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    // Formats the block with the Character Library
    public void parseCharacterLibrary (byte[] block){
        /*
         * There are 267 entries in the Character Library
         * Each entry has:
         *  - A preamble of 8 bytes (probably character codes for the portrait and name)
         *  - Name in hiragana or "-" (81 7c)
         *  - Separator ( 00 00 )
         *  - Voice Actor's name or "-"
         *  - Separator
         *  - Description
         *  - Separator
         */

        // Get the entries
        byte[][] entries = new byte[267][];
        CharLib = new CharLibEntry[267];

        int offset = 1068;
        int next_offset = parse4bytes( subBlock( block, 4, 4 ) );

        for (int i = 0; i < 266; i++){
            entries[i] = subBlock( block, offset, (next_offset - offset) );

            offset = next_offset;
            if (i != 265)
                next_offset = parse4bytes( subBlock( block, (i + 2)*4, 4 ) );
        }

        // Get the last entry
        entries[266] = findLastString(block, offset, 8, 4); // If we set it to 3, the last carriage return goes missing

        // Parse the entries
        for (int i = 0; i < 267; i++){
            try {
                CharLib[i] = new CharLibEntry();
                byte[] parse_block;
                CharLib[i].preamble = subBlock( entries[i], 0, 8 );

                // We have no pointers, so we use the same function we've used to get
                // the last strings of each block to get the strings inside the entries.
                // We'll have to keep track of the offsets manually
                offset = 8; // Reuse the variable.
                parse_block = findLastString( entries[i], offset, 0, 1 );
                offset += parse_block.length + 2;   // + the separator

                CharLib[i].hiragana = new String(parse_block, "Shift-JIS");

                parse_block = findLastString( entries[i], offset, 0, 1 );
                offset += parse_block.length + 2;   // + the separator

                CharLib[i].seiyuu = new String(parse_block, "Shift-JIS");

                parse_block = findLastString( entries[i], offset, 0, 1 );
                // Last part, no need to increase the offset any further

                parse_block = replaceSpecialChars(parse_block, false);  // Replace special characters!

                CharLib[i].description = new String(parse_block, "Shift-JIS");
            } catch (UnsupportedEncodingException ex) {
                System.err.println("ERROR - CharLib: Trying to parse non-SJIS!!");
                //Logger.getLogger(UserInterfaceMTE.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    // Formats the block with the Robot Library
    public void parseRobotLibrary (byte[] block){
        /*
         * There are 238 entries in the Robot Library
         * Each entry has:
         *  - A preamble of 10 bytes (probably character codes for the portrait and name)
         *  - Always "-" (81 7c) - EXCEPT FOR DRAGOGAMEO1
         *  - Separator ( 00 00 )
         *  - Height or "---"
         *  - Separator
         *  - Weight or "---"
         *  - Separator
         *  - Description
         *  - Separator
         */

        // Get the entries
        byte[][] entries = new byte[238][];
        RobLib = new RobLibEntry[238];

        int offset = 952;
        int next_offset = parse4bytes( subBlock( block, 4, 4 ) );

        for (int i = 0; i < 237; i++){
            entries[i] = subBlock( block, offset, (next_offset - offset) );

            offset = next_offset;
            if (i != 236)
                next_offset = parse4bytes( subBlock( block, (i + 2)*4, 4 ) );
        }

        // Get the last entry
        entries[237] = findLastString(block, offset, 14, 4); // If we set it to 3, the last carriage return goes missing

        // Parse the entries
        for (int i = 0; i < 238; i++){
            try {
                RobLib[i] = new RobLibEntry();
                byte[] parse_block;
                RobLib[i].preamble = subBlock( entries[i], 0, 10 ); // always 10 bytes

                // We have no pointers, so we use the same function we've used to get
                // the last strings of each block to get the strings inside the entries.
                // We'll have to keep track of the offsets manually
                offset = 10; // Reuse the variable.

                parse_block = findLastString( entries[i], offset, 0, 1 );
                offset += parse_block.length + 2;   // + the separator

                RobLib[i].hiragana = new String(parse_block, "Shift-JIS");

                parse_block = findLastString( entries[i], offset, 0, 1 );
                offset += parse_block.length + 2;   // + the separator

                RobLib[i].height = new String(parse_block, "Shift-JIS");

                parse_block = findLastString( entries[i], offset, 0, 1 );
                offset += parse_block.length + 2;   // + the separator

                RobLib[i].weight = new String(parse_block, "Shift-JIS");

                parse_block = findLastString( entries[i], offset, 0, 1 );
                // Last part, no need to increase the offset any further

                parse_block = replaceSpecialChars(parse_block, false);  // Replace special characters!

                RobLib[i].description = new String(parse_block, "Shift-JIS");
            } catch (UnsupportedEncodingException ex) {
                System.err.println("ERROR - CharLib: Trying to parse non-SJIS!!");
                //Logger.getLogger(UserInterfaceMTE.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    // Return size bytes from b, starting from offset
    // or null, if you asked for something bigger than b
    public byte[] subBlock(byte[] b, int offset, int size){
        byte[] section = null;

        if (offset + size > b.length){
            System.err.println("ERROR: Section is out of block.");
            return section;
        }

        section = new byte[size];

        for (int i = 0; i < size; i++){
            section[i] = b[offset + i];
            //System.out.println("Read: " + (section[i] & 0xff));
        }

        return section;
    }

    // Finds the last SJIS string in a block b that starts at offset
    // * pre_size is the number of bytes to ignore at the beginning of the block (for library entries)
    //   - Set it to 0 for TextBlocks and UnitForms, 8 for Character Library and 14 for Robot Library
    // * num_separators is the number of separators you want to find before deciding it's a good string
    //   - Set it to 1 for TextBlocks and UnitForms, 4 for Character and Robot Library
    public byte[] findLastString(byte[] b, int offset, int pre_size, int num_separators){
        byte[] last = null;

        int value = -1;
        int counter = 0;

        int i = pre_size;
        boolean found = false;

        for (; offset + i < b.length && !found; i++){
            value = parse2bytes(subBlock(b, offset + i, 2));
            //System.out.println("Value: " + value);
            if (value == 0){ // Separator found
                counter++;
                i++;    // skip 1 byte to go to the next 2-byte group
                if (counter == num_separators){  // Found the last separator
                    //System.out.println("Found.");
                    found = true;   // Exit loop
                }
            }
        }

        last = subBlock(b, offset, i - 2);  // We don't take the separator at the end
        return last;
    }

    // Receives a 4-byte value and returns its int value
    public int parse4bytes(byte[] block){
        int value = 0;

        if (block.length != 4){
            System.err.println("ERROR: Not 4 bytes.");
            return value;
        }

        value = block[0] << 24 | (block[1] & 0xFF) << 16 | (block[2] & 0xFF) << 8 | (block[3] & 0xFF);

        //System.out.println("Value: " + value);

        return value;
    }

    // Receives a 2-byte value and returns its int value
    public int parse2bytes(byte[] block){
        int value = 0;

        if (block.length != 2){
            System.err.println("ERROR: Not 2 bytes.");
            return value;
        }

        value = (block[0] & 0xFF) << 8 | (block[1] & 0xFF);

        return value;
    }

    // Receives an int and return its 4-byte value
    public byte[] int2bytes(int value){
        return new byte[] {
                (byte)(value >>> 24),
                (byte)(value >>> 16),
                (byte)(value >>> 8),
                (byte)value};
    }


    // Replaces the conflictive SJIS characters in a block
    // When parsing the file, the following characters are transformed:
    // Ⅰ (87 54) -> Ι (83 a7) * this one is used only in the description of the Deathgrome II
    // Ⅱ (87 55) -> П (84 50)
    // Ⅲ (87 56) -> Ш (84 59)
    // "inverted omega" (eb 3f) -> Ю (84 5f)
    // During reinsertion, the values are reversed
    // This change is necessary because otherwise, the application doesn't recognize
    // the original characters and the data is destroyed during reinsertion
    // (they're transformed to 1-byte "?" (3f) characters)
    public byte[] replaceSpecialChars(byte[] block, boolean reinsertion){
        byte[] block2 = new byte[2];

        byte[] origI = new byte[]{(byte) 0x87, (byte) 0x54};
        byte[] origII = new byte[]{(byte) 0x87, (byte) 0x55};
        byte[] origIII = new byte[]{(byte) 0x87, (byte) 0x56};
        byte[] origGameo = new byte[]{(byte) 0xeb, (byte) 0x3f};

        byte[] newI = new byte[]{(byte) 0x83, (byte) 0xa7};
        byte[] newII = new byte[]{(byte) 0x84, (byte) 0x50};
        byte[] newIII = new byte[]{(byte) 0x84, (byte) 0x59};
        byte[] newGameo = new byte[]{(byte) 0x84, (byte) 0x5f};

        boolean stop = false;

        for (int i = 0; i < block.length && !stop; i++){
            block2[0] = block[i];
            block2[1] = block[i + 1];

            if (!reinsertion){
                if (block2[0] == origI[0] && block2[1] == origI[1]){
                    block[i] = newI[0];
                    block[i + 1] = newI[1];
                }
                else if (block2[0] == origII[0] && block2[1] == origII[1]){
                    block[i] = newII[0];
                    block[i + 1] = newII[1];
                }
                else if (block2[0] == origIII[0] && block2[1] == origIII[1]){
                    block[i] = newIII[0];
                    block[i + 1] = newIII[1];
                }
                else if (block2[0] == origGameo[0] && block2[1] == origGameo[1]){
                    block[i] = newGameo[0];
                    block[i + 1] = newGameo[1];
                }
            }
            else{
                if (block2[0] == newI[0] && block2[1] == newI[1]){
                    block[i] = origI[0];
                    block[i + 1] = origI[1];
                }
                else if (block2[0] == newII[0] && block2[1] == newII[1]){
                    block[i] = origII[0];
                    block[i + 1] = origII[1];
                }
                else if (block2[0] == newIII[0] && block2[1] == newIII[1]){
                    block[i] = origIII[0];
                    block[i + 1] = origIII[1];
                }
                else if (block2[0] == newGameo[0] && block2[1] == newGameo[1]){
                    block[i] = origGameo[0];
                    block[i + 1] = origGameo[1];
                }
            }

            // There are some titles that end with 3 1-byte characters, so we have to
            // control we're not getting out of the block
            if (i + 2 > block.length - 1)
                stop = true;
        }

        return block;
    }


    // ********** DOESN'T WORK!!! ********
    // * The special characters are all parsed to the same character at the beginning!
    /*
     * Takes a SJIS String and returns its byte-array equivalent.
     *
     * "Why is this needed? There's already a function for that!"
     * The problem with that function is that it doesn't recognize special characters,
     * namely, the "II" (87 55) in Zaku II, the "III" (87 56) in Zaku III
     * and the inverted omega (eb 3f) in Dragogameo1.
     * When we use s.getBytes("Shift-JIS"), those symbols are not stored as their 2-byte equivalent,
     * but as a "?" 1-byte character instead (3f), which destroys the original data.
     *
     * That's bad.
     *
     * So, this function aims to correct that, giving the correct byte array for the string s.
     *
     * This function is only used when saving to a file, btw.
     */
    public byte[] string2bytes(String s){
        byte[] result = null;

        byte[] charII = new byte[]{(byte) 0x87, (byte) 0x55};
        byte[] charIII = new byte[]{(byte) 0x87, (byte) 0x56};
        byte[] charGameo = new byte[]{(byte) 0xeb, (byte) 0x3f};

        result = trySeparator(s, charII);

        if (result == null){    // Didn't contain charII
            result = trySeparator(s, charIII);

            if (result == null){    // Didn't contain charIII
                result = trySeparator(s, charGameo);

                if (result == null){    // Didn't contain charGameo
                    try {
                        result = s.getBytes("Shift-JIS");   // It's a standard line
                    } catch (UnsupportedEncodingException ex) {
                        Logger.getLogger(UserInterfaceMTE.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
        }

        return result;
    }

    // ********** DOESN'T WORK!!! ********
    // Returns the byte array version of s if it contains the special character sp_char
    // Otherwise, return null
    public byte[] trySeparator(String s, byte[] sp_char){
        byte[] result = null;

        String separator;
        byte[][] parts;
        int size = 0;
        int accumulated = 0;

        try {
            separator = new String(sp_char, "Shift-JIS");

            String[] lines = s.split(separator);

            if (lines.length > 1){  // Contains the separator
                parts = new byte[lines.length][];

                // Get the lines in bytes
                parts[0] = lines[0].getBytes("Shift-JIS");
                size = parts[0].length;

                for (int i = 1; i < lines.length; i++){
                    parts[i] = lines[i].getBytes("Shift-JIS");
                    size += 2 + parts[i].length;    // + 2 bytes of special character
                }

                // Put the bytes together in the result array + separators
                result = new byte[size];

                for (int i = 0; i < parts[0].length; i++)
                    result[i] = parts[0][i];

                accumulated += parts[0].length;

                for (int i = 1; i < lines.length; i++){
                    // Put the special character first
                    result[accumulated] = sp_char[0];
                    result[accumulated + 1] = sp_char[1];

                    accumulated += 2;

                    // Now the line
                    for (int j = 0; j < parts[i].length; j++)
                        result[accumulated + j] = parts[i][j];
                }
                // END
            }

        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(UserInterfaceMTE.class.getName()).log(Level.SEVERE, null, ex);
        }

        return result;
    }


    // Changes your typed character in JTextField t to its SJIS version
    public void filterKeys(javax.swing.JTextField t, java.awt.event.KeyEvent e){
        char original_char = e.getKeyChar();
        boolean change = false;

        byte[] sjis_char = charToSJIS(original_char);
        if (sjis_char[0] != 0)
            change = true;

        if (change){
            try {
                t.replaceSelection(""); // Cleans the selected text
                e.consume();
                int pos = t.getCaretPosition();
                String text = t.getText();
                String new_char = new String(sjis_char, "Shift-JIS");
                //System.out.println("caret: " + pos + " length: " + text.length());
                if (pos == 0)
                    text = new_char + t.getText();
                else if (pos == text.length())
                    text = t.getText() + new_char;
                else
                    text = text.substring(0, pos) + new_char + text.substring(pos, text.length());
                //String text = textfieldTest.getText() + new String(sjis_char, "Shift-JIS");
                t.setText(text);
                t.setCaretPosition(pos + 1);
            } catch (UnsupportedEncodingException ex) {
                Logger.getLogger(UserInterfaceMTE.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    // Changes your typed character in JTextArea t to its SJIS version
    // ...is this really needed? I mean, it does exactly the same as the TextField version...
    public void filterKeys(javax.swing.JTextArea t, java.awt.event.KeyEvent e){
        char original_char = e.getKeyChar();
        boolean change = false;

        byte[] sjis_char = charToSJIS(original_char);
        if (sjis_char[0] != 0)
            change = true;

        if (change){
            try {
                t.replaceSelection(""); // Cleans the selected text
                e.consume();
                int pos = t.getCaretPosition();
                String text = t.getText();
                String new_char = new String(sjis_char, "Shift-JIS");
                //System.out.println("caret: " + pos + " length: " + text.length());
                if (pos == 0)
                    text = new_char + t.getText();
                else if (pos == text.length())
                    text = t.getText() + new_char;
                else
                    text = text.substring(0, pos) + new_char + text.substring(pos, text.length());
                //String text = textfieldTest.getText() + new String(sjis_char, "Shift-JIS");
                t.setText(text);
                t.setCaretPosition(pos + 1);
            } catch (UnsupportedEncodingException ex) {
                Logger.getLogger(UserInterfaceMTE.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }


    public byte[] charToSJIS(char c){
        /*
            0 = 48 -> 82 4f
            9 = 57 -> 82 58

            A = 65 -> 82 60
            Z = 90 -> 82 79

            a = 97 -> 82 81
            z = 122 -> 82 9a

            space -> 81 40
            , -> 81 41
            . -> 81 42
         */
        byte[] Jap_char = new byte[2];
        Jap_char[0] = (byte) 0x82;
        if (c >= 'a' && c <= 'z'){
            Jap_char[1] = (byte) 0x81;
            Jap_char[1] += c - 'a';
        }
        else if (c >= 'A' && c <= 'Z'){
            Jap_char[1] = (byte) 0x60;
            Jap_char[1] += c - 'A';
        }
        else if (c >= '0' && c <= '9'){
            Jap_char[1] = (byte) 0x4f;
            Jap_char[1] += c - '0';
        }
        else{ // Check if it's a special character
            int code = c;
            Jap_char[0] = (byte) 0x81;
            switch (code){
                case 32: // space = 32 -> 81 40
                    Jap_char[1] = (byte) 0x40;
                    break;
                case 33: // ! = 33 -> 81 49
                    Jap_char[1] = (byte) 0x49;
                    break;
                case 34: // " = 34 -> 81 8d
                    Jap_char[1] = (byte) 0x8d;
                    break;
                case 35: // # = 35 -> 81 94
                    Jap_char[1] = (byte) 0x94;
                    break;
                case 37: // % = 37 -> 81 93
                    Jap_char[1] = (byte) 0x93;
                    break;
                case 38: // & = 38 -> 81 95
                    Jap_char[1] = (byte) 0x95;
                    break;
                case 39: // ' = 39 -> 81 8c
                    Jap_char[1] = (byte) 0x8c;
                    break;
                case 40: // ( = 40 -> 81 69
                    Jap_char[1] = (byte) 0x69;
                    break;
                case 41: // ) = 41 -> 81 6a
                    Jap_char[1] = (byte) 0x6a;
                    break;
                case 42: // * = 42 -> 81 96
                    Jap_char[1] = (byte) 0x96;
                    break;
                case 43: // + = 43 -> 81 7b
                    Jap_char[1] = (byte) 0x7b;
                    break;
                case 44: // , = 44 -> 81 43
                    Jap_char[1] = (byte) 0x43;
                    break;
                case 45: // - = 45 -> 81 7c
                    Jap_char[1] = (byte) 0x7c;
                    break;
                case 46: // . = 46 -> 81 44
                    Jap_char[1] = (byte) 0x44;
                    break;
                case 47: // / = 47 -> 81 5e
                    Jap_char[1] = (byte) 0x5e;
                    break;
                case 58: // : = 58 -> 81 46
                    Jap_char[1] = (byte) 0x46;
                    break;
                case 59: // ; = 59 -> 81 47
                    Jap_char[1] = (byte) 0x47;
                    break;
                case 60: // < = 60 -> 81 83
                    Jap_char[1] = (byte) 0x83;
                    break;
                case 61: // = = 61 -> 81 81
                    Jap_char[1] = (byte) 0x81;
                    break;
                case 62: // > = 62 -> 81 84
                    Jap_char[1] = (byte) 0x84;
                    break;
                case 63: // ? = 63 -> 81 48
                    Jap_char[1] = (byte) 0x48;
                    break;
                case 64: // @ = 64 -> 81 97
                    Jap_char[1] = (byte) 0x97;
                    break;
                default:
                    Jap_char[0] = 0;
                    Jap_char[1] = 0;
            }
        }
        return Jap_char;
    }

    // Takes a string and determines if it has an even or an odd number of bytes.
    // If the number is odd, makes it even by adding an empty ASCII space to the end of it
    public String ensureEven(String s){
        int size = 0;

        boolean ASCII = false;

        for (int i = 0; i < s.length(); i++){
            if (s.charAt(i) == '−') // Not sure why, but this one doesn't count as SJIS...
                size += 2;
            else if (s.charAt(i) == 'Ι' || s.charAt(i) == 'П' || s.charAt(i) == 'Ш')    // Special chars are caught as 1-byte characters!!
                size += 2;
            else
            {
            if (s.charAt(i) < '　'){ // Space in SJIS - Anything above this is SJIS
                size += 1;
                ASCII = true;
            }
            else
                size += 2;
            }
        }

        if (size %2 > 0)
            s += ' ';   // Space in ASCII

        // If the text written contains ASCII, it doesn't end in an empty space (neither ASCII nor SJIS)
        // AND we've selected the option, add an empty space.
        // Note that this function is only called for stuff you've written or seen in the editor
        // If you save an existing file with ASCII without going through it, this change won't apply
        if (ASCII && checkMenuitemAddSpace.isSelected()){
            char c = s.charAt(s.length() - 1);

            //System.out.println("Last character: '" + c + "'");

            if (c != '　' && c != ' '){   // If the last char isn't an empty space (SJIS or ASCII)
                s += '　';   // Add a SJIS space
                
                //System.out.println("CHANGE!");
            }
        }

        return s;
    }

    // -------------------------------- REINSERTION METHODS  -------------------------------


    // Save the contents of the (modified) file in path
    public void saveFile(String path){
        try {
            // 1) Save all current pages (in cage they've been modified)
            saveCharacters();
            saveRobots();
            saveWeapons();
            saveTerrains();
            saveSeishins();
            saveEnhanceParts();
            savePilotParts();
            saveTitles();
            saveUnitForms();
            saveCharLib();
            saveRoboLib();

            // 2) Prepare the new master table
            byte[] table_block = prepareMasterTable();
            
            int d_counter = 0;
            int t_counter = 0;

            // 3) Write the blocks to the new file
            RandomAccessFile modfile = new RandomAccessFile(path, "rw");
            
            modfile.write(table_block); // First the table
            
            for (int i = 0; i < 123; i++){  // Then the blocks
                if (i == 41){  // Robot Library
                    modfile.write(getRoboLibBytes());
                }
                else if (i == 40){  // Character Library
                    modfile.write(getCharLibBytes());
                }
                else if (i == 38){  // Unit forms
                    modfile.write(getUnitFormsBytes());
                }
                else if (i == 0 || i == 1 || i == 5 || i == 8 || i == 13 || i == 21
                         || i == 22 || i == 23 || i == 25 || i == 26 || i == 28
                         || i == 29 || i == 33){    // Normal text blocks
                    modfile.write(t_blocks[t_counter].getBytes());
                    t_counter++;
                }
                else{   // Data blocks
                    modfile.write(d_blocks[d_counter]);
                    d_counter++;
                }
            }

            modfile.close();

        } catch (IOException ex) {
            Logger.getLogger(UserInterfaceMTE.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    // Returns a 512-byte block with 123 pointers to the blocks in the file
    public byte[] prepareMasterTable(){
        // * All bytes are initialized to zero by default, so there's no need to add padding later
        byte[] block = new byte[512];

        int t_counter = 0;
        int d_counter = 0;

        byte[] offset;
        int size;
        int accumulated = 512;  // The first pointer aims for the end of the table
        block[2] = 2;   // First pointer is 00 00 02 00

        // Calculate the pointer values
        // Pointer = Accumulated size of data
        // * We don't read the last block - this is NOT a mistake
        // * This is because we read the size of the current block to determine the start of the next one
        // (and obviously, there's no block past the last one)
        for (int i = 0; i < 122; i++){
            if (i == 41){  // Robot Library
                size = getRoboLibSize();
            }
            else if (i == 40){  // Character Library
                size = getCharLibSize();
            }
            else if (i == 38){  // Unit forms
                size = getUnitFormsSize();
            }
            else if (i == 0 || i == 1 || i == 5 || i == 8 || i == 13 || i == 21
                     || i == 22 || i == 23 || i == 25 || i == 26 || i == 28
                     || i == 29 || i == 33){    // Normal text blocks
                size = t_blocks[t_counter].getBlockSize();
                t_counter++;
            }
            else{   // Data blocks
                size = d_blocks[d_counter].length;
                d_counter++;
            }

            accumulated += size;
            offset = int2bytes(accumulated);

            block[ (i+1)*4 ] = offset[0];
            block[ (i+1)*4 + 1 ] = offset[1];
            block[ (i+1)*4 + 2 ] = offset[2];
            block[ (i+1)*4 + 3 ] = offset[3];
        }

        return block;
    }

    // Use this to calculate the Unit Forms block's size before reinsertion
    // Returns: table_size + the sum of the bytes in each entry + 4 per entry + padding
    public int getUnitFormsSize(){
        int size = 0;

        size += 20; // Table size

        try{
            for (int i = 0; i < 2; i++){    // Gundam and Dragonar-1
                size += 2;  // Pointer
                size += UnitForms[0][i].getBytes("Shift-JIS").length;
                size += 2;  // Separator

                size += 2;  // Pointer
                size += UnitForms[1][i].getBytes("Shift-JIS").length;
                size += 2;  // Separator
            }

            for (int i = 0; i < 4; i++){    // Main Super and Upgraded Main Super
                size += 2;  // Pointer
                size += UnitForms[2][i].getBytes("Shift-JIS").length;
                size += 2;  // Separator

                size += 2;  // Pointer
                size += UnitForms[3][i].getBytes("Shift-JIS").length;
                size += 2;  // Separator
            }
        } catch (UnsupportedEncodingException ex){
            System.err.println("ERROR: Unit form wrongly formatted to SJIS");
        }

        // There's a 5th empty entry that uses 2 bytes for a sub-table and 2 bytes for the separator
        size += 4;

        // Size has to be a multiple of 32
        int extraBytes = size % 32;

        if (extraBytes > 0) // If we're not 32-byte aligned
            size += 32 - extraBytes;    // Add padding to the size

        return size;
    }

    // Returns the Unit Forms block as a byte array
    public byte[] getUnitFormsBytes(){
        byte[] result = new byte[getUnitFormsSize()];

        int table_size = 20;

        // Write the first table entry
        result[3] = 0x14; // First value ( 00 00 00 14 )

        int offset = 0;
        int accumulated = table_size;
        int sub_accumulated;
        int sub_table_size;
        byte[] form = null;
        byte[] pointer;

        // Write the rest of the pointers and the values
        for (int i = 0; i < UnitForms.length; i++){
            sub_accumulated = 0;
            sub_table_size = UnitForms[i].length * 2;   // 2-byte pointers

            for (int j = 0; j < UnitForms[i].length; j++){
                // Write the sub-pointer at accumulated + j * 2
                // pointer = sub_table_size + sub_accumulated
                pointer = int2bytes(sub_table_size + sub_accumulated);  // 4-bytes
                offset = accumulated + (j * 2);
                result[offset] = pointer[2];
                result[offset + 1] = pointer[3];

                // Get the form bytes
                try {
                    form = UnitForms[i][j].getBytes("Shift-JIS");
                } catch (UnsupportedEncodingException ex) {
                    Logger.getLogger(UserInterfaceMTE.class.getName()).log(Level.SEVERE, null, ex);
                }

                // Write those bytes in the result
                // at accumulated + sub_table_size + sub_accumulated
                offset = accumulated + sub_table_size + sub_accumulated;

                for (int k = 0; k < form.length; k++)
                    result[offset + k] = form[k];

                sub_accumulated += form.length;
                sub_accumulated += 2;   // Separator
            }

            accumulated += sub_table_size;
            accumulated += sub_accumulated;

            // Write the pointer at the first table at (i + 1) * 4
            // pointer = accumulated
            pointer = int2bytes(accumulated);
            offset = (i + 1) * 4;

            result[offset] = pointer[0];
            result[offset + 1] = pointer[1];
            result[offset + 2] = pointer[2];
            result[offset + 3] = pointer[3];
        }
        // Write the 5th empty Unit Form
        result[accumulated + 1] = 0x02;

        return result;
    }

    // Returns the size of the Character Library, including padding
    public int getCharLibSize(){
        int size = 0;

        size += 1068;   // Table size

        for (int i = 0; i < CharLib.length; i++){
            size += 8;  // preamble is always 8 bytes long
            // There's no separator between the preamble and the hiragana

            try{
                size += CharLib[i].hiragana.getBytes("Shift-JIS").length;   // 1-byte AND 2-byte charactes
                size += 2;  // Separator
                size += CharLib[i].seiyuu.getBytes("Shift-JIS").length;
                size += 2;  // Separator
                size += CharLib[i].description.getBytes("Shift-JIS").length;
                size += 2;  // Separator
            }catch (UnsupportedEncodingException ex){
                System.err.println("ERROR: Character Library entry badly formatted to SJIS.");
            }
        }

        // Size has to be a multiple of 32
        int extraBytes = size % 32;

        if (extraBytes > 0) // If we're not 32-byte aligned
            size += 32 - extraBytes;    // Add padding to the size

        return size;
    }

    // Returns the Character Library block as a byte array
    public byte[] getCharLibBytes(){
        byte[] result = new byte[getCharLibSize()];

        int table_size = 1068;

        // Write the first table entry
        result[2] = 0x04; // First value ( 00 00 04 2c )
        result[3] = 0x2c;

        int offset = 0;
        int accumulated = table_size;
        byte[] entry = null;
        byte[] pointer;

        // Write the rest of the pointers and the values
        for (int i = 0; i < CharLib.length; i++){
            entry = CharLib[i].getBytes();

            for (int j = 0; j < entry.length; j++)
                result[accumulated + j] = entry[j];

            accumulated += entry.length;

            // Write the pointer at the first table at (i + 1) * 4
            // pointer = accumulated
            if (i != CharLib.length - 1){   // Skip the last entry
                pointer = int2bytes(accumulated);
                offset = (i + 1) * 4;

                result[offset] = pointer[0];
                result[offset + 1] = pointer[1];
                result[offset + 2] = pointer[2];
                result[offset + 3] = pointer[3];
            }
        }

        return result;
    }

    // Returns the size of the Robot Library, including padding
    public int getRoboLibSize(){
        int size = 0;

        size += 952;   // Table size

        for (int i = 0; i < RobLib.length; i++){
            size += 10;  // preamble is always 10 bytes long
            // There's no separator between the preamble and the hiragana

            try{
                size += RobLib[i].hiragana.getBytes("Shift-JIS").length;   // 1-byte AND 2-byte charactes
                size += 2;  // Separator
                size += RobLib[i].height.getBytes("Shift-JIS").length;
                size += 2;  // Separator
                size += RobLib[i].weight.getBytes("Shift-JIS").length;
                size += 2;  // Separator
                size += RobLib[i].description.getBytes("Shift-JIS").length;
                size += 2;  // Separator
            }catch(UnsupportedEncodingException ex){
                System.err.println("ERROR: Robot Library entry badly formatted to SJIS.");
            }
        }

        // Size has to be a multiple of 32
        int extraBytes = size % 32;

        if (extraBytes > 0) // If we're not 32-byte aligned
            size += 32 - extraBytes;    // Add padding to the size

        return size;
    }

    // Returns the Character Library block as a byte array
    public byte[] getRoboLibBytes(){
        byte[] result = new byte[getRoboLibSize()];

        int table_size = 952;

        // Write the first table entry
        result[2] = 0x03; // First value ( 00 00 03 b8 )
        result[3] = (byte) 0xb8;

        int offset = 0;
        int accumulated = table_size;
        byte[] entry = null;
        byte[] pointer;

        // Write the rest of the pointers and the values
        for (int i = 0; i < RobLib.length; i++){
            entry = RobLib[i].getBytes();

            for (int j = 0; j < entry.length; j++)
                result[accumulated + j] = entry[j];

            accumulated += entry.length;

            // Write the pointer at the first table at (i + 1) * 4
            // pointer = accumulated
            if (i != RobLib.length - 1){   // Skip the last entry
                pointer = int2bytes(accumulated);
                offset = (i + 1) * 4;

                result[offset] = pointer[0];
                result[offset + 1] = pointer[1];
                result[offset + 2] = pointer[2];
                result[offset + 3] = pointer[3];
            }
        }

        return result;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonBack;
    private javax.swing.JButton buttonJump;
    private javax.swing.JButton buttonNext;
    private javax.swing.JCheckBoxMenuItem checkMenuitemAddSpace;
    private javax.swing.JCheckBoxMenuItem checkMenuitemSJIS;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel labelCLib0;
    private javax.swing.JLabel labelCLib1;
    private javax.swing.JLabel labelCLib2;
    private javax.swing.JLabel labelCLib3;
    private javax.swing.JLabel labelCLibHiragana0;
    private javax.swing.JLabel labelCLibHiragana1;
    private javax.swing.JLabel labelCLibHiragana2;
    private javax.swing.JLabel labelCLibHiragana3;
    private javax.swing.JLabel labelCLibSeiyuu0;
    private javax.swing.JLabel labelCLibSeiyuu1;
    private javax.swing.JLabel labelCLibSeiyuu2;
    private javax.swing.JLabel labelCLibSeiyuu3;
    private javax.swing.JLabel labelChar0;
    private javax.swing.JLabel labelChar1;
    private javax.swing.JLabel labelChar2;
    private javax.swing.JLabel labelChar3;
    private javax.swing.JLabel labelChar4;
    private javax.swing.JLabel labelChar5;
    private javax.swing.JLabel labelChar6;
    private javax.swing.JLabel labelChar7;
    private javax.swing.JLabel labelChar8;
    private javax.swing.JLabel labelChar9;
    private javax.swing.JLabel labelCharFName0;
    private javax.swing.JLabel labelCharFName1;
    private javax.swing.JLabel labelCharFName2;
    private javax.swing.JLabel labelCharFName3;
    private javax.swing.JLabel labelCharFName4;
    private javax.swing.JLabel labelCharFName5;
    private javax.swing.JLabel labelCharFName6;
    private javax.swing.JLabel labelCharFName7;
    private javax.swing.JLabel labelCharFName8;
    private javax.swing.JLabel labelCharFName9;
    private javax.swing.JLabel labelCharSName0;
    private javax.swing.JLabel labelCharSName1;
    private javax.swing.JLabel labelCharSName2;
    private javax.swing.JLabel labelCharSName3;
    private javax.swing.JLabel labelCharSName4;
    private javax.swing.JLabel labelCharSName5;
    private javax.swing.JLabel labelCharSName6;
    private javax.swing.JLabel labelCharSName7;
    private javax.swing.JLabel labelCharSName8;
    private javax.swing.JLabel labelCharSName9;
    private javax.swing.JLabel labelEPart0;
    private javax.swing.JLabel labelEPart1;
    private javax.swing.JLabel labelEPart2;
    private javax.swing.JLabel labelEPart3;
    private javax.swing.JLabel labelEPartDesc0;
    private javax.swing.JLabel labelEPartDesc1;
    private javax.swing.JLabel labelEPartDesc2;
    private javax.swing.JLabel labelEPartDesc3;
    private javax.swing.JLabel labelEPartName0;
    private javax.swing.JLabel labelEPartName1;
    private javax.swing.JLabel labelEPartName2;
    private javax.swing.JLabel labelEPartName3;
    private javax.swing.JLabel labelForm0;
    private javax.swing.JLabel labelForm1;
    private javax.swing.JLabel labelForm2;
    private javax.swing.JLabel labelForm3;
    private javax.swing.JLabel labelFormName1_0;
    private javax.swing.JLabel labelFormName1_1;
    private javax.swing.JLabel labelFormName1_2;
    private javax.swing.JLabel labelFormName1_3;
    private javax.swing.JLabel labelFormName2_0;
    private javax.swing.JLabel labelFormName2_1;
    private javax.swing.JLabel labelFormName2_2;
    private javax.swing.JLabel labelFormName2_3;
    private javax.swing.JLabel labelFormName3_2;
    private javax.swing.JLabel labelFormName3_3;
    private javax.swing.JLabel labelFormName4_2;
    private javax.swing.JLabel labelFormName4_3;
    private javax.swing.JLabel labelJumpTo;
    private javax.swing.JLabel labelPPart0;
    private javax.swing.JLabel labelPPart1;
    private javax.swing.JLabel labelPPart2;
    private javax.swing.JLabel labelPPart3;
    private javax.swing.JLabel labelPPartDesc0;
    private javax.swing.JLabel labelPPartDesc1;
    private javax.swing.JLabel labelPPartDesc2;
    private javax.swing.JLabel labelPPartDesc3;
    private javax.swing.JLabel labelPPartName0;
    private javax.swing.JLabel labelPPartName1;
    private javax.swing.JLabel labelPPartName2;
    private javax.swing.JLabel labelPPartName3;
    private javax.swing.JLabel labelPage;
    private javax.swing.JLabel labelRLib0;
    private javax.swing.JLabel labelRLib1;
    private javax.swing.JLabel labelRLib2;
    private javax.swing.JLabel labelRLib3;
    private javax.swing.JLabel labelRLibHeight0;
    private javax.swing.JLabel labelRLibHeight1;
    private javax.swing.JLabel labelRLibHeight2;
    private javax.swing.JLabel labelRLibHeight3;
    private javax.swing.JLabel labelRLibHiragana0;
    private javax.swing.JLabel labelRLibHiragana1;
    private javax.swing.JLabel labelRLibHiragana2;
    private javax.swing.JLabel labelRLibHiragana3;
    private javax.swing.JLabel labelRLibWeight0;
    private javax.swing.JLabel labelRLibWeight1;
    private javax.swing.JLabel labelRLibWeight2;
    private javax.swing.JLabel labelRLibWeight3;
    private javax.swing.JLabel labelRobot00;
    private javax.swing.JLabel labelRobot01;
    private javax.swing.JLabel labelRobot02;
    private javax.swing.JLabel labelRobot03;
    private javax.swing.JLabel labelRobot04;
    private javax.swing.JLabel labelRobot05;
    private javax.swing.JLabel labelRobot06;
    private javax.swing.JLabel labelRobot07;
    private javax.swing.JLabel labelRobot08;
    private javax.swing.JLabel labelRobot09;
    private javax.swing.JLabel labelRobot10;
    private javax.swing.JLabel labelRobot11;
    private javax.swing.JLabel labelRobot12;
    private javax.swing.JLabel labelRobot13;
    private javax.swing.JLabel labelSeishin0;
    private javax.swing.JLabel labelSeishin1;
    private javax.swing.JLabel labelSeishin2;
    private javax.swing.JLabel labelSeishin3;
    private javax.swing.JLabel labelSeishinDesc0;
    private javax.swing.JLabel labelSeishinDesc1;
    private javax.swing.JLabel labelSeishinDesc2;
    private javax.swing.JLabel labelSeishinDesc3;
    private javax.swing.JLabel labelSeishinName0;
    private javax.swing.JLabel labelSeishinName1;
    private javax.swing.JLabel labelSeishinName2;
    private javax.swing.JLabel labelSeishinName3;
    private javax.swing.JLabel labelSeishinSName0;
    private javax.swing.JLabel labelSeishinSName1;
    private javax.swing.JLabel labelSeishinSName2;
    private javax.swing.JLabel labelSeishinSName3;
    private javax.swing.JLabel labelTerrain00;
    private javax.swing.JLabel labelTerrain01;
    private javax.swing.JLabel labelTerrain02;
    private javax.swing.JLabel labelTerrain03;
    private javax.swing.JLabel labelTerrain04;
    private javax.swing.JLabel labelTerrain05;
    private javax.swing.JLabel labelTerrain06;
    private javax.swing.JLabel labelTerrain07;
    private javax.swing.JLabel labelTerrain08;
    private javax.swing.JLabel labelTerrain09;
    private javax.swing.JLabel labelTerrain10;
    private javax.swing.JLabel labelTerrain11;
    private javax.swing.JLabel labelTerrain12;
    private javax.swing.JLabel labelTerrain13;
    private javax.swing.JLabel labelTitle00;
    private javax.swing.JLabel labelTitle01;
    private javax.swing.JLabel labelTitle02;
    private javax.swing.JLabel labelTitle03;
    private javax.swing.JLabel labelTitle04;
    private javax.swing.JLabel labelTitle05;
    private javax.swing.JLabel labelTitle06;
    private javax.swing.JLabel labelTitle07;
    private javax.swing.JLabel labelTitle08;
    private javax.swing.JLabel labelTitle09;
    private javax.swing.JLabel labelTitle10;
    private javax.swing.JLabel labelTitle11;
    private javax.swing.JLabel labelTitle12;
    private javax.swing.JLabel labelTitle13;
    private javax.swing.JLabel labelWeapon00;
    private javax.swing.JLabel labelWeapon01;
    private javax.swing.JLabel labelWeapon02;
    private javax.swing.JLabel labelWeapon03;
    private javax.swing.JLabel labelWeapon04;
    private javax.swing.JLabel labelWeapon05;
    private javax.swing.JLabel labelWeapon06;
    private javax.swing.JLabel labelWeapon07;
    private javax.swing.JLabel labelWeapon08;
    private javax.swing.JLabel labelWeapon09;
    private javax.swing.JLabel labelWeapon10;
    private javax.swing.JLabel labelWeapon11;
    private javax.swing.JLabel labelWeapon12;
    private javax.swing.JLabel labelWeapon13;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenu menuEdit;
    private javax.swing.JMenu menuFile;
    private javax.swing.JMenuItem menuitemExit;
    private javax.swing.JMenuItem menuitemOpen;
    private javax.swing.JMenuItem menuitemSaveAs;
    private javax.swing.JPanel panelNavigation;
    private javax.swing.JScrollPane scrollCLib0;
    private javax.swing.JScrollPane scrollCLib1;
    private javax.swing.JScrollPane scrollCLib2;
    private javax.swing.JScrollPane scrollCLib3;
    private javax.swing.JScrollPane scrollRLib0;
    private javax.swing.JScrollPane scrollRLib1;
    private javax.swing.JScrollPane scrollRLib2;
    private javax.swing.JScrollPane scrollRLib3;
    private javax.swing.JPanel tabCharLib;
    private javax.swing.JPanel tabCharacters;
    private javax.swing.JPanel tabEParts;
    private javax.swing.JPanel tabForms;
    private javax.swing.JPanel tabPParts;
    private javax.swing.JPanel tabRobLib;
    private javax.swing.JPanel tabRobots;
    private javax.swing.JPanel tabSeishins;
    private javax.swing.JPanel tabTerrains;
    private javax.swing.JPanel tabTitles;
    private javax.swing.JPanel tabWeapons;
    private javax.swing.JTabbedPane tabsPanel;
    private javax.swing.JTextArea textareaCLib0;
    private javax.swing.JTextArea textareaCLib1;
    private javax.swing.JTextArea textareaCLib2;
    private javax.swing.JTextArea textareaCLib3;
    private javax.swing.JTextArea textareaRLib0;
    private javax.swing.JTextArea textareaRLib1;
    private javax.swing.JTextArea textareaRLib2;
    private javax.swing.JTextArea textareaRLib3;
    private javax.swing.JTextField textfieldCLibHiragana0;
    private javax.swing.JTextField textfieldCLibHiragana1;
    private javax.swing.JTextField textfieldCLibHiragana2;
    private javax.swing.JTextField textfieldCLibHiragana3;
    private javax.swing.JTextField textfieldCLibSeiyuu0;
    private javax.swing.JTextField textfieldCLibSeiyuu1;
    private javax.swing.JTextField textfieldCLibSeiyuu2;
    private javax.swing.JTextField textfieldCLibSeiyuu3;
    private javax.swing.JTextField textfieldCharFName0;
    private javax.swing.JTextField textfieldCharFName1;
    private javax.swing.JTextField textfieldCharFName2;
    private javax.swing.JTextField textfieldCharFName3;
    private javax.swing.JTextField textfieldCharFName4;
    private javax.swing.JTextField textfieldCharFName5;
    private javax.swing.JTextField textfieldCharFName6;
    private javax.swing.JTextField textfieldCharFName7;
    private javax.swing.JTextField textfieldCharFName8;
    private javax.swing.JTextField textfieldCharFName9;
    private javax.swing.JTextField textfieldCharSName0;
    private javax.swing.JTextField textfieldCharSName1;
    private javax.swing.JTextField textfieldCharSName2;
    private javax.swing.JTextField textfieldCharSName3;
    private javax.swing.JTextField textfieldCharSName4;
    private javax.swing.JTextField textfieldCharSName5;
    private javax.swing.JTextField textfieldCharSName6;
    private javax.swing.JTextField textfieldCharSName7;
    private javax.swing.JTextField textfieldCharSName8;
    private javax.swing.JTextField textfieldCharSName9;
    private javax.swing.JTextField textfieldEPartDesc1_0;
    private javax.swing.JTextField textfieldEPartDesc1_1;
    private javax.swing.JTextField textfieldEPartDesc1_2;
    private javax.swing.JTextField textfieldEPartDesc1_3;
    private javax.swing.JTextField textfieldEPartDesc2_0;
    private javax.swing.JTextField textfieldEPartDesc2_1;
    private javax.swing.JTextField textfieldEPartDesc2_2;
    private javax.swing.JTextField textfieldEPartDesc2_3;
    private javax.swing.JTextField textfieldEPartDesc3_0;
    private javax.swing.JTextField textfieldEPartDesc3_1;
    private javax.swing.JTextField textfieldEPartDesc3_2;
    private javax.swing.JTextField textfieldEPartDesc3_3;
    private javax.swing.JTextField textfieldEPartName0;
    private javax.swing.JTextField textfieldEPartName1;
    private javax.swing.JTextField textfieldEPartName2;
    private javax.swing.JTextField textfieldEPartName3;
    private javax.swing.JTextField textfieldFormName1_0;
    private javax.swing.JTextField textfieldFormName1_1;
    private javax.swing.JTextField textfieldFormName1_2;
    private javax.swing.JTextField textfieldFormName1_3;
    private javax.swing.JTextField textfieldFormName2_0;
    private javax.swing.JTextField textfieldFormName2_1;
    private javax.swing.JTextField textfieldFormName2_2;
    private javax.swing.JTextField textfieldFormName2_3;
    private javax.swing.JTextField textfieldFormName3_2;
    private javax.swing.JTextField textfieldFormName3_3;
    private javax.swing.JTextField textfieldFormName4_2;
    private javax.swing.JTextField textfieldFormName4_3;
    private javax.swing.JTextField textfieldJumpTo;
    private javax.swing.JTextField textfieldPPartDesc1_0;
    private javax.swing.JTextField textfieldPPartDesc1_1;
    private javax.swing.JTextField textfieldPPartDesc1_2;
    private javax.swing.JTextField textfieldPPartDesc1_3;
    private javax.swing.JTextField textfieldPPartDesc2_0;
    private javax.swing.JTextField textfieldPPartDesc2_1;
    private javax.swing.JTextField textfieldPPartDesc2_2;
    private javax.swing.JTextField textfieldPPartDesc2_3;
    private javax.swing.JTextField textfieldPPartDesc3_0;
    private javax.swing.JTextField textfieldPPartDesc3_1;
    private javax.swing.JTextField textfieldPPartDesc3_2;
    private javax.swing.JTextField textfieldPPartDesc3_3;
    private javax.swing.JTextField textfieldPPartName0;
    private javax.swing.JTextField textfieldPPartName1;
    private javax.swing.JTextField textfieldPPartName2;
    private javax.swing.JTextField textfieldPPartName3;
    private javax.swing.JTextField textfieldRLibHeight0;
    private javax.swing.JTextField textfieldRLibHeight1;
    private javax.swing.JTextField textfieldRLibHeight2;
    private javax.swing.JTextField textfieldRLibHeight3;
    private javax.swing.JTextField textfieldRLibHiragana0;
    private javax.swing.JTextField textfieldRLibHiragana1;
    private javax.swing.JTextField textfieldRLibHiragana2;
    private javax.swing.JTextField textfieldRLibHiragana3;
    private javax.swing.JTextField textfieldRLibWeight0;
    private javax.swing.JTextField textfieldRLibWeight1;
    private javax.swing.JTextField textfieldRLibWeight2;
    private javax.swing.JTextField textfieldRLibWeight3;
    private javax.swing.JTextField textfieldRobot00;
    private javax.swing.JTextField textfieldRobot01;
    private javax.swing.JTextField textfieldRobot02;
    private javax.swing.JTextField textfieldRobot03;
    private javax.swing.JTextField textfieldRobot04;
    private javax.swing.JTextField textfieldRobot05;
    private javax.swing.JTextField textfieldRobot06;
    private javax.swing.JTextField textfieldRobot07;
    private javax.swing.JTextField textfieldRobot08;
    private javax.swing.JTextField textfieldRobot09;
    private javax.swing.JTextField textfieldRobot10;
    private javax.swing.JTextField textfieldRobot11;
    private javax.swing.JTextField textfieldRobot12;
    private javax.swing.JTextField textfieldRobot13;
    private javax.swing.JTextField textfieldSeishinDesc1_0;
    private javax.swing.JTextField textfieldSeishinDesc1_1;
    private javax.swing.JTextField textfieldSeishinDesc1_2;
    private javax.swing.JTextField textfieldSeishinDesc1_3;
    private javax.swing.JTextField textfieldSeishinDesc2_0;
    private javax.swing.JTextField textfieldSeishinDesc2_1;
    private javax.swing.JTextField textfieldSeishinDesc2_2;
    private javax.swing.JTextField textfieldSeishinDesc2_3;
    private javax.swing.JTextField textfieldSeishinDesc3_0;
    private javax.swing.JTextField textfieldSeishinDesc3_1;
    private javax.swing.JTextField textfieldSeishinDesc3_2;
    private javax.swing.JTextField textfieldSeishinDesc3_3;
    private javax.swing.JTextField textfieldSeishinName0;
    private javax.swing.JTextField textfieldSeishinName1;
    private javax.swing.JTextField textfieldSeishinName2;
    private javax.swing.JTextField textfieldSeishinName3;
    private javax.swing.JTextField textfieldSeishinSName0;
    private javax.swing.JTextField textfieldSeishinSName1;
    private javax.swing.JTextField textfieldSeishinSName2;
    private javax.swing.JTextField textfieldSeishinSName3;
    private javax.swing.JTextField textfieldTerrain00;
    private javax.swing.JTextField textfieldTerrain01;
    private javax.swing.JTextField textfieldTerrain02;
    private javax.swing.JTextField textfieldTerrain03;
    private javax.swing.JTextField textfieldTerrain04;
    private javax.swing.JTextField textfieldTerrain05;
    private javax.swing.JTextField textfieldTerrain06;
    private javax.swing.JTextField textfieldTerrain07;
    private javax.swing.JTextField textfieldTerrain08;
    private javax.swing.JTextField textfieldTerrain09;
    private javax.swing.JTextField textfieldTerrain10;
    private javax.swing.JTextField textfieldTerrain11;
    private javax.swing.JTextField textfieldTerrain12;
    private javax.swing.JTextField textfieldTerrain13;
    private javax.swing.JTextField textfieldTitle00;
    private javax.swing.JTextField textfieldTitle01;
    private javax.swing.JTextField textfieldTitle02;
    private javax.swing.JTextField textfieldTitle03;
    private javax.swing.JTextField textfieldTitle04;
    private javax.swing.JTextField textfieldTitle05;
    private javax.swing.JTextField textfieldTitle06;
    private javax.swing.JTextField textfieldTitle07;
    private javax.swing.JTextField textfieldTitle08;
    private javax.swing.JTextField textfieldTitle09;
    private javax.swing.JTextField textfieldTitle10;
    private javax.swing.JTextField textfieldTitle11;
    private javax.swing.JTextField textfieldTitle12;
    private javax.swing.JTextField textfieldTitle13;
    private javax.swing.JTextField textfieldWeapon00;
    private javax.swing.JTextField textfieldWeapon01;
    private javax.swing.JTextField textfieldWeapon02;
    private javax.swing.JTextField textfieldWeapon03;
    private javax.swing.JTextField textfieldWeapon04;
    private javax.swing.JTextField textfieldWeapon05;
    private javax.swing.JTextField textfieldWeapon06;
    private javax.swing.JTextField textfieldWeapon07;
    private javax.swing.JTextField textfieldWeapon08;
    private javax.swing.JTextField textfieldWeapon09;
    private javax.swing.JTextField textfieldWeapon10;
    private javax.swing.JTextField textfieldWeapon11;
    private javax.swing.JTextField textfieldWeapon12;
    private javax.swing.JTextField textfieldWeapon13;
    // End of variables declaration//GEN-END:variables

}
